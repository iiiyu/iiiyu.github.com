<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>萧宸宇</title>
  <subtitle>如果不能成为拯救世界的神，那就堕落到征服世界的魔吧。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iiiyu.com/"/>
  <updated>2016-06-14T16:11:05.000Z</updated>
  <id>http://iiiyu.com/</id>
  
  <author>
    <name>ChenYu Xiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新 iOS Human Interface Guidelines  产品解读 （一）</title>
    <link href="http://iiiyu.com/2016/06/14/2016-iOS-Human-Interface-Guidelines-1/"/>
    <id>http://iiiyu.com/2016/06/14/2016-iOS-Human-Interface-Guidelines-1/</id>
    <published>2016-06-14T15:11:34.000Z</published>
    <updated>2016-06-14T16:11:05.000Z</updated>
    
    <content type="html">&lt;p&gt;本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;What’s-New-in-iOS-10&quot;&gt;&lt;a href=&quot;#What’s-New-in-iOS-10&quot; class=&quot;headerlink&quot; title=&quot;What’s New in iOS 10&quot;&gt;&lt;/a&gt;What’s New in iOS 10&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;小部件&lt;br&gt;&lt;img src=&quot;https://developer.apple.com/ios/human-interface-guidelines/images/whatsnew_widgets.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;整合Message&lt;br&gt;&lt;img src=&quot;https://developer.apple.com/ios/human-interface-guidelines/images/whatsnew_messaging.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;整合Siri&lt;br&gt;&lt;img src=&quot;https://developer.apple.com/ios/human-interface-guidelines/images/whatsnew_siri.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;扩展通知&lt;br&gt;&lt;img src=&quot;https://developer.apple.com/ios/human-interface-guidelines/images/whatsnew_notifications.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;产品解读&quot;&gt;&lt;a href=&quot;#产品解读&quot; class=&quot;headerlink&quot; title=&quot;产品解读&quot;&gt;&lt;/a&gt;产品解读&lt;/h2&gt;&lt;h3 id=&quot;小部件&quot;&gt;&lt;a href=&quot;#小部件&quot; class=&quot;headerlink&quot; title=&quot;小部件&quot;&gt;&lt;/a&gt;小部件&lt;/h3&gt;&lt;p&gt;小部件目前感觉用处不大啊，虽然进化了更加强大。但是个人在之前的使用并不多。另外现在一按Home就指纹识别进去了。暂时觉得停留在锁屏的情况略少。&lt;/p&gt;
&lt;h3 id=&quot;整合Message&quot;&gt;&lt;a href=&quot;#整合Message&quot; class=&quot;headerlink&quot; title=&quot;整合Message&quot;&gt;&lt;/a&gt;整合Message&lt;/h3&gt;&lt;p&gt;Message 杀入已经不知道竞争有多激烈的 IM 战场。时机看上去偏向略晚，但是有些事情虽然做了有99%失败的可能，但是如果不做的话，那就是完全没可能。在 iOS 10 之前， Message 对我来说只是一个短信的补充，方便我跟用 iPhone 的朋友不需要用短信联系。随着6月14日凌晨的发布以后，看上去做为更加开放的 iOS 生态中重要的一个环节， Message 允许其他应用的调用以后。用户整个关系链就从通讯录直接变成了整个 iPhone。 你们 Facebook、 WeChat、Snapchat 不是号称是巨无霸 App 么。说将来只需要安装这些App就好了，这样其他应用要怎么活啊。Apple 把 Message 这种系统级别的功能开放出来，意味着让关系链从系统级别植入到App，也能缓解一些巨无霸 App 取代系统的趋势。&lt;/p&gt;
&lt;p&gt;举个例子：比如说我有个工具类美颜App，想要变成一个社交属性。直接去维护一个用户系统和关系链要投入多少啊，现在只要接入Message，关系链立马就获取到了。我认为是对小型团队和独立开发者是利好消息。由此往下想的话，Message里面迟早会出现类似朋友圈的东西？&lt;/p&gt;
&lt;p&gt;当然 Message 做为 IM 的缺点显而易见。 Apple 封闭的生态环境里面。 Apple 整个系列都可以使用的很爽，但是放到真实的我们这个接近八成都用 Android 的世界里面。仅仅只是 iPhone 关系链是无法做到一个全世界的 IM 的。像不像微软一样，踏不踏入敌人的领域里面去开疆拓土，这是一个我只能静观其变的结果。&lt;/p&gt;
&lt;p&gt;PS：开放出发送消息的接口，会不会被国内众多的垃圾信息所利用也是值得当心的一点。&lt;/p&gt;
&lt;h3 id=&quot;整合Siri&quot;&gt;&lt;a href=&quot;#整合Siri&quot; class=&quot;headerlink&quot; title=&quot;整合Siri&quot;&gt;&lt;/a&gt;整合Siri&lt;/h3&gt;&lt;p&gt;从 Siri 出现的第一天起，我就不止一次的 YY Siri 能用到自己的产品上，那种在10年或者20年前电影里面的人工智能场景，终于离我们的生活更加进了一步。&lt;/p&gt;
&lt;p&gt;同整合 Message 一样， Siri 的开发 API，为应用的入口增加了一种可能性，让应用跟 iPhone 继续的浑然天成。虽然说对着 iPhone 自顾自的说话确实有点傻，但是我拿Siri定个闹钟，记个提醒事项还是很方便的。所以等待合适场景的App出现，Siri 的利用率会越来越高的。&lt;/p&gt;
&lt;h3 id=&quot;扩展的通知消息&quot;&gt;&lt;a href=&quot;#扩展的通知消息&quot; class=&quot;headerlink&quot; title=&quot;扩展的通知消息&quot;&gt;&lt;/a&gt;扩展的通知消息&lt;/h3&gt;&lt;p&gt;在通知消息上可以定义更多的功能和事件，在一些不想解锁的情况下提高效率。举个例子：欧洲杯刚刚结束一场比赛，一个App推送比分过来，你想知道谁进的球，只用双指一扩，就可以看到比赛的简报，简单方便。&lt;/p&gt;
&lt;p&gt;简单的来说是通知可以做的事情更多了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;目前为止，我看到大量的 3D Touch 技术在 iOS 10 上的应用。也就是说当前 iPhone 的保鲜期为1年，2年前买的 iPhone 6 和 iPhone 6 Plus 已经不能享受最新的 iOS 版本进化福利。阴谋论的恶意揣测一下这难道是 Apple 为了提高 iPhone 销量的手段之一么？&lt;/p&gt;
&lt;p&gt;也看到了在一个大环境是封闭体系的情况下，Apple 在为开放做出的种种努力和变化。 不论是 Swift 的开源， 还是 iOS 10 把系统应用的一些API逐渐提供出来。至少今天，世界变得美好了那么一点点。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
    
    </summary>
    
    
      <category term="产品思考" scheme="http://iiiyu.com/tags/%E4%BA%A7%E5%93%81%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>鱼子酱的胡思乱想 —— 天下武功唯快不破</title>
    <link href="http://iiiyu.com/2016/02/23/A-product-manager-cranky-Martial-arts-world-but-not-fast-breaking/"/>
    <id>http://iiiyu.com/2016/02/23/A-product-manager-cranky-Martial-arts-world-but-not-fast-breaking/</id>
    <published>2016-02-23T15:36:06.000Z</published>
    <updated>2016-02-25T09:28:18.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;用快强行解释什么是价值&quot;&gt;&lt;a href=&quot;#用快强行解释什么是价值&quot; class=&quot;headerlink&quot; title=&quot;用快强行解释什么是价值&quot;&gt;&lt;/a&gt;用快强行解释什么是价值&lt;/h2&gt;&lt;p&gt;我们常常说，要做带给用户有价值的东西。但是到底什么是有价值的东西呢？如果用快来解释的话，大概分两种情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;之前做不到，但是之后可以做到。&lt;/li&gt;
&lt;li&gt;之前只能很慢的做到，之后能更快的做到。&lt;br&gt;这两种情况都能给用户带来价值。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;用快强行解释传统行业的例子&quot;&gt;&lt;a href=&quot;#用快强行解释传统行业的例子&quot; class=&quot;headerlink&quot; title=&quot;用快强行解释传统行业的例子&quot;&gt;&lt;/a&gt;用快强行解释传统行业的例子&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;为了更快的行动速度：飞机&amp;gt;高铁&amp;gt;汽车&amp;gt;马车&amp;gt;双腿。&lt;/li&gt;
&lt;li&gt;麦当劳肯德基更快的做出食物&lt;/li&gt;
&lt;li&gt;机械化农业更快的完成工作&lt;/li&gt;
&lt;li&gt;机械化工业同上&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;他们产生的经济效益也是类似的，越快得到的利润越多。&lt;/p&gt;
&lt;h2 id=&quot;用快强行解释移动互联网的例子&quot;&gt;&lt;a href=&quot;#用快强行解释移动互联网的例子&quot; class=&quot;headerlink&quot; title=&quot;用快强行解释移动互联网的例子&quot;&gt;&lt;/a&gt;用快强行解释移动互联网的例子&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;微信是做到了更快的交流（个人认为 Telegram 更快一些）&lt;/li&gt;
&lt;li&gt;Uber做到了更快的叫车服务（滴滴一样）&lt;/li&gt;
&lt;li&gt;ele做到了更快的送餐服务（美团、百度等等外卖一样）&lt;/li&gt;
&lt;li&gt;陌陌做到了更快搭讪陌生人&lt;/li&gt;
&lt;li&gt;支付宝做到了更快的付款（微信跟支付宝差不多， Apple Pay 更快但是层面不是同样的东西）&lt;/li&gt;
&lt;li&gt;众地图应用做到了更快的导航寻路&lt;/li&gt;
&lt;li&gt;微博做到了更快的扩散内容&lt;br&gt;……&lt;br&gt;等等等这个列表可以一直列下去。所有做的好的产品都可以强行用快来解释。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;得到的简单结论-——-天下武功唯快不破&quot;&gt;&lt;a href=&quot;#得到的简单结论-——-天下武功唯快不破&quot; class=&quot;headerlink&quot; title=&quot;得到的简单结论 —— 天下武功唯快不破&quot;&gt;&lt;/a&gt;得到的简单结论 —— 天下武功唯快不破&lt;/h2&gt;&lt;p&gt;简单的判断一个产品有没用价值，价值的大小。可以跟现有产品进行比较，如果它比现有产品更快达到目的那就是有价值的东西。提高的速度越快，相应的价值也就越大。&lt;/p&gt;
&lt;p&gt;因此在做产品或者是创业中， 就算撞车到了一个相同领域。只要你能保持是同类产品中最快解决问题的。那就是能保持竞争优势。而且这里的快是更加广义的快，你的技术团队比对手跟快的迭代产品，你的公关比对手更快的消除负面影响。你的运营团队能比对手更快的写出高质量的内容。 殊途同归 —— 天下武功唯快不破&lt;/p&gt;
&lt;p&gt;当然只用快来衡量价值是片面的，不严谨的。思考到这里，我突然觉的可以用一些简单的理论和数值来构建一个简单的价值计算公式。不过那就是后面看看我有没有心情把他写出来吧。&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;年前爆出的张小龙的饭否其中有句这样的话“要提防那些blog写得好的产品经理，因为在Blog上花的时间越多，在产品上花的时间就越少。原来还以为有例外，现在看起来无一例外。”&lt;/p&gt;
&lt;p&gt;由此引发出来“要提防那些Blog写得好的程序员，因为在Blog上花的时间越多，在工作上花的时间就越少。原来还以为有例外，现在看起来无一例外。”&lt;/p&gt;
&lt;p&gt;五味杂陈，到底要不要写Blog的。我不知道自己算不算blog写的好。如果不算，那岂不是变成Blog也写的烂，产品 or 技术也烂的人。 如果算，那是不是仅仅是Blog写的好呢。&lt;/p&gt;
&lt;p&gt;我承认，如果我要产出一个我觉得还行的文章，我起码需要四五个小时的时间，一般横跨2-3天的时间。我也知道很多对这个世界有着很多独特的思考的产品大牛和技术大牛。他们忙着做自己想做的事情，并没有时间写Blog。不写Blog并不妨碍他们成为大牛。我也还见过一些天天在SNS上蹦跶，发篇Blog恨不得把所有人都@上，其实水平可能还需要更多时间的打磨的人。&lt;/p&gt;
&lt;p&gt;兜兜转转，我想天下熙熙攘攘，就算是一条咸鱼，我要努力证明我的不同。继续写Blog吧！！！&lt;/p&gt;
&lt;p&gt;PS: 欢迎关注我的微信公众号:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/686e6613gw1f1av4hci21j2076076aaj.jpg&quot; alt=&quot;qrcode_for_gh_6b76eb7cbc83_258.jpg&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用快强行解释什么是价值&quot;&gt;&lt;a href=&quot;#用快强行解释什么是价值&quot; class=&quot;headerlink&quot; title=&quot;用快强行解释什么是价值&quot;&gt;&lt;/a&gt;用快强行解释什么是价值&lt;/h2&gt;&lt;p&gt;我们常常说，要做带给用户有价值的东西。但是到底什么是有价值的东西呢？
    
    </summary>
    
    
      <category term="PM" scheme="http://iiiyu.com/tags/PM/"/>
    
      <category term="产品汪" scheme="http://iiiyu.com/tags/%E4%BA%A7%E5%93%81%E6%B1%AA/"/>
    
      <category term="胡思乱想" scheme="http://iiiyu.com/tags/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记「微信思维」</title>
    <link href="http://iiiyu.com/2016/01/25/Read-Wechat-Thinking-Note/"/>
    <id>http://iiiyu.com/2016/01/25/Read-Wechat-Thinking-Note/</id>
    <published>2016-01-25T04:29:21.000Z</published>
    <updated>2016-01-28T06:45:49.000Z</updated>
    
    <content type="html">&lt;p&gt;本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭。本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;先感慨一句，在看不见的地方，有很多人都比我更加努力！&lt;/p&gt;
&lt;h2 id=&quot;导读&quot;&gt;&lt;a href=&quot;#导读&quot; class=&quot;headerlink&quot; title=&quot;导读&quot;&gt;&lt;/a&gt;导读&lt;/h2&gt;&lt;p&gt;厚厚一本，其实读起来还是挺快的。3个小时左右初略的看完一次。整个书是用了一些真实的案例来说明。但微信这个天朝移动互联网最大的平台。在开放现有资源的情况下是怎么建立新的世界次序的。微信真的改变了中国人的生活。&lt;/p&gt;
&lt;p&gt;以下文字重点在看案例以后的感想&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h3&gt;&lt;p&gt;案例：好药师&lt;/p&gt;
&lt;p&gt;感想：看的时候嘘唏不已。在2013年的时候，无意得知云南一心堂在想推进电子商务，过年回家的时候就过去跟某部门负责人谈了谈。心中冒出很多有趣的想法，其中最重要的就是，一心堂已经有售药牌照的情况下，在已有的店铺和仓储物流上。以最后一公里送药上门的切入点，最后变成一个综合性电商。可以自己做或者考虑跟京东置换资源(当时觉得两家都没有上市，虽然jd大，但是一心堂的地区优势明显，而且有药品这种类型是jd缺乏的)。不过鉴于我一直是微小一般的存在。也许根本无法推动这种事情的发生。&lt;/p&gt;
&lt;p&gt;案例：联想&lt;/p&gt;
&lt;p&gt;感想：当联想在我家那种一百八十五线小城市里面都可以开起2、3家专门店的庞然大物（也许是山寨的）。通过微信的平台，转化建立了一个更加现代的销售渠道。&lt;/p&gt;
&lt;h3 id=&quot;第二章&quot;&gt;&lt;a href=&quot;#第二章&quot; class=&quot;headerlink&quot; title=&quot;第二章&quot;&gt;&lt;/a&gt;第二章&lt;/h3&gt;&lt;p&gt;案例：唯品会&lt;br&gt;案例：小米&lt;/p&gt;
&lt;p&gt;感想：就算是这两年的当红炸子鸡，也非常重视微信里面的服务接入。也是他们在玩更加大的社群。比起，之前见过那些号称微信营销专业公司来说。他们玩的更正道，更大。&lt;/p&gt;
&lt;h3 id=&quot;第三章&quot;&gt;&lt;a href=&quot;#第三章&quot; class=&quot;headerlink&quot; title=&quot;第三章&quot;&gt;&lt;/a&gt;第三章&lt;/h3&gt;&lt;p&gt;案例：泰康&lt;/p&gt;
&lt;p&gt;感想：我妈貌似退休以后，闲不下来，去参加了什么保险业务。没记错的话就是泰康，我是没有耐心教我妈一点一点用微信的。但是她最近一次见我，在说泰康这个好科学，用微信就可以获得什么什么疾病金额。我想能覆盖到那么边疆的地区确实做的很牛逼。当互联网袭卷全行业的时候，保险这一大块必定是巨大的蛋糕。不过也不是随随便便能玩起的。玩不好就是跟那些P2P跑路金融一个样子了。&lt;/p&gt;
&lt;p&gt;案例：汇添富&lt;/p&gt;
&lt;p&gt;感想：微信是个好东西&lt;/p&gt;
&lt;p&gt;案例：智能酒店&lt;/p&gt;
&lt;p&gt;感想：跟北京的冯总在做类似的东西，但是比冯总那种东西要高级多了。另外他们都以为酒店里面可以做社交，怎么想都不可能。除非你是提供生理需求服务。要不谁会去认识住你隔壁昨天传出销魂声音的人。然后也都有一个点，就是说酒店里面的东西可以买回家。无可厚非，但是也只是一个客流量小到忽略不计的山寨宜家而已。反正我觉得不赚钱。&lt;/p&gt;
&lt;p&gt;案例：美丽说&lt;/p&gt;
&lt;p&gt;感想：绕不开的微信&lt;/p&gt;
&lt;h3 id=&quot;第四章&quot;&gt;&lt;a href=&quot;#第四章&quot; class=&quot;headerlink&quot; title=&quot;第四章&quot;&gt;&lt;/a&gt;第四章&lt;/h3&gt;&lt;p&gt;案例：武汉交管局&lt;/p&gt;
&lt;p&gt;感想：天朝行政机关如果都这样搞，天朝人民的幸福指数会得到指数级别的增长。但是聪明人都知道这里不好弄，所以我们可预见的时间里面很难看到好事情的发生。&lt;/p&gt;
&lt;p&gt;案例：王府井&lt;/p&gt;
&lt;p&gt;感想：微信改变传统零售行业&lt;/p&gt;
&lt;h3 id=&quot;第五章&quot;&gt;&lt;a href=&quot;#第五章&quot; class=&quot;headerlink&quot; title=&quot;第五章&quot;&gt;&lt;/a&gt;第五章&lt;/h3&gt;&lt;p&gt;案例：海底捞&lt;/p&gt;
&lt;p&gt;感想：海底捞无愧良心企业。目前没看到第二家。&lt;/p&gt;
&lt;p&gt;案例：顺丰&lt;/p&gt;
&lt;p&gt;感想：说完就打了自己的脸，顺丰就是第二家。有个事情其实挺好玩的，就是顺丰已开始有推送完整的路由节点过来。后面因为干扰用户太多自己改掉了。这跟张小龙的思维是一模一样的啊，其实我还挺喜欢那个功能的。&lt;/p&gt;
&lt;p&gt;案例：蘑菇街&lt;/p&gt;
&lt;p&gt;感想：有了美丽说，怎么能没有蘑菇街。而且当下这个时间点，美丽说和蘑菇街都合体了。&lt;/p&gt;
&lt;p&gt;案例：深圳供电局&lt;/p&gt;
&lt;p&gt;感想：跟上面交管局一样，其实互联网发展到今天。我们在一些基础功能服务上可以优化的地方太多太多了。稍微努力一点点，就能让我们在天朝的生活指数上升几个台阶&lt;/p&gt;
&lt;h3 id=&quot;在微信里面观察到有趣的事情&quot;&gt;&lt;a href=&quot;#在微信里面观察到有趣的事情&quot; class=&quot;headerlink&quot; title=&quot;在微信里面观察到有趣的事情&quot;&gt;&lt;/a&gt;在微信里面观察到有趣的事情&lt;/h3&gt;&lt;h4 id=&quot;平台中诞生了新的平台&quot;&gt;&lt;a href=&quot;#平台中诞生了新的平台&quot; class=&quot;headerlink&quot; title=&quot;平台中诞生了新的平台&quot;&gt;&lt;/a&gt;平台中诞生了新的平台&lt;/h4&gt;&lt;p&gt;在某一个时刻，我突然观察到一个有趣的现象。老的平台中会出现一个新的完全不一样的平台，然后在某个时刻点会有人跳出来说，新的平台即将替代老的平台。最近的例子就是张小龙说要出现应用号，又有各种分析家再说，iOS，Android等要死。以后一个微信就够了。这里我只关心其中有趣的部分，iOS 等作为移动互联网的基本平台，让所有的 App 能发挥其价值。而当出现了一个类似微信这种体量级别的 App 形成新的平台的时候，居然要代替他们了。如果这一天真的会发生，那 Apple 当初还会提供开放出来整个生态环境吗？那是不是在将来微信这样的平台里面也会诞生一个新的平台并且取代微信呢？ 我觉得这种思路想想就特别有趣。&lt;/p&gt;
&lt;p&gt;当然新旧更替是正常的自然法则，应当抱有一个积极的态度去迎接技术和时代的变革。只是对于我这样一个念旧的人来说，断舍离还是说容易，做到其实很难。&lt;/p&gt;
&lt;h4 id=&quot;为用户的利益为第一考虑要素&quot;&gt;&lt;a href=&quot;#为用户的利益为第一考虑要素&quot; class=&quot;headerlink&quot; title=&quot;为用户的利益为第一考虑要素&quot;&gt;&lt;/a&gt;为用户的利益为第一考虑要素&lt;/h4&gt;&lt;p&gt;其实类似的思想的说法有很多，“用户是上帝”，“用户说的都是对的”，等等。但是95%以上都在说说而已。我都觉得我都不必特别说明，大家都可以举出一大堆的例子出来。&lt;/p&gt;
&lt;p&gt;而在张小龙最近在微信公开课里面演讲中，他明确的表示，希望在微信里面用户用完即走。我保守估计微信在手机上的使用时长绝对能排进中国移动互联网用户99%人里面的前三。但是微信的最高决策者却在思考怎么让用户用完即走。但全世界都在争留存，争打开率，争使用时长的时候。居然龙头老大是在做相反的事情，是以用户利益为导向的事情。&lt;/p&gt;
&lt;p&gt;这时候，我就在想。是先做了以用户利益为导向的事情，才获得了龙头老大的江湖地位。还是以龙头老大的江湖地位，才想到了用户利益为重要。我想，微信在这里是前者。而天朝某些厂家是连后者都不是。他们信奉着以钱为导向，如果出现一些还不错的产品，那是副产品。不能算初心。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;这本书告诉我们，用现代的方式提供有价值的产品，是会获得巨大的成功的。而这个现代的方式就是微信这样一个中国移动互联网最大的平台。作为一个产品，我应该去深刻的理解这个事情的价值。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭。本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;先感慨一句，在看不见的地方，有很多人都比我更加努力！&lt;/p&gt;
&lt;h2 id=&quot;导读&quot;&gt;&lt;a href=&quot;#导读&quot; class=&quot;headerlink&quot; title=&quot;导读&quot;&gt;&lt;/a&gt;导读&lt;/h2&gt;&lt;p&gt;厚厚一本，其实读起来还是挺快的。3个小时左右初略的看完一次。整个书是用了一些真实的案例来说明。但微信这个天朝移动互联网最大的平台。在开放现有资源的情况下是怎么建立新的世界次序的。微信真的改变了中国人的生活。&lt;/p&gt;
&lt;p&gt;以下文字重点在看案例以后的感想&lt;/p&gt;
    
    </summary>
    
    
      <category term="read book notes" scheme="http://iiiyu.com/tags/read-book-notes/"/>
    
  </entry>
  
  <entry>
    <title>CoreData VS Realm （2016-02-23更新）</title>
    <link href="http://iiiyu.com/2016/01/19/CoreData-VS-Realm/"/>
    <id>http://iiiyu.com/2016/01/19/CoreData-VS-Realm/</id>
    <published>2016-01-19T02:22:16.000Z</published>
    <updated>2016-05-26T03:30:08.000Z</updated>
    
    <content type="html">&lt;p&gt;本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;OhMyStar 2 也进行了一段时日，我把持久化的方式从CoreData 换到了 Realm。有些感悟，顺手就记录一下吧。以下评论都是自己很主观的感受，无实际测试数据支持。&lt;/p&gt;
&lt;h2 id=&quot;论-iOS-的持久化&quot;&gt;&lt;a href=&quot;#论-iOS-的持久化&quot; class=&quot;headerlink&quot; title=&quot;论 iOS 的持久化&quot;&gt;&lt;/a&gt;论 iOS 的持久化&lt;/h2&gt;&lt;p&gt;iOS 持久化其实也没多少选择， 高端一点CoreData、Realm、FMDB、KV类(LevelDB等)。低端一些直接一个 NSArray 就写成 Plist 也能持久化下来。&lt;/p&gt;
&lt;p&gt;在网络环境越来越快的当下和大部分应用数据都可能是网络应用，如果业务逻辑并不复杂，其实极端一点就只用写到 JSON 转 Object 就好了。而且一堆这样好用的封装，远有&lt;a href=&quot;https://github.com/Mantle/Mantle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mantle&lt;/a&gt; 近有&lt;a href=&quot;https://github.com/ibireme/YYModel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YYModel&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所以需要持久化的时候，我觉的可以慎重的评估一下需求。想明白了，后面可以节省很多事情。&lt;/p&gt;
&lt;p&gt;本文章主要对比 Realm 和 CoreData，其他的就不涉及了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Realm&quot;&gt;&lt;a href=&quot;#Realm&quot; class=&quot;headerlink&quot; title=&quot;Realm&quot;&gt;&lt;/a&gt;Realm&lt;/h2&gt;&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;h4 id=&quot;入门门槛低&quot;&gt;&lt;a href=&quot;#入门门槛低&quot; class=&quot;headerlink&quot; title=&quot;入门门槛低&quot;&gt;&lt;/a&gt;入门门槛低&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://realm.io/docs/swift/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Realm文档&lt;/a&gt;就算一个字一个字扣着读完，一个下午就足够了。而且还有中文版本，不要太友好哦，有点不习惯诶。&lt;/p&gt;
&lt;p&gt;文档覆盖了80%的使用情况，甚至有些太简陋的嫌疑。但不管怎么样，这种入门条件比起 CoreData 写了三个月都没搞清楚 Context 要好的多。&lt;/p&gt;
&lt;p&gt;在库的工具链上，安装一个 Realm Browser 以后就不需要其他辅助了。还是简单。&lt;/p&gt;
&lt;p&gt;几乎做到了上手即用的程度。五星好评。&lt;/p&gt;
&lt;p&gt;PS：我用了一个通宵把 OhMyStar 2 的持久化从 CoreData 换到了 Realm ，优化调整了大概5天左右达到勉强可以用的情况 。在这之前并没有任何 Realm 的经验。&lt;/p&gt;
&lt;h4 id=&quot;据说性能好一些&quot;&gt;&lt;a href=&quot;#据说性能好一些&quot; class=&quot;headerlink&quot; title=&quot;据说性能好一些&quot;&gt;&lt;/a&gt;据说性能好一些&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://realm.io/news/introducing-realm/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Realm官方介绍Fast一段中&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Counts&lt;br&gt;&lt;img src=&quot;https://realm.io/assets/benchmarks/benchmarks.002b.png&quot; alt=&quot;Counts&quot;&gt;&lt;/p&gt;
&lt;p&gt;Queries&lt;br&gt;&lt;img src=&quot;https://realm.io/assets/benchmarks/benchmarks.003b.png&quot; alt=&quot;Queries&quot;&gt;&lt;/p&gt;
&lt;p&gt;Inserts&lt;br&gt;&lt;img src=&quot;https://realm.io/assets/benchmarks/benchmarks.001b.png&quot; alt=&quot;Inserts&quot;&gt;&lt;/p&gt;
&lt;p&gt;在写这里的时候我顺手Google了一下 发现一篇&lt;a href=&quot;http://suree.org/2015/09/29/DatabaseThink/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Core Data, FMDB, Realm 性能测试&lt;/a&gt;。我就多说几句&lt;/p&gt;
&lt;p&gt;总觉得大家对 CoreData 误会蛮深，代码 Fork 看了一下， 总觉得不应该这样写来比性能的，但是一时半会也不知道怎么改。我只能说我在优化 CoreData 的时候根据 WWDC 上教的还是提升很高，另外一个事情是 CoreData 一般都用 Sqlite 做后端。所以如果你的查询是经过优化的，确认打出来的SQL语句科学以后，Sqlite(CoreData) 跟 Sqlite(FMDB)我觉得性能就算有差距，这差距没有能大到选择方案的决定性因素。如果使用 CoreData 遇到性能瓶颈，你应该仔细的研究 WWDC 和几篇很好的文章。确保你的 CoreData 使用方式是正确科学的。&lt;/p&gt;
&lt;h4 id=&quot;没有需要架构Context那种烦人的东西&quot;&gt;&lt;a href=&quot;#没有需要架构Context那种烦人的东西&quot; class=&quot;headerlink&quot; title=&quot;没有需要架构Context那种烦人的东西&quot;&gt;&lt;/a&gt;没有需要架构Context那种烦人的东西&lt;/h4&gt;&lt;p&gt;应该也算Realm简单的一个方面，Realm 只要保持自己线程里面，自己的 Realm Store 操作是正确的即可。如果是 CoreData，怎么架构一个科学的 Context Stack 就足够让我头疼一整，iOS 还好，界面是一个接着一个(VC跟VC之间的层级关系很清晰)。而 OhMyStar 2 这种 OS X 桌面应用场景VC之间很复杂，线程之间Context的关系让出现很多问题。&lt;/p&gt;
&lt;h4 id=&quot;支持-NSPredicate&quot;&gt;&lt;a href=&quot;#支持-NSPredicate&quot; class=&quot;headerlink&quot; title=&quot;支持 NSPredicate&quot;&gt;&lt;/a&gt;支持 NSPredicate&lt;/h4&gt;&lt;p&gt;从 CoreData 转过来并没有太多的不适应&lt;/p&gt;
&lt;h4 id=&quot;很简单的使用多个存储文件&quot;&gt;&lt;a href=&quot;#很简单的使用多个存储文件&quot; class=&quot;headerlink&quot; title=&quot;很简单的使用多个存储文件&quot;&gt;&lt;/a&gt;很简单的使用多个存储文件&lt;/h4&gt;&lt;p&gt;举个例子，多用户登陆情况下。用户是单独的存储文件，和全部用户使用同一个存储文件。后者需要每条用户数据都要关联一次当前用户，所有查询用户数据的时候，你都必须加上当前用户的查询项。而使用每个用户单独一个数据文件的时候，整个存储结构会清爽很多。&lt;/p&gt;
&lt;h4 id=&quot;技术支持&quot;&gt;&lt;a href=&quot;#技术支持&quot; class=&quot;headerlink&quot; title=&quot;技术支持&quot;&gt;&lt;/a&gt;技术支持&lt;/h4&gt;&lt;p&gt;至少实在没法的时候还可以去微博上吐槽他们，他们其实也有极大的热情来解决你遇到的问题。CoreData 这种遇到问题就只能自己默默的吞下。&lt;/p&gt;
&lt;h4 id=&quot;细粒化通知-更新-0-98-x-版本以后可以获得精细化通知&quot;&gt;&lt;a href=&quot;#细粒化通知-更新-0-98-x-版本以后可以获得精细化通知&quot; class=&quot;headerlink&quot; title=&quot;细粒化通知 (更新 0.98.x 版本以后可以获得精细化通知)&quot;&gt;&lt;/a&gt;细粒化通知 (更新 0.98.x 版本以后可以获得精细化通知)&lt;/h4&gt;&lt;p&gt;看最新的文档已经更新：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://realm.io/docs/swift/latest/#notifications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Notifications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有了这个通知我思考的结构里，写入数据的所有线程都可以在后台了，而且更新UI的时候只用在需要的地方监听需要的类。这个进步&lt;/p&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;h4 id=&quot;关联关系弱的一逼&quot;&gt;&lt;a href=&quot;#关联关系弱的一逼&quot; class=&quot;headerlink&quot; title=&quot;关联关系弱的一逼&quot;&gt;&lt;/a&gt;关联关系弱的一逼&lt;/h4&gt;&lt;p&gt;简单说来就是对象跟对象之间的一对多关系和多对多关系。并不能映射，需要在双方里面都写上属性，此外还需要在设置的时候两边同时设置。查询时候也是 NSPredicate 也仅仅只支持一些一层的查询，没法做出带SUBQUERY的复杂查询出来。&lt;/p&gt;
&lt;h4 id=&quot;强制内省容错机制导致存储文件不断变大&quot;&gt;&lt;a href=&quot;#强制内省容错机制导致存储文件不断变大&quot; class=&quot;headerlink&quot; title=&quot;强制内省容错机制导致存储文件不断变大&quot;&gt;&lt;/a&gt;强制内省容错机制导致存储文件不断变大&lt;/h4&gt;&lt;p&gt;Realm本身感觉有一个数据容错机制。但是这个机制在数据库文件有错误的情况自己修复的时候，会无限增大。具体我这里表现为，打开看只有3000条数据，但是文件大小已经有3GB。重现Bug也很容易，只要你在写数据库的时候,用Realm Browser查看一下，crash之后在打开就很容易出现。&lt;/p&gt;
&lt;p&gt;官方文档里面有说到会造成这种情形的原因，我在尽我所能的避免问题以后。存储文件还是会有可能不那么夸张的变大一些。但是用Realm Browser查看数据是正常的。所以我觉得官方应该提供一个函数，可以删除掉那些容易的东西。保持存储文件的干净。&lt;/p&gt;
&lt;h4 id=&quot;没有细粒化通知&quot;&gt;&lt;a href=&quot;#没有细粒化通知&quot; class=&quot;headerlink&quot; title=&quot;没有细粒化通知&quot;&gt;&lt;/a&gt;没有细粒化通知&lt;/h4&gt;&lt;p&gt;～～也就是说，当我在某个地方做出修改。 我其他地方只知道Realm有修改，但是没法知道我是增加、修改还是删除了数据。不知道我更新的是那一条数据。据文档说，将来会解决这个问题，就只有拭目以待。～～&lt;/p&gt;
&lt;h4 id=&quot;增加包体积&quot;&gt;&lt;a href=&quot;#增加包体积&quot; class=&quot;headerlink&quot; title=&quot;增加包体积&quot;&gt;&lt;/a&gt;增加包体积&lt;/h4&gt;&lt;p&gt;据官方说会增加1MB左右的包大小，如果你是一个小体积应用，或者是一个几千万用户的主流应用。对包大小敏感的话慎用。&lt;/p&gt;
&lt;h4 id=&quot;核心代码目前闭源&quot;&gt;&lt;a href=&quot;#核心代码目前闭源&quot; class=&quot;headerlink&quot; title=&quot;核心代码目前闭源&quot;&gt;&lt;/a&gt;核心代码目前闭源&lt;/h4&gt;&lt;p&gt;对于在我们这样一个作恶满天飞的天朝长大的孩子来说，有些孩子对闭源这个事情还是挺在意的。不过官方说将来会开源，我还是倾向于相信 Realm 他们的人品。&lt;/p&gt;
&lt;h2 id=&quot;CoreData&quot;&gt;&lt;a href=&quot;#CoreData&quot; class=&quot;headerlink&quot; title=&quot;CoreData&quot;&gt;&lt;/a&gt;CoreData&lt;/h2&gt;&lt;p&gt;CoreData 相关资料相对多一些我就简单说&lt;/p&gt;
&lt;h3 id=&quot;优点-1&quot;&gt;&lt;a href=&quot;#优点-1&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;h4 id=&quot;官方支持-amp-amp-亲儿子&quot;&gt;&lt;a href=&quot;#官方支持-amp-amp-亲儿子&quot; class=&quot;headerlink&quot; title=&quot;官方支持 &amp;amp;&amp;amp; 亲儿子&quot;&gt;&lt;/a&gt;官方支持 &amp;amp;&amp;amp; 亲儿子&lt;/h4&gt;&lt;p&gt;系统自带，Apple支持&lt;/p&gt;
&lt;h4 id=&quot;带图形化的Model编辑&quot;&gt;&lt;a href=&quot;#带图形化的Model编辑&quot; class=&quot;headerlink&quot; title=&quot;带图形化的Model编辑&quot;&gt;&lt;/a&gt;带图形化的Model编辑&lt;/h4&gt;&lt;p&gt;对于视觉化动物来说比较友好，也可以清楚的知道自己设计的 Model 之间的关系&lt;/p&gt;
&lt;h4 id=&quot;强大的关联关系&quot;&gt;&lt;a href=&quot;#强大的关联关系&quot; class=&quot;headerlink&quot; title=&quot;强大的关联关系&quot;&gt;&lt;/a&gt;强大的关联关系&lt;/h4&gt;&lt;p&gt;以前不觉得，用了 Realm 才发现 CoreData 的关联关系如此好用，一对多，多对多。想怎么查询就怎么查询，可以写出很复杂的查询逻辑来。&lt;/p&gt;
&lt;h4 id=&quot;强大的查询&quot;&gt;&lt;a href=&quot;#强大的查询&quot; class=&quot;headerlink&quot; title=&quot;强大的查询&quot;&gt;&lt;/a&gt;强大的查询&lt;/h4&gt;&lt;p&gt;虽然可能在设置NSFetchRequest的时候感觉很多东西要弄，但是复杂也带来了强大的功能，NSFetchRequest 可以设置很多，比如限制查询数量， 限制只返回某些属性值等等。就不展开说了。&lt;/p&gt;
&lt;h4 id=&quot;精细化的通知&quot;&gt;&lt;a href=&quot;#精细化的通知&quot; class=&quot;headerlink&quot; title=&quot;精细化的通知&quot;&gt;&lt;/a&gt;精细化的通知&lt;/h4&gt;&lt;p&gt;可以知道具体插入了什么、更新了什么、删除了什么。这样在刷UI，比如一个tableview的时候，你就可以控制的很准确。&lt;/p&gt;
&lt;h3 id=&quot;缺点-1&quot;&gt;&lt;a href=&quot;#缺点-1&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;h4 id=&quot;入门门槛高&quot;&gt;&lt;a href=&quot;#入门门槛高&quot; class=&quot;headerlink&quot; title=&quot;入门门槛高&quot;&gt;&lt;/a&gt;入门门槛高&lt;/h4&gt;&lt;p&gt;CoreData 是一个博大精深的技术，不要妄想几天之内可以用的很溜。&lt;br&gt;CoreData 是一个博大精深的技术，不要妄想几天之内可以用的很溜。&lt;br&gt;CoreData 是一个博大精深的技术，不要妄想几天之内可以用的很溜。&lt;/p&gt;
&lt;p&gt;如果没有足够的时间和精力去接入 CoreData。 那选型的时候应当慎重考虑。&lt;/p&gt;
&lt;h4 id=&quot;需要一些工具才感觉好使&quot;&gt;&lt;a href=&quot;#需要一些工具才感觉好使&quot; class=&quot;headerlink&quot; title=&quot;需要一些工具才感觉好使&quot;&gt;&lt;/a&gt;需要一些工具才感觉好使&lt;/h4&gt;&lt;p&gt;不管是老手还是新手，使用一些第三方的封装库和工具都会大大的提高使用 CoreData 的幸福指数。&lt;/p&gt;
&lt;p&gt;mogenerator 是必须必须要的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/magicalpanda/MagicalRecord&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MagicalRecord&lt;/a&gt; 无愧 CoreData 第一库，据小道消息 主要贡献者 Saul Mora 可能去了微信了。&lt;/p&gt;
&lt;h4 id=&quot;Context&quot;&gt;&lt;a href=&quot;#Context&quot; class=&quot;headerlink&quot; title=&quot;Context&quot;&gt;&lt;/a&gt;Context&lt;/h4&gt;&lt;p&gt;其实还是 CoreData 门槛高的问题，对我来说。Context之间的关系和线程之间的处理让我感到很头痛，特别是 OS X  是一大堆VC铺到屏幕上，我水平又菜，出的问题很多。&lt;/p&gt;
&lt;h4 id=&quot;多个持久化文件很麻烦&quot;&gt;&lt;a href=&quot;#多个持久化文件很麻烦&quot; class=&quot;headerlink&quot; title=&quot;多个持久化文件很麻烦&quot;&gt;&lt;/a&gt;多个持久化文件很麻烦&lt;/h4&gt;&lt;p&gt;不是说不可以，但是真的好麻烦。&lt;/p&gt;
&lt;p&gt;有个第三方库有解决CoreData这个问题 &lt;a href=&quot;https://github.com/JohnEstropia/CoreStore&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoreStore&lt;/a&gt; 但是我用着不是很顺手最后弃用.&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;其实吧用啥持久化都行，具体还是需要看你的需求和方案上来说哪一个方案更加适合。&lt;/p&gt;
&lt;p&gt;如果简单说来，就是 Realm 更加适合一些业务逻辑不怎么复杂的场景，团队配置要求不高，有经验的人稍微看一下午就能上手。&lt;/p&gt;
&lt;p&gt;CoreData 更加适合业务逻辑复杂的情况，团队配置要求比较高，有经验的老手也需要几周甚至更长的时间才能科学的使用CoreData。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;OhMyStar 2 也进行了一段时日，我把持久化的方式从CoreData 换到了 Realm。有些感悟，顺手就记录一下吧。以下评论都是自己很主观的感受，无实际测试数据支持。&lt;/p&gt;
&lt;h2 id=&quot;论-iOS-的持久化&quot;&gt;&lt;a href=&quot;#论-iOS-的持久化&quot; class=&quot;headerlink&quot; title=&quot;论 iOS 的持久化&quot;&gt;&lt;/a&gt;论 iOS 的持久化&lt;/h2&gt;&lt;p&gt;iOS 持久化其实也没多少选择， 高端一点CoreData、Realm、FMDB、KV类(LevelDB等)。低端一些直接一个 NSArray 就写成 Plist 也能持久化下来。&lt;/p&gt;
&lt;p&gt;在网络环境越来越快的当下和大部分应用数据都可能是网络应用，如果业务逻辑并不复杂，其实极端一点就只用写到 JSON 转 Object 就好了。而且一堆这样好用的封装，远有&lt;a href=&quot;https://github.com/Mantle/Mantle&quot;&gt;Mantle&lt;/a&gt; 近有&lt;a href=&quot;https://github.com/ibireme/YYModel&quot;&gt;YYModel&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所以需要持久化的时候，我觉的可以慎重的评估一下需求。想明白了，后面可以节省很多事情。&lt;/p&gt;
&lt;p&gt;本文章主要对比 Realm 和 CoreData，其他的就不涉及了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
      <category term="Mac" scheme="http://iiiyu.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>2016年移动互联网职业入门规划指南</title>
    <link href="http://iiiyu.com/2016/01/12/2016-IT-professionals-Getting-Started/"/>
    <id>http://iiiyu.com/2016/01/12/2016-IT-professionals-Getting-Started/</id>
    <published>2016-01-11T23:33:32.000Z</published>
    <updated>2016-01-21T03:06:00.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;2016年才开始，再次感慨时光如逝。2015一年面基了好多人，其中认识了好多小朋友。有的小朋友真的很厉害，而有的小朋友也有我在当时年纪的迷茫。觉得在28岁这样“长者”的年纪，自己也算做一个有故事的男同学。写下这一篇文章，也算写给18岁的自己。至少证明我来过这个世界。&lt;/p&gt;
&lt;p&gt;在2012年，我以当时的能看见的未来写过一篇&lt;a href=&quot;http://iiiyu.com/2012/02/09/junior-it-people-c-study-guide/&quot;&gt;IT人士入门指南&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;几年后的今天来看，有一些内容和想法是过时的、片面的、不完善的。所以一直想去更新一下。无奈觉得自己好像也没做出什么能拿出手的成绩，觉得写出来会不会误人子弟。&lt;/p&gt;
&lt;p&gt;但是后面我发现，我的某些想法虽然在很多人里面看起来很“傻逼”。但是如果能分享给更多的人可能会让这个世界变得美好这么一点点。加上自己近一年时间的伪创业＋伪独立开发，思考问题的方式可能带来一些不一样的见解。这还是值得去做的一件事情。分享是种美德。&lt;/p&gt;
&lt;p&gt;本文目标读者：在12岁～22岁喜欢互联网或者想从事互联网工作的小朋友们。&lt;/p&gt;
&lt;h2 id=&quot;做人&quot;&gt;&lt;a href=&quot;#做人&quot; class=&quot;headerlink&quot; title=&quot;做人&quot;&gt;&lt;/a&gt;做人&lt;/h2&gt;&lt;p&gt;首先谈谈人的本身。做事先做人，一个老生长谈的问题。接下来的讨论情况基于更加普遍的情况(特殊情况不再讨论范围)。&lt;/p&gt;
&lt;p&gt;根据我的观察，一个能在IT行业做到顶尖的人，如果换一个行业或者职业，加以时间很大程度上也能做到新行业的顶尖。因为他们身上都有一些共同的特质——专注、勤奋、渴望。也就是那句著名的“Stay hungry. Stay foolish.”&lt;/p&gt;
&lt;p&gt;为什么名校的人们更容易做到顶尖？我认为跟他们读不读名校其实关系不大，而在于他们考进名校的时候就已经让自己成为了那种做事能 专注、勤奋、渴望的人。而12-18岁这样的年纪大家做的事情也只有一个就是去高考，所以他们把这个事情能做好进入了名校。自然以后不管从事什么职业和行当，他们只要继续的专注、勤奋、渴望，都不得不成为行业的精英。多说一句在当下这样学识、教育获取更加扁平的情况下(世界顶级大学都有公开课)，国内大学教育在我看来并重要。所以在人生的不断旅程中，如果想要成为行业的Top级别，需要自己先问问自己是否能保持周围学霸的那种专注、勤奋和渴望。&lt;/p&gt;
&lt;p&gt;专注、勤奋是都能找到具体的实践办法。而渴望就是内心深处的一种感觉，要有这种感觉最简单的就是喜欢。所以才说要从事自己喜欢的职业。&lt;/p&gt;
&lt;p&gt;这部分适合各种情况，所以也不展开说了。以免写多了像鸡汤。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;大学专业&quot;&gt;&lt;a href=&quot;#大学专业&quot; class=&quot;headerlink&quot; title=&quot;大学专业&quot;&gt;&lt;/a&gt;大学专业&lt;/h2&gt;&lt;p&gt;我前面已经说过，在当下这个时间点(2016年)。在国内的大学99%都是骗钱的，高校是以企业化的方式来运转。尤其以贵国示范性软件学院为首。当然也不是说去上大学就是一无是处，上大学是你第一次扩张你人脉的关键时间点。你读越是好的国内院校，你周围的人也会越优秀。物以类聚，人以群分。周围优秀的人越多，你被优秀化的概率也越高。&lt;/p&gt;
&lt;p&gt;关于学校选择我认为的指标&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;海外名校&amp;gt;985&amp;gt;211&amp;gt;其他&lt;/li&gt;
&lt;li&gt;沿海的&amp;gt;内陆的&lt;/li&gt;
&lt;li&gt;发达地区的&amp;gt;落后地区的&lt;/li&gt;
&lt;li&gt;每年学费少的&amp;gt;每年学费贵的&lt;/li&gt;
&lt;li&gt;好逃课的&amp;gt;严格的考勤的(这个纯属我的主观感受，因为做事的动力应该是源于你的内心的认同感，而不是一些外部的力量)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在这个信息被平铺的时代，你将来从事的职业跟你读的专业可以一毛钱关系都没有。而你的职业生涯出不出彩，在于你在这个方向投入了多少时间。能达到一个什么样的程度。工作这么几年，我见过读数学的，读经管的，读英语的，读医科的，都变成了优秀的IT从业人员。所以如果有论调说你不是科班出身的，什么什么没有基础。那我觉得只是你投入的不够专注，和渴望做成这个事情。&lt;/p&gt;
&lt;p&gt;互联网时代或者说移动互联网时代，那些大佬天天说的拼的是人才。我想也就是这样拥有专注、勤奋、渴望的人吧。&lt;/p&gt;
&lt;h2 id=&quot;作为一个当下时代的人必备技能&quot;&gt;&lt;a href=&quot;#作为一个当下时代的人必备技能&quot; class=&quot;headerlink&quot; title=&quot;作为一个当下时代的人必备技能&quot;&gt;&lt;/a&gt;作为一个当下时代的人必备技能&lt;/h2&gt;&lt;h3 id=&quot;英语&quot;&gt;&lt;a href=&quot;#英语&quot; class=&quot;headerlink&quot; title=&quot;英语&quot;&gt;&lt;/a&gt;英语&lt;/h3&gt;&lt;p&gt;说来惭愧，我的英语并不好。差到难于想象的地步，差到了令人发指的地步。但是我却见了太多太多对英文不屑一顾的做技术的小朋友。当他们问出问题的时候，我甚至会吧 stackoverflow 的答案丢给他。结果换来的是一句看不懂。这时候我只是心里默默的说了“滚你麻痹，不要做IT了吧”。&lt;/p&gt;
&lt;p&gt;英语的重要性是最最最重要的。 套用别人的一句话来说“是投入最少，产出最多的投资”。&lt;/p&gt;
&lt;h3 id=&quot;能自由的访问全球互联网&quot;&gt;&lt;a href=&quot;#能自由的访问全球互联网&quot; class=&quot;headerlink&quot; title=&quot;能自由的访问全球互联网&quot;&gt;&lt;/a&gt;能自由的访问全球互联网&lt;/h3&gt;&lt;p&gt;在贵国这样恶劣的生存环境下，至少至少一年100元的付费投入是觉得必须的。不要每天折腾那些免费的方案，时间比钱重要的多。&lt;/p&gt;
&lt;h3 id=&quot;使用而且只使用-Google&quot;&gt;&lt;a href=&quot;#使用而且只使用-Google&quot; class=&quot;headerlink&quot; title=&quot;使用而且只使用 Google&quot;&gt;&lt;/a&gt;使用而且只使用 Google&lt;/h3&gt;&lt;p&gt;在你是真正的互联网以后，请把你浏览器的搜索引擎设置为 Google。养成只使用 Google 的情况。&lt;br&gt;如果你连Google都不会用，那可以在&lt;a href=&quot;http://iiiyu.com/2012/02/09/junior-it-people-c-study-guide/&quot;&gt;IT人士入门指南&lt;/a&gt;中找到一些如何使用 Google 的方法。&lt;/p&gt;
&lt;h3 id=&quot;学会如何提问&quot;&gt;&lt;a href=&quot;#学会如何提问&quot; class=&quot;headerlink&quot; title=&quot;学会如何提问&quot;&gt;&lt;/a&gt;学会如何提问&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://doc.zengrong.net/smart-questions/cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;提问的智慧&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;终身的学习和独立思考&quot;&gt;&lt;a href=&quot;#终身的学习和独立思考&quot; class=&quot;headerlink&quot; title=&quot;终身的学习和独立思考&quot;&gt;&lt;/a&gt;终身的学习和独立思考&lt;/h3&gt;&lt;h4 id=&quot;学会提高自己的智慧去独立思考&quot;&gt;&lt;a href=&quot;#学会提高自己的智慧去独立思考&quot; class=&quot;headerlink&quot; title=&quot;学会提高自己的智慧去独立思考&quot;&gt;&lt;/a&gt;学会提高自己的智慧去独立思考&lt;/h4&gt;&lt;p&gt;还是当下这样信息成灾难的时代，每天接受的信息实在太多太多了。如果缺乏足够的智慧去独立思考，那将是一个巨大的悲剧。就真的变成了人云亦云的傻逼。当新的一波浪潮过来，就是被冲到沙滩的牺牲体。&lt;/p&gt;
&lt;h4 id=&quot;学会接受意见相左理性观点&quot;&gt;&lt;a href=&quot;#学会接受意见相左理性观点&quot; class=&quot;headerlink&quot; title=&quot;学会接受意见相左理性观点&quot;&gt;&lt;/a&gt;学会接受意见相左理性观点&lt;/h4&gt;&lt;p&gt;无脑喷的除外。如果是有人提出了相左理性观点，要学会理解上下文。这样会为自己的观点完善和提高自己的思辨能力。&lt;/p&gt;
&lt;h4 id=&quot;学会接受新的事物&quot;&gt;&lt;a href=&quot;#学会接受新的事物&quot; class=&quot;headerlink&quot; title=&quot;学会接受新的事物&quot;&gt;&lt;/a&gt;学会接受新的事物&lt;/h4&gt;&lt;p&gt;不要用惯用的思维去理解和接受新的事物，这样容易带有偏见。&lt;/p&gt;
&lt;h4 id=&quot;盗版&quot;&gt;&lt;a href=&quot;#盗版&quot; class=&quot;headerlink&quot; title=&quot;盗版&quot;&gt;&lt;/a&gt;盗版&lt;/h4&gt;&lt;p&gt;用盗版是臭傻比这个事情，无数人说了无数。我就只说一点就算万不得已了，使用了盗版的人。你要明白这个是一种偷窃的行为，你应该为此感到羞愧。你要产生一种我将来有钱了的时候一定要换成正版的想法。而不是到处的宣传盗版的分发处和一股我就用盗版我光荣的姿态。&lt;/p&gt;
&lt;p&gt;因为这几乎是一个人最基本的诚信问题啊。&lt;/p&gt;
&lt;h4 id=&quot;中医&quot;&gt;&lt;a href=&quot;#中医&quot; class=&quot;headerlink&quot; title=&quot;中医&quot;&gt;&lt;/a&gt;中医&lt;/h4&gt;&lt;p&gt;为了你的生命健康，请远离中医。&lt;/p&gt;
&lt;p&gt;PS: 更新一下，好多人说我无脑喷。我就贴一个视频吧。 多的不说了&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://v.youku.com/v_show/id_XOTQwMTQ2NTcy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你怎么还信中医&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;移动互联网职业规划&quot;&gt;&lt;a href=&quot;#移动互联网职业规划&quot; class=&quot;headerlink&quot; title=&quot;移动互联网职业规划&quot;&gt;&lt;/a&gt;移动互联网职业规划&lt;/h2&gt;&lt;p&gt;当下的世界是一个快速发展的世界，由于科技的进步世界中在不断的加速中。这就导致一个什么问题，就是如果说大学教育是为了获得就业能力的话，大学里面的课程和专业分类已经远远落后于这个时代。所以我觉得现在你读的专业和毕业以后想要找工作其实可以没有任何关系。&lt;/p&gt;
&lt;p&gt;下面的职业都没有什么高低之分，他们对于一个公司来说在不同方面上给予价值的体现。任何职业的顶尖人才对于公司来说都是可遇不可求的。当然工资是一个市场作用和多方面因素的结果，我的建议是不用寻着当下看上去最高的工资，而应该去找最适合自己的职业。因为长远一些来看，你做到高级程度的收益要远远大于初级程度的收益。如果选择了一个不适合的，你很难从内心产生源动力去把自己的水平推向高级甚至顶级。&lt;/p&gt;
&lt;p&gt;我把这几年看到的职位大概简单说明一下：&lt;/p&gt;
&lt;h3 id=&quot;技术路线&quot;&gt;&lt;a href=&quot;#技术路线&quot; class=&quot;headerlink&quot; title=&quot;技术路线&quot;&gt;&lt;/a&gt;技术路线&lt;/h3&gt;&lt;p&gt;一般来说计算机科学学院和软件学院对应出口的都是做技术路线。也就是俗称的程序员。但是我见过的课程里面，都是想要把学生教育成为一个服务端程序员。其他的方向从课程体系到老师态度都是脱离时代的。&lt;/p&gt;
&lt;p&gt;其中一些基本工参考&lt;a href=&quot;http://iiiyu.com/2012/02/09/junior-it-people-c-study-guide/&quot;&gt;IT人士入门指南&lt;/a&gt;&lt;br&gt;而且往往都是你深入了解某个方向，但是其他方向也是需要有基本的常识。因为总的来说计算机技术的出现都是为了解决问题的，他们之间并不是孤立的。大道至简、重剑无锋。了解更多的知识有助于你向高级进阶。&lt;/p&gt;
&lt;h4 id=&quot;服务端&quot;&gt;&lt;a href=&quot;#服务端&quot; class=&quot;headerlink&quot; title=&quot;服务端&quot;&gt;&lt;/a&gt;服务端&lt;/h4&gt;&lt;p&gt;简单来说写程序的逻辑和数据处理。主流使用语言及其框架有且不限制于&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP: Laravel&lt;/li&gt;
&lt;li&gt;Python: Django&lt;/li&gt;
&lt;li&gt;Ruby: Rails&lt;/li&gt;
&lt;li&gt;NodeJS: Express.js&lt;/li&gt;
&lt;li&gt;Java: 貌似自己写&lt;/li&gt;
&lt;li&gt;Go: 貌似也是自己写&lt;/li&gt;
&lt;li&gt;Erlang: 应该也是自己写&lt;/li&gt;
&lt;li&gt;C++: 还是自己写&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单说服务端的挑战是随着公司业务增长的时候出现的需求:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高稳定性&lt;/li&gt;
&lt;li&gt;高安全性&lt;/li&gt;
&lt;li&gt;高扩展性&lt;/li&gt;
&lt;li&gt;高并发性&lt;/li&gt;
&lt;li&gt;高自动化&lt;/li&gt;
&lt;li&gt;快速迭代&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;语言和框架都是解决问题的工具，当遇到问题的时候。肯定是拿起你认为最顺手、最合适的工具来解决眼前的问题。所以在此再次说明：技术是不应该带有偏见的。如果有，请拿出代码打我的脸。&lt;/p&gt;
&lt;p&gt;如果你对写出更快、更强、更高效的代码感到兴奋和心情愉悦的话。服务端的方向可能是你好的选择。&lt;/p&gt;
&lt;h4 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h4&gt;&lt;p&gt;目前来说前端可以包含了Web前端和手机前端。没错，iOS 和 Android 其实也能算前端。&lt;/p&gt;
&lt;p&gt;Web前端博大精深:刚刚入门的你应该从 HTML5 和 CSS3 开始学起。 然后就是进阶到 JavaScript 的欢乐海洋里面。&lt;/p&gt;
&lt;p&gt;iOS：Swift 的入门比 Objective－C 要高的多&lt;/p&gt;
&lt;p&gt;Android：其实 Material Design 也挺好看不是&lt;/p&gt;
&lt;p&gt;如果你对做出来的东西想要酷炫的动画和交互感兴趣，前端不妨考虑一下。&lt;/p&gt;
&lt;h4 id=&quot;安全&quot;&gt;&lt;a href=&quot;#安全&quot; class=&quot;headerlink&quot; title=&quot;安全&quot;&gt;&lt;/a&gt;安全&lt;/h4&gt;&lt;p&gt;当电子科技无孔不入的时候，安全成为首要重要的事情。我认为未来肯定会有专门做安全的独角兽出现。而不是不要底线的流氓公司。&lt;/p&gt;
&lt;p&gt;当然，如果你对当下的权威表示不满，你也可以黑了他们。安全历来都是矛与盾的相争。都是黑帽子和白帽子的江湖。&lt;/p&gt;
&lt;p&gt;如果你对数学的有孜孜不倦的好奇之心，安全领域一定会满足你。&lt;/p&gt;
&lt;p&gt;当你横空出世、崭露头角。巨头们都必须得花重金抢你。&lt;/p&gt;
&lt;h4 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h4&gt;&lt;p&gt;在存技术领域里面，还有一些可能比较边缘的职位，可能是需要足够大的公司才能专门独立出来。&lt;/p&gt;
&lt;h5 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h5&gt;&lt;p&gt;白盒黑盒，能抓住Bug的都是好盒子。&lt;/p&gt;
&lt;h5 id=&quot;运维&quot;&gt;&lt;a href=&quot;#运维&quot; class=&quot;headerlink&quot; title=&quot;运维&quot;&gt;&lt;/a&gt;运维&lt;/h5&gt;&lt;p&gt;运维掌握着整个公司的服务器资源，公司的所有程序都得跑在运维搭建好的环境里面。公司网站挂了，服务挂了。可能第一个背锅的人。&lt;/p&gt;
&lt;h3 id=&quot;产品&quot;&gt;&lt;a href=&quot;#产品&quot; class=&quot;headerlink&quot; title=&quot;产品&quot;&gt;&lt;/a&gt;产品&lt;/h3&gt;&lt;p&gt;最重要的事情说三遍：&lt;/p&gt;
&lt;p&gt;并不是人人都能成为合格的产品经理！产品经理的入门门槛很高！&lt;br&gt;并不是人人都能成为合格的产品经理！产品经理的入门门槛很高！&lt;br&gt;并不是人人都能成为合格的产品经理！产品经理的入门门槛很高！&lt;/p&gt;
&lt;p&gt;路漫漫其修远兮，吾将上下而求索。&lt;/p&gt;
&lt;p&gt;我也说不好，毕竟才刚刚入门而已。&lt;/p&gt;
&lt;p&gt;产品经理大到整个世界的发展趋势，小到一次屏幕上的点击都需要去思考。把用户需求放到首位确实不能只嘴上说说，而是需要用心去想，在想想，然后才做到产品里面去的。&lt;/p&gt;
&lt;p&gt;所以，什么样的产品是以钱为第一位，什么样的产品是以用户为第一位的，其实一眼就能看出来。&lt;/p&gt;
&lt;h3 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h3&gt;&lt;p&gt;设计的地位在进几年不断的提升。一个好的设计是产品的一个强有力的质量保证。&lt;/p&gt;
&lt;p&gt;当然在互联网公司，设计师的工作主要是Web网页设计，各种宣传图设计，App UI设计，各种动画效果设计，有能力者还可能是各种视频的制作者。&lt;/p&gt;
&lt;p&gt;如果你对美好的事物天生的喜爱，而且强迫的追求各种对称和归纳，再有绘画的功底。那你天生就是干设计的命啊。&lt;/p&gt;
&lt;h3 id=&quot;运营&quot;&gt;&lt;a href=&quot;#运营&quot; class=&quot;headerlink&quot; title=&quot;运营&quot;&gt;&lt;/a&gt;运营&lt;/h3&gt;&lt;p&gt;你天生逗比么？你天生段子手么？你天生比其他人能写么？你天生就能找到好玩有趣的内容么？&lt;/p&gt;
&lt;p&gt;你天生的话痨么？你喜欢跟其他人叨逼叨么？你喜欢多管闲事么？&lt;/p&gt;
&lt;p&gt;如果你有上列描述的情况，恭喜你，你有成为一个天才运营的潜力。&lt;/p&gt;
&lt;h3 id=&quot;市场渠道&quot;&gt;&lt;a href=&quot;#市场渠道&quot; class=&quot;headerlink&quot; title=&quot;市场渠道&quot;&gt;&lt;/a&gt;市场渠道&lt;/h3&gt;&lt;p&gt;在国内估计就是那些七七八八的渠道你要明白，你手里拿着钱要能去买量来进行推广。&lt;/p&gt;
&lt;p&gt;曾经的SEO，现在的ASO等&lt;/p&gt;
&lt;h3 id=&quot;游戏&quot;&gt;&lt;a href=&quot;#游戏&quot; class=&quot;headerlink&quot; title=&quot;游戏&quot;&gt;&lt;/a&gt;游戏&lt;/h3&gt;&lt;p&gt;其实吧，做游戏才是真的赚钱，你看各大电视台的广告都换成手游了不是，他们大概又有一下职位：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;游戏客户端&lt;/li&gt;
&lt;li&gt;游戏服务器端&lt;/li&gt;
&lt;li&gt;游戏策划&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;希望你就在下一个月流水过亿的团队里吗，年终的时候发宝马哦。&lt;/p&gt;
&lt;h3 id=&quot;其他-1&quot;&gt;&lt;a href=&quot;#其他-1&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;p&gt;还有最佳火热的 GrowthHacker 啊等等，由于我都没有足够深入的经验也就按下不表，随便提一下吧。&lt;/p&gt;
&lt;h2 id=&quot;创业&quot;&gt;&lt;a href=&quot;#创业&quot; class=&quot;headerlink&quot; title=&quot;创业&quot;&gt;&lt;/a&gt;创业&lt;/h2&gt;&lt;p&gt;如果你选择进行小团队创业或者做一个独立开发者，恭喜你。以上提到的技能，你都会点一遍。&lt;/p&gt;
&lt;h2 id=&quot;人生&quot;&gt;&lt;a href=&quot;#人生&quot; class=&quot;headerlink&quot; title=&quot;人生&quot;&gt;&lt;/a&gt;人生&lt;/h2&gt;&lt;p&gt;归根结底，还是你自己决定要成为一个什么样的人。就前几天有个朋友跟我喝酒喝多了说了一句：“你啊，就是太清高。所以才赚不到钱。” 我无言以对，因为我也会有对金钱的渴望，却又要想着站着堂堂正正，对我来说太难太难了。回望过去，只能说我不忘初心。所以到目前为止，人生最重要的是过的痛快，心里想啥就好好的干啥，跟着自己的心走。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;从99.99999%的角度上来说，我说说的都是错的。 只剩下内心一点点的自己在肯定而已。&lt;/p&gt;
&lt;p&gt;其实我也只是泛泛的谈了谈，具体每个职业需要做到高级都需要一万小时去积累。&lt;/p&gt;
&lt;p&gt;又是一篇拖了20天才断断续续写完的文章，质量上自己都不是很满意。&lt;/p&gt;
&lt;p&gt;希望能帮助到即将进入互联网行业的你。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;2016年才开始，再次感慨时光如逝。2015一年面基了好多人，其中认识了好多小朋友。有的小朋友真的很厉害，而有的小朋友也有我在当时年纪的迷茫。觉得在28岁这样“长者”的年纪，自己也算做一个有故事的男同学。写下这一篇文章，也算写给18岁的自己。至少证明我来过这个世界。&lt;/p&gt;
&lt;p&gt;在2012年，我以当时的能看见的未来写过一篇&lt;a href=&quot;http://iiiyu.com/2012/02/09/junior-it-people-c-study-guide/&quot;&gt;IT人士入门指南&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;几年后的今天来看，有一些内容和想法是过时的、片面的、不完善的。所以一直想去更新一下。无奈觉得自己好像也没做出什么能拿出手的成绩，觉得写出来会不会误人子弟。&lt;/p&gt;
&lt;p&gt;但是后面我发现，我的某些想法虽然在很多人里面看起来很“傻逼”。但是如果能分享给更多的人可能会让这个世界变得美好这么一点点。加上自己近一年时间的伪创业＋伪独立开发，思考问题的方式可能带来一些不一样的见解。这还是值得去做的一件事情。分享是种美德。&lt;/p&gt;
&lt;p&gt;本文目标读者：在12岁～22岁喜欢互联网或者想从事互联网工作的小朋友们。&lt;/p&gt;
&lt;h2 id=&quot;做人&quot;&gt;&lt;a href=&quot;#做人&quot; class=&quot;headerlink&quot; title=&quot;做人&quot;&gt;&lt;/a&gt;做人&lt;/h2&gt;&lt;p&gt;首先谈谈人的本身。做事先做人，一个老生长谈的问题。接下来的讨论情况基于更加普遍的情况(特殊情况不再讨论范围)。&lt;/p&gt;
&lt;p&gt;根据我的观察，一个能在IT行业做到顶尖的人，如果换一个行业或者职业，加以时间很大程度上也能做到新行业的顶尖。因为他们身上都有一些共同的特质——专注、勤奋、渴望。也就是那句著名的“Stay hungry. Stay foolish.”&lt;/p&gt;
&lt;p&gt;为什么名校的人们更容易做到顶尖？我认为跟他们读不读名校其实关系不大，而在于他们考进名校的时候就已经让自己成为了那种做事能 专注、勤奋、渴望的人。而12-18岁这样的年纪大家做的事情也只有一个就是去高考，所以他们把这个事情能做好进入了名校。自然以后不管从事什么职业和行当，他们只要继续的专注、勤奋、渴望，都不得不成为行业的精英。多说一句在当下这样学识、教育获取更加扁平的情况下(世界顶级大学都有公开课)，国内大学教育在我看来并重要。所以在人生的不断旅程中，如果想要成为行业的Top级别，需要自己先问问自己是否能保持周围学霸的那种专注、勤奋和渴望。&lt;/p&gt;
&lt;p&gt;专注、勤奋是都能找到具体的实践办法。而渴望就是内心深处的一种感觉，要有这种感觉最简单的就是喜欢。所以才说要从事自己喜欢的职业。&lt;/p&gt;
&lt;p&gt;这部分适合各种情况，所以也不展开说了。以免写多了像鸡汤。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随便瞎扯" scheme="http://iiiyu.com/tags/%E9%9A%8F%E4%BE%BF%E7%9E%8E%E6%89%AF/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 「引爆点」</title>
    <link href="http://iiiyu.com/2015/01/31/read-the-tipping-point/"/>
    <id>http://iiiyu.com/2015/01/31/read-the-tipping-point/</id>
    <published>2015-01-31T15:08:19.000Z</published>
    <updated>2015-02-05T02:27:00.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons%E3%80%82org/licenses/by-nc/4%E3%80%820/deed%E3%80%82zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu%E3%80%82com/atom%E3%80%82xml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;嗯，在一月的最后一天的最后一个小时开始写这篇读书笔记。也就算做这个月输出了3篇 blog。如果对比2014年这种令人发指的输出量来说。对于自己不得不说是一个巨大的进步。&lt;/p&gt;
&lt;p&gt;这本「引爆点」是在去上海开年会的来回路程上扫完的。顺便说一句，Sumi 除了Kevin Cao。其它全部在上海喝了残血回程的。 我还内伤了回来在医院躺了2天。 这是后话了。可见战斗力下降的厉害。&lt;/p&gt;
&lt;p&gt;最近我看书，一边看、一边会去联系一堆事物进行思考。因此现在的读书笔记也是想到什么写什么。并不是上学时候那种读书笔记顺序条例整齐的。算做观后随笔之类的吧。&lt;/p&gt;
&lt;p&gt;最后的一句扯淡，我不应该怎么晚才看到这本书。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;关于本书&quot;&gt;&lt;a href=&quot;#关于本书&quot; class=&quot;headerlink&quot; title=&quot;关于本书&quot;&gt;&lt;/a&gt;关于本书&lt;/h2&gt;&lt;p&gt;由于我断网了，所以我无法查询到「引爆点」的成书时间。不过根据书里面的各种信息透露。我推断「引爆点」成书应该在2000年之前，1996年以后。说这个的原因是说，现在的和过去不久的一些流行过的概念。应该都出自此书。比如影响里面最深刻的破窗效应。比如罗永浩说过的搞定最前面的一拨人就能引发流行的理论。（插一句2014年的老罗单口相声还没看呢）&lt;/p&gt;
&lt;p&gt;所以，很多人应该很早前就看过本书。并且从书里面学到了很多智慧来运用在日常的生活当中。而且就拿出里面的片段出来都可以变成单独的流行文章。所以，我不应该怎么晚才看到这本书。暴露出自己最近10年来的阅读量远远小于自己设定的的阅读量。&lt;/p&gt;
&lt;p&gt;如果还没有看过「引爆点」，强烈推荐。&lt;/p&gt;
&lt;h2 id=&quot;依旧是在研究人啊&quot;&gt;&lt;a href=&quot;#依旧是在研究人啊&quot; class=&quot;headerlink&quot; title=&quot;依旧是在研究人啊&quot;&gt;&lt;/a&gt;依旧是在研究人啊&lt;/h2&gt;&lt;p&gt;前两天才说过，貌似除了自然学科。其他的都是在研究人。对人和人性的探究，从 DNA 到思想。&lt;/p&gt;
&lt;p&gt;我觉得「引爆点」的作者马尔科姆·格拉德威尔应该是试图从科学的角度系统的说明为何一个东西会在某个标准性的时间或者事件以后成为流行的原因。&lt;/p&gt;
&lt;p&gt;马尔科姆·格拉德威尔选择的所有例子都是围绕着社会问题来进行选择的。美国独立战争的开端、普通大众流行的鞋子、及其成功学前儿童所看的电视节目、吸烟吸毒、整顿地铁降低犯罪率、小岛上的自杀等等。方向并不单一。而且我经常在国外的书里面看到，在大学里面进行的志愿者实验来佐证自己的观点。我从来没有听说过我的大学有进行过类似为了科学研究一个事情用这样的随机普通样本进行的试验。仅从这点上来看，天朝的大学离现代正在的大学差距不是一星半点。当然可能我读的大学和能接触到的大学都比较low。有以偏概全的嫌疑。不过我还是坚持这种天朝所有大学离真正的科学、民主、自由的现代大学有十万八千里的距离的观点。&lt;/p&gt;
&lt;p&gt;继续扯远一些，其实现代文明社会和天朝都有在研究人。但是给我的感觉是孑然不同的。我的感觉现代文明社会研究人，把每个人都当作一个独立的个体来研究。不管怎么样，是伟大、普通平凡、还是十恶不赦。在当作科学来研究的时候。都是平等的。但是天朝不是，天朝是啥。就自己感受吧。&lt;/p&gt;
&lt;h2 id=&quot;「引爆点」和-「厚黑学」&quot;&gt;&lt;a href=&quot;#「引爆点」和-「厚黑学」&quot; class=&quot;headerlink&quot; title=&quot;「引爆点」和 「厚黑学」&quot;&gt;&lt;/a&gt;「引爆点」和 「厚黑学」&lt;/h2&gt;&lt;p&gt;两个毫不相关的书，在我心里却有一些联系。&lt;/p&gt;
&lt;p&gt;「引爆点」看完以后我发现其实它根本没有直接跟互联网跟移动互联网有半毛钱的关系。但是它确实是在这个圈子里倍受推崇。看封面和封腰都有一堆大佬什么联袂推荐，很是反感。为什么呢，因为如果理解了流行的趋势，做出了倍受欢迎的互联网产品这都是金灿灿的钱钱啊，能不倍受推崇么。可是在我心里就有这么觉得变扭呢。我觉得马尔科姆·格拉德威尔写这本书，更加想解决的是能不能降低未成年人吸烟吸毒的人数。能不能提高儿童学习的效率。能不能降低城市的犯罪概率等等。简单来说就是如何运用这些原理来拯救世界。但是却被安利来做赚钱的东西。简单说来就是杀鸡用牛刀、高射炮打蚊子。说不出的别扭。&lt;/p&gt;
&lt;p&gt;同样的情况发生在我看完「厚黑学」以后。在看之前我对「厚黑学」的想象是这是一本教人如何黑心假面的书。如何教人变成一个油腔滑调的人的书。在我的幼稚的心智里面觉得是一本贬义的书，一本黑暗的书。但是我某天无聊买回来看完以后觉得我靠真的可以算一本奇书。书里提到的方法和写下的当时的环境。作者提出的厚黑之术居然是为了拯救当时千疮百孔、摇摇欲坠的中国。而且按照我认知里面推算，应该是可行的方案。也就是说，「厚黑学」我觉得能算做国术，是有大智慧的。一个具有大智慧的治国之术在天朝大地流行的原因跟无数人挤破脑袋要去考公务员的原因是一样的时候，心中泛起当下所在的天朝是多么的荒诞无稽。&lt;/p&gt;
&lt;p&gt;所以这两本书都给我一种作者是心怀天下交出了绝世武功本想要世人拯救世界，却被世人天天拿来打野鸡烤了吃。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;貌似我的记忆方法一直有问题，所以我有些事情会相当的记不住。人名就算一个。特别是国外翻译的人名。我脑子里面几乎就没几个。挤破脑袋只能想起K·K叫凯文·凯利。现在，我应该郑重的多记忆几次马尔科姆·格拉德威尔。今年应该会把他的几本书都扫一遍。&lt;/p&gt;
&lt;p&gt;最后 ，「引爆点」5星推荐。并不是因为它可以让你一下就能做出个淘宝爆款出来。而是书里用科学的态度来说明了我们世界里面一些真实运作的原理。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons%E3%80%82org/licenses/by-nc/4%E3%80%820/deed%E3%80%82zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu%E3%80%82com/atom%E3%80%82xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;嗯，在一月的最后一天的最后一个小时开始写这篇读书笔记。也就算做这个月输出了3篇 blog。如果对比2014年这种令人发指的输出量来说。对于自己不得不说是一个巨大的进步。&lt;/p&gt;
&lt;p&gt;这本「引爆点」是在去上海开年会的来回路程上扫完的。顺便说一句，Sumi 除了Kevin Cao。其它全部在上海喝了残血回程的。 我还内伤了回来在医院躺了2天。 这是后话了。可见战斗力下降的厉害。&lt;/p&gt;
&lt;p&gt;最近我看书，一边看、一边会去联系一堆事物进行思考。因此现在的读书笔记也是想到什么写什么。并不是上学时候那种读书笔记顺序条例整齐的。算做观后随笔之类的吧。&lt;/p&gt;
&lt;p&gt;最后的一句扯淡，我不应该怎么晚才看到这本书。&lt;/p&gt;
    
    </summary>
    
    
      <category term="read book notes" scheme="http://iiiyu.com/tags/read-book-notes/"/>
    
  </entry>
  
  <entry>
    <title>2014年 Oh My Star 总结</title>
    <link href="http://iiiyu.com/2015/01/20/2014-oh-my-star-app-annual-summary/"/>
    <id>http://iiiyu.com/2015/01/20/2014-oh-my-star-app-annual-summary/</id>
    <published>2015-01-20T15:33:41.000Z</published>
    <updated>2015-12-29T18:23:27.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;最近啊一堆一堆的人们在晒自己的 App 收入。其实吧，2014年。我也参与弄了个工作以外的 App 出来。不过一直觉得这点收入太低实在不好意思说出来。不过看着大家都晒的好欢乐的样子也忍不住说说。（其实是看见有人垫底儿，哈我就不告诉你是谁）&lt;/p&gt;
&lt;h2 id=&quot;Oh-My-Star-缘起&quot;&gt;&lt;a href=&quot;#Oh-My-Star-缘起&quot; class=&quot;headerlink&quot; title=&quot;Oh My Star 缘起&quot;&gt;&lt;/a&gt;Oh My Star 缘起&lt;/h2&gt;&lt;h3 id=&quot;软件想法&quot;&gt;&lt;a href=&quot;#软件想法&quot; class=&quot;headerlink&quot; title=&quot;软件想法&quot;&gt;&lt;/a&gt;软件想法&lt;/h3&gt;&lt;p&gt;这个想法其实挺早就由各种混沌的想法构成了。最开始的时候是大概 2013 年初左右，现在坐在我旁边的 linjunpop 高富帅他在 Github 上的 Star Repo 已经直逼2000+。王放放童鞋的也快1000+ 的 Star 数量。然后大家就在说做一个 App 来管理啊来管理。不过说归说。对于一群懒癌末期的人来说。说完我们就去联机打游戏去了。&lt;/p&gt;
&lt;p&gt;不过我的 Star 数量也开始变得多起来。得益于我的渣记忆力和 Github 对已经 Star 过的项目的渣搜索能力。经常找一些记得 Star 过的项目，但是它已经淹没在茫茫 Repo 海了。&lt;/p&gt;
&lt;p&gt;一直到大概2013年8月份的时候。我感觉吧，我特别需要一个管理 Github Star 的工具。没有怎么办，自己做呗。&lt;/p&gt;
&lt;p&gt;鉴于我的渣编程能力和懒癌末期，我决定拖一个人来一起弄。所以，我把我师兄 Noark9 忽悠下水了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;名字&quot;&gt;&lt;a href=&quot;#名字&quot; class=&quot;headerlink&quot; title=&quot;名字&quot;&gt;&lt;/a&gt;名字&lt;/h3&gt;&lt;p&gt;名字其实我挺早前就想好的，追述到我第一次使用 Oh My Zsh 的时候。惊为天人。感觉这个 shell 真她妈的叼。又再次鉴于我渣一般的洋文能力。我那会暗暗下定决心。我以后的项目都要叫 Oh My XXX。 简单又好记。还是向 Oh My Zsh 的致敬。（这个想法在微博上被萌妹子 Gril iOS 一语道破。这是后话。然后出现了也喜欢用 Oh My XXX 来命名自己项目的16岁少年 NSTongG，这更是后后话了 ）&lt;/p&gt;
&lt;p&gt;所以，霸气的确定 这个管理 Github Star 的 App。名字叫做 Oh My Star。&lt;/p&gt;
&lt;h2 id=&quot;前期调研&quot;&gt;&lt;a href=&quot;#前期调研&quot; class=&quot;headerlink&quot; title=&quot;前期调研&quot;&gt;&lt;/a&gt;前期调研&lt;/h2&gt;&lt;p&gt;要钱没钱，要啥没啥。就有个想法，做个东西。还要忽悠其他人来做。这个不靠谱啊不靠谱，所以我装模作样的做了一下号称是前期调研的东西去忽悠我师兄。&lt;/p&gt;
&lt;p&gt;我大概查看了一下 Github 的 ALEXA 排名。然后用 IP 数量加上预估拥有 Mac 的人的数量再乘了一个极小的百分比。得到最终 Oh My Star 的用户在1万用户到2万用户之间。&lt;/p&gt;
&lt;p&gt;按照1万用户，9.9刀的定价计算&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10000 x 9.9 x 6.1 x 0.7  = 422730 rmb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;五五分以后，一人有20万耶。&lt;/p&gt;
&lt;p&gt;马上就可以迎娶白富美，当上 CEO。走向人生巅峰了哦。&lt;/p&gt;
&lt;p&gt;Noark9 被成功忽悠。 Get it.&lt;/p&gt;
&lt;h2 id=&quot;纠结的推进&quot;&gt;&lt;a href=&quot;#纠结的推进&quot; class=&quot;headerlink&quot; title=&quot;纠结的推进&quot;&gt;&lt;/a&gt;纠结的推进&lt;/h2&gt;&lt;h3 id=&quot;开发&quot;&gt;&lt;a href=&quot;#开发&quot; class=&quot;headerlink&quot; title=&quot;开发&quot;&gt;&lt;/a&gt;开发&lt;/h3&gt;&lt;p&gt;在幻想了人生巅峰以后。我们两个开始着手开发来着。那会我 iOS 都没有玩溜，Noark9 刚刚购买了 Macbook Air 的两个 OS X 初哥就开始吭哧吭哧写代码了。&lt;/p&gt;
&lt;p&gt;我算懂一点点 Cocoa Touch。但是点开 Cocoa 的类。各种傻眼。还是她妈的很不一样啊。随便调用一下跟预期不符合啊。我熟悉的 ViewCotnroller 呢。 怎么拖出来怪怪的。怎么随便拖个 TextField 会多个东西嵌套着。然后，格志爆 iCloud bug 了。恩我跟师兄说了声去去就回，然后就留下我师兄一个人吭哧吭哧的弄了。去的时候喵了一眼恩，我师兄还在装 Ruby 呢。(我这么黑他不会被砍死哈)&lt;/p&gt;
&lt;p&gt;过程就是各种腥风血雨啊。无数次想要放弃都是师兄抗过来了啊。（我就主要弄了下 Core Data 和 iCloud 部分）&lt;/p&gt;
&lt;p&gt;所以 iOS 和 OS X 其实很不一样。从使用方式到产品设计再到代码编写。我倾向于认为他们是两套系统。只是恰好都使用了 Objective - C 而已（那会没有 发布 Swift好吧）当然目前两者开始大规模融合。不过我认为因为使用场景的不同，再设计产品的时候依然需要认为是两套系统。&lt;/p&gt;
&lt;h3 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h3&gt;&lt;p&gt;程序员写程序最怕啥。 做出来丑的像坨翔。师兄说这个样子看着不行啊。这么丑谁会花9.9刀买呢。 没人买，怎么去取自己的白富美啊。被师兄这么一说我也是鸭梨很大啊。所以我暗暗下定决心，不能让 Oh My Star 看起来太丑。&lt;/p&gt;
&lt;h4 id=&quot;UI&quot;&gt;&lt;a href=&quot;#UI&quot; class=&quot;headerlink&quot; title=&quot;UI&quot;&gt;&lt;/a&gt;UI&lt;/h4&gt;&lt;p&gt;当时我们大 Sumi 还是有全职设计师的哦。还是妹子哦。于是我花了两顿 KFC 的代价。忽悠了我们张玲玲同学来画 Oh My Star 的 UI。期间又不定期花费若干干锅田鸡、KFC 等资源。&lt;/p&gt;
&lt;h4 id=&quot;图标&quot;&gt;&lt;a href=&quot;#图标&quot; class=&quot;headerlink&quot; title=&quot;图标&quot;&gt;&lt;/a&gt;图标&lt;/h4&gt;&lt;p&gt;现在的图标是第二个版本。&lt;/p&gt;
&lt;p&gt;第一个版本是我先用了一天学习了一下 Sketch。然后花了 2-3 天鲁了一个图标出来。像这样的&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eohixrvbz4j212m13y0we.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我会告诉你这个五角星的角度我算了几页草稿纸&lt;/p&gt;
&lt;p&gt;后面上线以后有人说跟 QQ 空间一样一样的。然后师兄就开始用幽怨的眼神看我。意思是说操谁会花9.9刀买个 QQ 空间啊。这样我的白富美是娶不上了。我又再次暗暗下定决心，不能让 Oh My Star 的 icon 看起来太丑。&lt;/p&gt;
&lt;p&gt;可是我画的师兄不满意啊。愁死我了。最后没办法我就在微博上找设计师啊。一个一个厚颜无耻的发私信过去说我是小鲜肉啊。赶紧点我点我啊。人家一看这是神经病吧，一开始没人理我。睡了一天晚上起来，后来有个设计师回复我了。是平潇大大。然后我就画了一个极其华丽的草图过去给他。&lt;/p&gt;
&lt;p&gt;解释一下我的意图：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们是一个 Github 周边应用。如果可以，我很想把章鱼猫给搞进去。但是我们仔细看了 Github 版权和授权。是不可以出现章鱼猫的。&lt;/li&gt;
&lt;li&gt;那不能出现我就想着，出现一部分是可以的吧。所以有个触手。暗喻章鱼猫。&lt;/li&gt;
&lt;li&gt;这个触手在搞毛呢， 在整理星星啊。暗喻我们是一个管理 Github Star 的应用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;嗯那，这就是我华丽的草图。&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/a6d3226bgw1eohj2w7jg2j21kw1kwk9m.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;平潇大大就依靠我已经够详细的草图把 Oh My Star 的现在版本的 icon 画好了。&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/a6d3226bgw1eohj3axxr6j210y10ctf7.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;(其实吧，现在有一个第三版本的图标哦。这是后话了)&lt;/p&gt;
&lt;h4 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://ohmystarapp.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;的介绍是我写了中文，师兄以及贺锦同学帮忙翻译的。官网是我找了我高中同学夔大做的。官网之所以这么丑，是因为我真的找不到人来设计了。555。师兄我尽力了。&lt;/p&gt;
&lt;h4 id=&quot;视频&quot;&gt;&lt;a href=&quot;#视频&quot; class=&quot;headerlink&quot; title=&quot;视频&quot;&gt;&lt;/a&gt;视频&lt;/h4&gt;&lt;p&gt;由于官网太丑。洋文介绍也不知道介绍清楚没有。我决定，弄个视频出来。然后我花了一天晚上写了个剧本。花了一下午录制了一下。花了几天学习了一下 iMovie 然后做出来了现在官网上的&lt;a href=&quot;http://vimeo.com/83384649&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;那个视频&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;推广&quot;&gt;&lt;a href=&quot;#推广&quot; class=&quot;headerlink&quot; title=&quot;推广&quot;&gt;&lt;/a&gt;推广&lt;/h2&gt;&lt;p&gt;当上线以后，我以为。我就可以坐收绿油油的美刀了。可惜我错了。根本没有人购买！我做了个这么叼的诶噗噗出来。居然没有人知道。才意识到推广的作用。&lt;/p&gt;
&lt;p&gt;推广做了以下几种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;论坛 V2EX Ruby-China&lt;/li&gt;
&lt;li&gt;Weibo 的几个大 V：池院长 巧哥 大别 onevcat 等&lt;/li&gt;
&lt;li&gt;邮件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;论坛就自己去发的帖子，然后弄了抽奖。送了一些兑换码。也有一些朋友支持。&lt;/p&gt;
&lt;p&gt;然后厚着已经没有的脸皮去找池院长，巧哥。他们在微信公众号里面和微博推了。继续厚着脸皮找大别、onevcat。然后他们再微博上推了一下。同时配合着做了一周的半价。&lt;/p&gt;
&lt;p&gt;说两个事情，一个是大家都很好，虽然平时感觉他们都是高冷的状态。但是一听说是独立开发者做的。大家都还是很 nice 的帮着宣传。二是，冰点这一周销售了到目前为止的80%以上的销量。所以很是感谢帮忙。&lt;/p&gt;
&lt;p&gt;邮件是怎么一会事情呢。当时冰点一周过后，立马没有人买了。很是着急。然后我想了个办法，我在 Github 人肉找了一些 Star 数量超过500的人。然后发邮件去推销 Oh My Star。这样我一天发30封左右的邮件。可能会卖出1-2份。但是带来了巨大的副作用。有2个人直接回复骂娘。然后说 Oh My Star 是垃圾应用。其中一个还去推上@Github 说我滥用邮箱。叫把 Oh My Star 从 Github 里面除名。骂我可以，骂 Oh My Star 就怎么都忍不了。本来准备叫师兄批量爬邮箱然后发送推广邮件的。我反思了一下，觉得这个行为确实很不妥。然后就停止了发送邮件的这个行为。&lt;/p&gt;
&lt;h2 id=&quot;目前收益&quot;&gt;&lt;a href=&quot;#目前收益&quot; class=&quot;headerlink&quot; title=&quot;目前收益&quot;&gt;&lt;/a&gt;目前收益&lt;/h2&gt;&lt;h3 id=&quot;排名&quot;&gt;&lt;a href=&quot;#排名&quot; class=&quot;headerlink&quot; title=&quot;排名&quot;&gt;&lt;/a&gt;排名&lt;/h3&gt;&lt;p&gt;被推广的第二天我一上线。喵神就说我发达了。 我一头雾水。然后他说已经在Developer Tools 中国区付费榜上排第一了。我一看我操，还真是。心里还是有点小激动搭。赶紧打开iTC去看卖了多少。结果才10几份。我这个落差的心情啊。连开发者的本都没有回来。不过由于各种时差的关系其实比这个多一些。只是报表还没出来。后来居然出现在了中国区付费总榜前10了。其实那会也就50几份。后来一直冲到总版第三。虽然只是短短的几个小时，但是对我来说这个意义还是非常大的。说出去也是可以装逼了的。&lt;/p&gt;
&lt;h3 id=&quot;收益&quot;&gt;&lt;a href=&quot;#收益&quot; class=&quot;headerlink&quot; title=&quot;收益&quot;&gt;&lt;/a&gt;收益&lt;/h3&gt;&lt;p&gt;目前用户是 414.&lt;br&gt;购买用户是 265.其中80%是冰点购入&lt;br&gt;目前上线一年总收益是1300刀。（没有算2年的 Mac 开发者。一堆其他投入： KFC 啥的）然后五五分。（我感觉我需要躲着我师兄了）&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eohivjh2z7j21kw0r9aco.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;多说两句：其实吧，感觉没有赚钱相反用的更多了。因为一旦我看见卖出一个，我就会说，恩今天可以加个肉。 卖出2个我就会,恩今天这个贵的 App 可以入了。这样不知不觉其实钱都还没有拿到手。就花费出去了，结果第二天一看，人家退款了。欲哭无泪啊都。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;h3 id=&quot;感谢&quot;&gt;&lt;a href=&quot;#感谢&quot; class=&quot;headerlink&quot; title=&quot;感谢&quot;&gt;&lt;/a&gt;感谢&lt;/h3&gt;&lt;p&gt;首先感谢购买和使用 Oh My Star 的用户。然后再次感谢这篇文章里面出现过的所有人。哦对了有两个没有提到 一个是 ianva 他提供了现在 readme 的样式文件。一个是 Ruby-China 上为 Oh My Star 写了一个 alfred workflow 的用户。同样很感谢。&lt;/p&gt;
&lt;h3 id=&quot;Remote&quot;&gt;&lt;a href=&quot;#Remote&quot; class=&quot;headerlink&quot; title=&quot;Remote&quot;&gt;&lt;/a&gt;Remote&lt;/h3&gt;&lt;p&gt;我和师兄以及全部参与 Oh My Star 项目的人。全部都是在线上沟通以及协作。&lt;br&gt;使用到了一下工具：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;li&gt;QQ&lt;/li&gt;
&lt;li&gt;Trello&lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;li&gt;Gmail&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;这一年学习到了什么&quot;&gt;&lt;a href=&quot;#这一年学习到了什么&quot; class=&quot;headerlink&quot; title=&quot;这一年学习到了什么&quot;&gt;&lt;/a&gt;这一年学习到了什么&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;以后我做的软件将会永远不降价。因为根据我自己的体验来说。本来我很开心的买了 App 使用着。就算隔了半年之久看见他降价了我还是会很伤心。同样我的用户也会有这样的感受。所以以后我做的软件将会永远不降价。&lt;/li&gt;
&lt;li&gt;因为 MAS 的机制和一些市场上的考虑。不管是 iOS 还是 OS X 的 App 。都应该是 免费 + IAP 模式。这样一定是主流的配置。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;问-amp-答&quot;&gt;&lt;a href=&quot;#问-amp-答&quot; class=&quot;headerlink&quot; title=&quot;问 &amp;amp; 答&quot;&gt;&lt;/a&gt;问 &amp;amp; 答&lt;/h3&gt;&lt;p&gt;问：Oh My Star 以后会降价么&lt;/p&gt;
&lt;p&gt;答：不会&lt;/p&gt;
&lt;p&gt;问：Oh My Star 以后会涨价么&lt;/p&gt;
&lt;p&gt;答：看心情&lt;/p&gt;
&lt;p&gt;问：怎么购买 Oh My Star&lt;/p&gt;
&lt;p&gt;答：猛击&lt;a href=&quot;https://itunes.apple.com/us/app/oh-my-star/id788446112?l=en&amp;amp;mt=12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;连接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问 ：OMS 很久没有更新了，还会维护更新么。&lt;/p&gt;
&lt;p&gt;答 ：会。16岁很厉害的小哥 NSTongG 已经答应帮 OMS 修复 bug 了。&lt;/p&gt;
&lt;p&gt;问 ： OMS 的未来有什么打算&lt;/p&gt;
&lt;p&gt;答 ： 有一个大大的计划&lt;/p&gt;
&lt;p&gt;问 ： 那这个大大的计划会去实现么&lt;/p&gt;
&lt;p&gt;答 ： 会&lt;/p&gt;
&lt;p&gt;问 ： 什么时候呢&lt;/p&gt;
&lt;p&gt;答 ： 遥遥无期（遁走）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;最近啊一堆一堆的人们在晒自己的 App 收入。其实吧，2014年。我也参与弄了个工作以外的 App 出来。不过一直觉得这点收入太低实在不好意思说出来。不过看着大家都晒的好欢乐的样子也忍不住说说。（其实是看见有人垫底儿，哈我就不告诉你是谁）&lt;/p&gt;
&lt;h2 id=&quot;Oh-My-Star-缘起&quot;&gt;&lt;a href=&quot;#Oh-My-Star-缘起&quot; class=&quot;headerlink&quot; title=&quot;Oh My Star 缘起&quot;&gt;&lt;/a&gt;Oh My Star 缘起&lt;/h2&gt;&lt;h3 id=&quot;软件想法&quot;&gt;&lt;a href=&quot;#软件想法&quot; class=&quot;headerlink&quot; title=&quot;软件想法&quot;&gt;&lt;/a&gt;软件想法&lt;/h3&gt;&lt;p&gt;这个想法其实挺早就由各种混沌的想法构成了。最开始的时候是大概 2013 年初左右，现在坐在我旁边的 linjunpop 高富帅他在 Github 上的 Star Repo 已经直逼2000+。王放放童鞋的也快1000+ 的 Star 数量。然后大家就在说做一个 App 来管理啊来管理。不过说归说。对于一群懒癌末期的人来说。说完我们就去联机打游戏去了。&lt;/p&gt;
&lt;p&gt;不过我的 Star 数量也开始变得多起来。得益于我的渣记忆力和 Github 对已经 Star 过的项目的渣搜索能力。经常找一些记得 Star 过的项目，但是它已经淹没在茫茫 Repo 海了。&lt;/p&gt;
&lt;p&gt;一直到大概2013年8月份的时候。我感觉吧，我特别需要一个管理 Github Star 的工具。没有怎么办，自己做呗。&lt;/p&gt;
&lt;p&gt;鉴于我的渣编程能力和懒癌末期，我决定拖一个人来一起弄。所以，我把我师兄 Noark9 忽悠下水了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="just-talk" scheme="http://iiiyu.com/tags/just-talk/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 「疯传」</title>
    <link href="http://iiiyu.com/2015/01/16/read-contagious/"/>
    <id>http://iiiyu.com/2015/01/16/read-contagious/</id>
    <published>2015-01-16T15:37:06.000Z</published>
    <updated>2015-01-16T17:37:38.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons%E3%80%82org/licenses/by-nc/4%E3%80%820/deed%E3%80%82zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu%E3%80%82com/atom%E3%80%82xml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;连续三年了，我都只有1月有写过读书笔记。今年又是如此。我只能为自己找个台阶下。懒癌末期患者，请这个世界多给一点点宽容。&lt;/p&gt;
&lt;p&gt;记不得上次看完一本书是什么时候了，最近一年来如果一本书看了超过24小时。那我是绝对的看不完。 能看完的都是花了一个通宵就看了。&lt;/p&gt;
&lt;p&gt;对了，元旦在动车上重新看了一下修摩托车。 那本书看了2年了，断断续续的。就没有看完过。&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;疯传&quot;&gt;&lt;a href=&quot;#疯传&quot; class=&quot;headerlink&quot; title=&quot;疯传&quot;&gt;&lt;/a&gt;疯传&lt;/h2&gt;&lt;h3 id=&quot;病毒式传播&quot;&gt;&lt;a href=&quot;#病毒式传播&quot; class=&quot;headerlink&quot; title=&quot;病毒式传播&quot;&gt;&lt;/a&gt;病毒式传播&lt;/h3&gt;&lt;p&gt;开头和结尾都说了一个事情。就是近年来出现了一些爆炸性的传播事件和产品。他们的传播方式都是类似病毒的传播方式。&lt;/p&gt;
&lt;p&gt;来来来科普一下&lt;a href=&quot;http://zh%E3%80%82wikipedia%E3%80%82org/wiki/%E7%97%85%E6%AF%92#%E3%80%82E7%E3%80%8297%E3%80%8285%E3%80%82E6%E3%80%82AF%E3%80%8292%E3%80%82E8%E3%80%8288%E3%80%8287%E3%80%82E4%E3%80%82BA%E3%80%82BA%E3%80%82E9%E3%80%82A1%E3%80%829E%E3%80%82E7%E3%80%8296%E3%80%82BE%E3%80%82E7%E3%80%8297%E3%80%8285&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;病毒&lt;/a&gt;。&lt;a href=&quot;http://zh%E3%80%82wikipedia%E3%80%82org/wiki/%E7%97%85%E6%AF%92%E8%90%A5%E9%94%80&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;病毒营销&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而整本书就是在说，要构建一次病毒营销需要怎么做。并且有一些实验结果和真实世界的案例来支撑他要表达的理论。&lt;/p&gt;
&lt;h3 id=&quot;六条原则-SETPPS&quot;&gt;&lt;a href=&quot;#六条原则-SETPPS&quot; class=&quot;headerlink&quot; title=&quot;六条原则 SETPPS&quot;&gt;&lt;/a&gt;六条原则 SETPPS&lt;/h3&gt;&lt;p&gt;疯传的主体主要围绕着下面六条原则在进行表述。&lt;/p&gt;
&lt;h4 id=&quot;社交货币&quot;&gt;&lt;a href=&quot;#社交货币&quot; class=&quot;headerlink&quot; title=&quot;社交货币&quot;&gt;&lt;/a&gt;社交货币&lt;/h4&gt;&lt;p&gt;我们会共享那些让我们显得更优秀的事情。&lt;/p&gt;
&lt;h4 id=&quot;诱因&quot;&gt;&lt;a href=&quot;#诱因&quot; class=&quot;headerlink&quot; title=&quot;诱因&quot;&gt;&lt;/a&gt;诱因&lt;/h4&gt;&lt;p&gt;顶尖的记忆，风口浪尖的提醒。&lt;/p&gt;
&lt;h4 id=&quot;情绪&quot;&gt;&lt;a href=&quot;#情绪&quot; class=&quot;headerlink&quot; title=&quot;情绪&quot;&gt;&lt;/a&gt;情绪&lt;/h4&gt;&lt;p&gt;当我们关心时，我们回去共享。&lt;/p&gt;
&lt;h4 id=&quot;公共性&quot;&gt;&lt;a href=&quot;#公共性&quot; class=&quot;headerlink&quot; title=&quot;公共性&quot;&gt;&lt;/a&gt;公共性&lt;/h4&gt;&lt;p&gt;构建可视的、正面的事物。&lt;/p&gt;
&lt;h4 id=&quot;实用价值&quot;&gt;&lt;a href=&quot;#实用价值&quot; class=&quot;headerlink&quot; title=&quot;实用价值&quot;&gt;&lt;/a&gt;实用价值&lt;/h4&gt;&lt;p&gt;如果有用，人们会情不自禁的共享。&lt;/p&gt;
&lt;h4 id=&quot;故事&quot;&gt;&lt;a href=&quot;#故事&quot; class=&quot;headerlink&quot; title=&quot;故事&quot;&gt;&lt;/a&gt;故事&lt;/h4&gt;&lt;p&gt;以闲聊为幌子的信息传播&lt;/p&gt;
&lt;p&gt;以上大概就是这本30块。240页的精华终结内容。&lt;/p&gt;
&lt;h2 id=&quot;自己的思考（下面是吐槽时间）&quot;&gt;&lt;a href=&quot;#自己的思考（下面是吐槽时间）&quot; class=&quot;headerlink&quot; title=&quot;自己的思考（下面是吐槽时间）&quot;&gt;&lt;/a&gt;自己的思考（下面是吐槽时间）&lt;/h2&gt;&lt;h3 id=&quot;人&quot;&gt;&lt;a href=&quot;#人&quot; class=&quot;headerlink&quot; title=&quot;人&quot;&gt;&lt;/a&gt;人&lt;/h3&gt;&lt;p&gt;其实吧，我觉得。除了一些探索宇宙奥秘或者探索其他普通人感觉没啥用的科学领域。这个世界的绝大部分人类。都是在研究人。&lt;/p&gt;
&lt;p&gt;我开个馆子吧。 要研究人喜欢吃啥。&lt;br&gt;我卖个衣服吧。要研究人喜欢穿啥。&lt;br&gt;我想当个总统吧。要研究把其他人的选票搞过来。&lt;br&gt;我想当升个官吧。要研究领导的喜好。&lt;br&gt;我想做个 App 吧。要研究最近的人缺啥东西。&lt;br&gt;我想拍个电视剧吧。要研究这人体的胸要怎么才能不在摄像范围内。&lt;/p&gt;
&lt;p&gt;「疯传」通篇读下来。无非就是人性二字。&lt;/p&gt;
&lt;h3 id=&quot;我思考的六条原则&quot;&gt;&lt;a href=&quot;#我思考的六条原则&quot; class=&quot;headerlink&quot; title=&quot;我思考的六条原则&quot;&gt;&lt;/a&gt;我思考的六条原则&lt;/h3&gt;&lt;h4 id=&quot;社交货币-1&quot;&gt;&lt;a href=&quot;#社交货币-1&quot; class=&quot;headerlink&quot; title=&quot;社交货币&quot;&gt;&lt;/a&gt;社交货币&lt;/h4&gt;&lt;p&gt;人是社交动物。社交是人的一部分。人并不能在这个世界上单独存在。所以，病毒营销的基石就是说。人终归要交流的。但你在交流的时候，你需要一些素材。这些素材用来满足你的虚荣心，荣誉感。让你在社交中显得与众不同。显的更加优秀。&lt;/p&gt;
&lt;p&gt;这个道理对于从小喜欢看动物世界的我来说非常容易理解。这是天性。是一种繁殖的本能。把自己突出于周围的同类。可以获得更加优秀的交配对象。从而产下优良的后代。这种天性我估摸着是写到 DNA 里面的。所以你可以看到都是晒美食、晒豪车、晒出国旅游。&lt;/p&gt;
&lt;p&gt;在我看来都是基因里面在说：“hi，我是个强壮又富有魅力的异性哦。来一起啪啪啪吧”&lt;/p&gt;
&lt;p&gt;扯远了。拉回来，作者提出了社交货币（Social Currency）这种概念是什么意思呢。其实还是很好理解的。货币用来干嘛？交换嘛。那社交货币也是用来交换使用的。货币还具备了流通性。所以作者的这个提法我认为是恰到好处的。&lt;/p&gt;
&lt;p&gt;所以这条原则其实就是说。要传播的基石。首先这个事件或者产品要能体现出知道你这个事情的人的优越性。说人话就是：知道这个事情的人就可以升职、加薪、当上 CEO 、迎娶白富美。走向人生巅峰了。至少感觉如此。&lt;/p&gt;
&lt;h4 id=&quot;诱因-1&quot;&gt;&lt;a href=&quot;#诱因-1&quot; class=&quot;headerlink&quot; title=&quot;诱因&quot;&gt;&lt;/a&gt;诱因&lt;/h4&gt;&lt;p&gt;这个世界上没有平白无故的爱、也没有莫名其妙的恨。你要传播一个事件或者产品。你肯定需要一个理由。&lt;br&gt;爱一个人需要理由吗？需要吗？需要吗！&lt;br&gt;诱因相当于这个事件的前置铺垫。看这个章节的时候，我脑海里面总会出现美剧里面的一些画面。大概就是看上去无关紧要的地方。恰好是关键的点。&lt;/p&gt;
&lt;p&gt;就像蝴蝶效应一样。诱因的在于，它导致的结果会放大很多个数量级。卷起海啸。&lt;/p&gt;
&lt;h4 id=&quot;情绪-1&quot;&gt;&lt;a href=&quot;#情绪-1&quot; class=&quot;headerlink&quot; title=&quot;情绪&quot;&gt;&lt;/a&gt;情绪&lt;/h4&gt;&lt;p&gt;还是在说人。人这种复杂的物种在开心和难过的时候都会做出一些强烈的举动。所以，可以利用这一点，来进行传播。书中也很明确的说了。开心和难过都具备很高的传播性质。&lt;/p&gt;
&lt;p&gt;举个开心的例子：国足2连胜&lt;br&gt;举个悲伤的例子：姚贝娜病逝&lt;/p&gt;
&lt;h4 id=&quot;公共性-1&quot;&gt;&lt;a href=&quot;#公共性-1&quot; class=&quot;headerlink&quot; title=&quot;公共性&quot;&gt;&lt;/a&gt;公共性&lt;/h4&gt;&lt;p&gt;这个感觉没啥好说的，如果是大熊猫要明天要灭绝了。肯定全世界都陷入悲痛。但是如果是 Sumi 肠粉要挂了。 明天就我悲伤了。&lt;/p&gt;
&lt;h4 id=&quot;实用价值-1&quot;&gt;&lt;a href=&quot;#实用价值-1&quot; class=&quot;headerlink&quot; title=&quot;实用价值&quot;&gt;&lt;/a&gt;实用价值&lt;/h4&gt;&lt;p&gt;举个例子：先不管到底实用不实用的问题。你看 QQ 空间 or WeChat 里面爹妈辈转发那些惨不忍睹的“使用 xx 小技巧”“xx 健康饮食大法”。 你就可以知道如果具备实用价值 or 看上去具备实用价值的东西是容易传播的。&lt;/p&gt;
&lt;h4 id=&quot;故事-1&quot;&gt;&lt;a href=&quot;#故事-1&quot; class=&quot;headerlink&quot; title=&quot;故事&quot;&gt;&lt;/a&gt;故事&lt;/h4&gt;&lt;p&gt;能说的一手好故事太 tm 重要了。你都不用说的多长。能在140字以内吧故事说好了。你都是日入几十万的人了呢。（原谅我的夸张）我们称为段子手。能吧传播的东西埋藏在故事里面的。 我们叫软文。&lt;br&gt;这个很好找例子，最近有关注 天才小熊猫。 微博上写软文目测不说第一，前三应该有的。你去看看他的转发量就知道一个好故事是多么具备传播力量。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;书中提到 「引爆点」这本书多次。 下本书应该就是它了。&lt;/li&gt;
&lt;li&gt;都什么年代了，生病了能不能相信科学，相信现代医学。那可是你自己的命呐。&lt;/li&gt;
&lt;li&gt;好多想吐槽的，写着写着就忘记了&lt;/li&gt;
&lt;li&gt;over &lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用，也欢迎在&lt;a href=&quot;http://creativecommons%E3%80%82org/licenses/by-nc/4%E3%80%820/deed%E3%80%82zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu%E3%80%82com/atom%E3%80%82xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;连续三年了，我都只有1月有写过读书笔记。今年又是如此。我只能为自己找个台阶下。懒癌末期患者，请这个世界多给一点点宽容。&lt;/p&gt;
&lt;p&gt;记不得上次看完一本书是什么时候了，最近一年来如果一本书看了超过24小时。那我是绝对的看不完。 能看完的都是花了一个通宵就看了。&lt;/p&gt;
&lt;p&gt;对了，元旦在动车上重新看了一下修摩托车。 那本书看了2年了，断断续续的。就没有看完过。&lt;/p&gt;
    
    </summary>
    
    
      <category term="read book notes" scheme="http://iiiyu.com/tags/read-book-notes/"/>
    
  </entry>
  
  <entry>
    <title>iOS 学习笔记 (36)  ReactiveCocoa 用 RACSignal 替代 Delegate</title>
    <link href="http://iiiyu.com/2014/12/26/learning-ios-notes-thirty-six/"/>
    <id>http://iiiyu.com/2014/12/26/learning-ios-notes-thirty-six/</id>
    <published>2014-12-26T10:36:31.000Z</published>
    <updated>2014-12-28T14:30:22.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;最近又在看  ReactiveCocoa 了（下面用 RAC 来替代 ReactiveCocoa）。虽然依然是 hello world 级别。但是 hello world 也是可以分级别的。这次自我感觉是一个偏向中级的 hello world。&lt;/p&gt;
&lt;p&gt;我们先来张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/a6d3226bgw1enpq6o5sz5j20ai09uglz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在 RAC 的文档和一些介绍 RAC 的 Keynote 资料里面我们可以看到说 RACSignal 可以来替代 Delegate、 Block Callbacks、Target Action、KVO、Notifications。&lt;/p&gt;
&lt;p&gt;但是貌似没有一种 hello world 的方式来进行说明如何替代的。&lt;/p&gt;
&lt;p&gt;插嘴:在中文 blog 里面见过几个写 RAC 的比较好哒。一个是&lt;a href=&quot;http://limboy.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;limboy大大&lt;/a&gt;的几篇深入浅出令人叹为观止，李忠大大不但研究透彻了然后还结合自己的实战经验写成很好的文章来分享。 另一个是&lt;a href=&quot;http://blog.sunnyxx.com/tags/Reactive%20Cocoa%20Tutorial/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sunnyxx的Reactive Cocoa Tutorial系列&lt;/a&gt;这个系列比较偏向研究 RAC 是如何实现和工作的。&lt;/p&gt;
&lt;p&gt;我这个人比较笨，最喜欢写 hello world。那就找时间一个一个来写呗。&lt;/p&gt;
&lt;p&gt;写之前 Google 了一下。所以以下内容大量参考:&lt;a href=&quot;http://spin.atomicobject.com/2014/02/03/objective-c-delegate-pattern/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Replacing the Objective-C “Delegate Pattern” with ReactiveCocoa&lt;/a&gt;。能看原文就去看看。然后忽略掉以下的 hello world 就好了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;实现功能说明&quot;&gt;&lt;a href=&quot;#实现功能说明&quot; class=&quot;headerlink&quot; title=&quot;实现功能说明&quot;&gt;&lt;/a&gt;实现功能说明&lt;/h2&gt;&lt;p&gt;本来想改成 TableView 的。改着改着感觉 TableView 的话。可能会牵扯到 MVVM 的问题。 才能架构出来一个正确的程序结构。而我只想说明简单的写清楚如何替代Delegate。所以相当于一个中文简化版本的 &lt;a href=&quot;http://spin.atomicobject.com/2014/02/03/objective-c-delegate-pattern/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Replacing the Objective-C “Delegate Pattern” with ReactiveCocoa&lt;/a&gt;了。&lt;/p&gt;
&lt;p&gt;那就跟他一样写搜索把。然后实现过程中发现 iOS 8 用新的 UISearchController 来替代了 UISearchDisplayController 了。 &lt;/p&gt;
&lt;h2 id=&quot;UISearchController-Delegate-常规实现&quot;&gt;&lt;a href=&quot;#UISearchController-Delegate-常规实现&quot; class=&quot;headerlink&quot; title=&quot;UISearchController Delegate 常规实现&quot;&gt;&lt;/a&gt;UISearchController Delegate 常规实现&lt;/h2&gt;&lt;p&gt;一般来说我们会设置protocol.&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchController.searchResultsUpdater = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchController.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后去委托的类里面实现相关的方法&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;#pragma&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;mark &lt;/span&gt;- UISearchResultsUpdating&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)updateSearchResultsForSearchController:(UISearchController *)searchController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt; (searchController.searchBar&lt;span class=&quot;meta&quot;&gt;.text&lt;/span&gt;.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self.searchResults &lt;/span&gt;= [&lt;span class=&quot;keyword&quot;&gt;self &lt;/span&gt;search:searchController.searchBar&lt;span class=&quot;meta&quot;&gt;.text&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;meta&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self.searchResults &lt;/span&gt;= &lt;span class=&quot;keyword&quot;&gt;self.searchTexts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self.tableView &lt;/span&gt;reloadData]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma mark - UISearchControllerDelegate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)willPresentSearchController:(&lt;span class=&quot;built_in&quot;&gt;UISearchController&lt;/span&gt; *)searchController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searching = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)willDismissSearchController:(&lt;span class=&quot;built_in&quot;&gt;UISearchController&lt;/span&gt; *)searchController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searching = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.tableView reloadData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;普通情况下我们就是这样来使用 Delegate 的。&lt;/p&gt;
&lt;p&gt;平淡无奇。下面我们来用 RACSignal 的实现方法。&lt;/p&gt;
&lt;h2 id=&quot;UISearchController-Delegate-RACSignal-实现&quot;&gt;&lt;a href=&quot;#UISearchController-Delegate-RACSignal-实现&quot; class=&quot;headerlink&quot; title=&quot;UISearchController Delegate RACSignal 实现&quot;&gt;&lt;/a&gt;UISearchController Delegate RACSignal 实现&lt;/h2&gt;&lt;p&gt;第一个要明确的是：我们要做什么。&lt;/p&gt;
&lt;h3 id=&quot;常规模式&quot;&gt;&lt;a href=&quot;#常规模式&quot; class=&quot;headerlink&quot; title=&quot;常规模式&quot;&gt;&lt;/a&gt;常规模式&lt;/h3&gt;&lt;p&gt;根据常规代码来看:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们需要在每次输入词变化的时候进行搜索。&lt;/li&gt;
&lt;li&gt;需要在进入和退出搜索的时候知道当前状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1对应的就是实现- (void)updateSearchResultsForSearchController:(UISearchController *)searchController&lt;/p&gt;
&lt;p&gt;2对应的是实现- (void)willPresentSearchController:(UISearchController &lt;em&gt;)searchController 和 - (void)willDismissSearchController:(UISearchController &lt;/em&gt;)searchController。&lt;/p&gt;
&lt;p&gt;现在，让我们来转换为 RAC 的思维模式思考问题。 &lt;/p&gt;
&lt;h3 id=&quot;RAC-模式&quot;&gt;&lt;a href=&quot;#RAC-模式&quot; class=&quot;headerlink&quot; title=&quot;RAC 模式&quot;&gt;&lt;/a&gt;RAC 模式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;UI 上需要搜索结果的 NSArray&lt;/li&gt;
&lt;li&gt;搜索结果由搜索关键字得来。&lt;/li&gt;
&lt;li&gt;每次修改关键字都应该更新搜索结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此我们要想办法吧 UI 上需要的数据和修改关键字这个动作绑定起来。 &lt;/p&gt;
&lt;p&gt;同理可以很容易想到。我们也需要把当前 UI 是否处于搜索状态跟会改变搜索状态的动作绑定起来。 &lt;/p&gt;
&lt;p&gt;要怎么绑定呢？ 拥有刚刚 RAC 超过 Hello World 实力的我，想到，我需要构建出来两个RACSignal。&lt;/p&gt;
&lt;p&gt;然后进行类似：&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RAC(&lt;span class=&quot;name&quot;&gt;self&lt;/span&gt;, searchResults) = SignalA&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAC(&lt;span class=&quot;name&quot;&gt;self&lt;/span&gt;, searching) = SignalB&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的绑定就皆大欢喜了。 &lt;/p&gt;
&lt;p&gt;主要用到了下面两个 RAC 的方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rac_signalForSelector:fromProtocol:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个方法主要是把 protocal 转为一个 Signal 便于使用。值得注意的是这个函数返回的是一个 RACTuple。 这个 RACTuple 包含了 Selector 方法里面所有的参数。这样需要用到的时候主要按照顺序来获取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rac_liftSelector:withSignalsFromArray:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个方法它的意思是当传入的 Signals 都至少sendNext过一次，接下来只要其中任意一个signal有了新的内容。就会去触发第一个 selector 参数的方法。&lt;/p&gt;
&lt;p&gt;构造两个 Signal 的代码如下 &lt;/p&gt;
&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  UISearchController+RAC.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)&lt;span class=&quot;title&quot;&gt;rac_textSignal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.searchResultsUpdater = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *&lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; &lt;/span&gt;= objc_getAssociatedObject(self, _cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; !&lt;/span&gt;= nil) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; &lt;/span&gt;= [[self &lt;span class=&quot;attribute&quot;&gt;rac_signalForSelector&lt;/span&gt;:@selector(&lt;span class=&quot;attribute&quot;&gt;updateSearchResultsForSearchController&lt;/span&gt;:) &lt;span class=&quot;attribute&quot;&gt;fromProtocol&lt;/span&gt;:@protocol(UISearchResultsUpdating)] &lt;span class=&quot;attribute&quot;&gt;map&lt;/span&gt;:^id(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UISearchController *searchController = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; searchController.searchBar.text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    objc_setAssociatedObject(self, _cmd, &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;, OBJC_ASSOCIATION_RETAIN_NONATOMIC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)&lt;span class=&quot;title&quot;&gt;rac_isActiveSignal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.delegate = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *&lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; &lt;/span&gt;= objc_getAssociatedObject(self, _cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; !&lt;/span&gt;= nil) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *willPresentSearching = [[self &lt;span class=&quot;attribute&quot;&gt;rac_signalForSelector&lt;/span&gt;:@selector(&lt;span class=&quot;attribute&quot;&gt;willPresentSearchController&lt;/span&gt;:) &lt;span class=&quot;attribute&quot;&gt;fromProtocol&lt;/span&gt;:@protocol(UISearchControllerDelegate)] &lt;span class=&quot;attribute&quot;&gt;mapReplace&lt;/span&gt;:@YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *willDismissSearching = [[self &lt;span class=&quot;attribute&quot;&gt;rac_signalForSelector&lt;/span&gt;:@selector(&lt;span class=&quot;attribute&quot;&gt;willDismissSearchController&lt;/span&gt;:) &lt;span class=&quot;attribute&quot;&gt;fromProtocol&lt;/span&gt;:@protocol(UISearchControllerDelegate)] &lt;span class=&quot;attribute&quot;&gt;mapReplace&lt;/span&gt;:@NO];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; &lt;/span&gt;= [RACSignal &lt;span class=&quot;attribute&quot;&gt;merge&lt;/span&gt;:@[willPresentSearching, willDismissSearching]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    objc_setAssociatedObject(self, _cmd, &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;, OBJC_ASSOCIATION_RETAIN_NONATOMIC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终绑定代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  RACMasterViewController.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RAC(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, searchResults) = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; rac_liftSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(search:) withSignalsFromArray:@[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchController.rac_textSignal]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchController.rac_textSignal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.tableView reloadData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RAC(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, searching) = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchController rac_isActiveSignal];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样我们就写完了一个用 RAC 来替代 Delegate （protocol） 的例子&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;使用 RAC 其实最重要的思维的转变。 这个转变在写代码的时候如果我没有思考的很清楚。 那我写出来就一团乱麻。还是需要多加锻炼 MVVM 的思维。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iiiyu/RACSignalDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实例代码已经上传Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下集预告 用 RACSignal 替代 Block Callbacks。有人会期待么？&lt;/p&gt;
&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://limboy.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;limboy大大&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sunnyxx.com/tags/Reactive%20Cocoa%20Tutorial/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sunnyxx的Reactive Cocoa Tutorial系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://spin.atomicobject.com/2014/02/03/objective-c-delegate-pattern/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Replacing the Objective-C “Delegate Pattern” with ReactiveCocoa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/robpearson/reactivecocoa-lessons-learned&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa Lessons Learned&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/deed.zh_TW&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;最近又在看  ReactiveCocoa 了（下面用 RAC 来替代 ReactiveCocoa）。虽然依然是 hello world 级别。但是 hello world 也是可以分级别的。这次自我感觉是一个偏向中级的 hello world。&lt;/p&gt;
&lt;p&gt;我们先来张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/a6d3226bgw1enpq6o5sz5j20ai09uglz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在 RAC 的文档和一些介绍 RAC 的 Keynote 资料里面我们可以看到说 RACSignal 可以来替代 Delegate、 Block Callbacks、Target Action、KVO、Notifications。&lt;/p&gt;
&lt;p&gt;但是貌似没有一种 hello world 的方式来进行说明如何替代的。&lt;/p&gt;
&lt;p&gt;插嘴:在中文 blog 里面见过几个写 RAC 的比较好哒。一个是&lt;a href=&quot;http://limboy.me&quot;&gt;limboy大大&lt;/a&gt;的几篇深入浅出令人叹为观止，李忠大大不但研究透彻了然后还结合自己的实战经验写成很好的文章来分享。 另一个是&lt;a href=&quot;http://blog.sunnyxx.com/tags/Reactive%20Cocoa%20Tutorial/&quot;&gt;sunnyxx的Reactive Cocoa Tutorial系列&lt;/a&gt;这个系列比较偏向研究 RAC 是如何实现和工作的。&lt;/p&gt;
&lt;p&gt;我这个人比较笨，最喜欢写 hello world。那就找时间一个一个来写呗。&lt;/p&gt;
&lt;p&gt;写之前 Google 了一下。所以以下内容大量参考:&lt;a href=&quot;http://spin.atomicobject.com/2014/02/03/objective-c-delegate-pattern/&quot;&gt;Replacing the Objective-C “Delegate Pattern” with ReactiveCocoa&lt;/a&gt;。能看原文就去看看。然后忽略掉以下的 hello world 就好了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iCloud 和 iCloud Drive</title>
    <link href="http://iiiyu.com/2014/10/20/iCloud-and-iCloud-Drive/"/>
    <id>http://iiiyu.com/2014/10/20/iCloud-and-iCloud-Drive/</id>
    <published>2014-10-19T16:25:52.000Z</published>
    <updated>2014-11-02T17:24:40.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;好久没有写 blog 了。 &lt;/li&gt;
&lt;li&gt;最近发现很多人对 iCloud 和 iCloud Drive 有些误解。而还没有看见中文里面有一个比较正确的说法。&lt;/li&gt;
&lt;li&gt;加上近两年来工作就是在学习 iCloud 如何使用。最近一个月做客服小弟回复了 N 个 iCloud 的问题。所以感觉还是有一些价值的。特意想记录一下。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;是否升级到-iCloud-Drive&quot;&gt;&lt;a href=&quot;#是否升级到-iCloud-Drive&quot; class=&quot;headerlink&quot; title=&quot;是否升级到 iCloud Drive&quot;&gt;&lt;/a&gt;是否升级到 iCloud Drive&lt;/h2&gt;&lt;p&gt;在 iOS 8 刚刚上线的时候，用户更新了以后。第一次会跳出来，说需要重新升级的 iCloud Drive。因为没有更多的信息和提示，我想一个正常的用户应该都会去点击升级。结果就是导致很多使用 iCloud 这个功能的 App 数据出现问题。或者导致了设备之间的不同步。那会有很多文章在建议不要升级 iCloud Drive。所以可能会给后来升级到 iOS 8 的用户造成一定的心里作用说升级 iCloud Drive 是不可靠的。&lt;/p&gt;
&lt;p&gt;其实根据我两年来 iCloud 的经验和测试结果。 iOS 8 的 iCloud Drive 是一个 Apple 云端的一次最重要的里程碑。 是 iCloud 这个技术在 Apple 产品系列上第一次做到了可用的状态。等了三年终于有个云的模样了。&lt;/p&gt;
&lt;p&gt;当时不建议升级 iCloud Drive 的理由其实就两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于开发者来说，由于 Apple 为了保密 iPhone 6 和 iPhone 6 Plus。 其实在9月发布会之前。 iOS 8 的 最后两个 Beta 版本是没有提供给开发者的。在能获得的最后的 Beta 版本上。 开发者使用 iCloud 依然各种莫名其妙的问题。一直到 GM 版本才变得正常。这样导致 GM 到发布正式的版本之间的时间。大部分开发者还无法把更新 iCloud 的技术及时的完善在自己的 App 里面。&lt;/li&gt;
&lt;li&gt;另外一个是在 iOS 8 已经放出来的时候，OS X 10.10 还没有放出来。这样如果你是一个 Apple 一套的普通用户。就会导致你一些全平台使用 iCloud 技术的 App无法相互同步。所以在当时确实这样情况的普通用户应该谨慎更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在11月了这两个问题随着开发者对 App 的完善和 OS X 10.10 释出。其实都不是问题了。大家可以放心大胆的升级了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;iCloud-升级到-iCloud-Drive-具体是做了什么事情&quot;&gt;&lt;a href=&quot;#iCloud-升级到-iCloud-Drive-具体是做了什么事情&quot; class=&quot;headerlink&quot; title=&quot;iCloud 升级到 iCloud Drive 具体是做了什么事情&quot;&gt;&lt;/a&gt;iCloud 升级到 iCloud Drive 具体是做了什么事情&lt;/h2&gt;&lt;p&gt;首先需要明确的是，iCloud 升级到 iCloud Drive。只跟你的 Apple ID 相关。并且这个过程不可以逆转。&lt;/p&gt;
&lt;h3 id=&quot;普通用户&quot;&gt;&lt;a href=&quot;#普通用户&quot; class=&quot;headerlink&quot; title=&quot;普通用户&quot;&gt;&lt;/a&gt;普通用户&lt;/h3&gt;&lt;p&gt;对于普通用户来说应当就是一次在服务端的数据迁移。把之前的存储在 iCloud 服务器上的全部数据迁移到了 iCloud Drive 的服务器。从此以后你的 iCloud 数据都是从 iCloud Drive 服务器上读取了。&lt;/p&gt;
&lt;p&gt;基于这种逻辑支持 iCloud 的应用，理论上 100% 可以使用 iCloud Drive。&lt;/p&gt;
&lt;p&gt;但是事实上并不是所有的应用在升级了 iCloud Drive 以后都可以使用。&lt;/p&gt;
&lt;p&gt;Why？&lt;/p&gt;
&lt;p&gt;先解释一个现象，就是在一开始升级了 iOS 8 然后升级了 iCloud Drive 立马就打开了某 App 发现 iCloud 的数据没了。 结果睡觉起来再打开就有了。这种的原因很简单，就是 iCloud 服务器上的数据迁移到 iCloud Drive 服务器上是需要拷贝时间的。数据还没有迁移完成的时候你打开当然没有。等到数据迁移完成了，你再打开它就有数据了。&lt;/p&gt;
&lt;h3 id=&quot;开发者&quot;&gt;&lt;a href=&quot;#开发者&quot; class=&quot;headerlink&quot; title=&quot;开发者&quot;&gt;&lt;/a&gt;开发者&lt;/h3&gt;&lt;p&gt;PS：普通用户可以略过此小结&lt;br&gt;这次 iOS 8 的升级，一开始就是对使用 iCloud 开发者的一次噩梦。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;iCloud 服务器数据到 iCloud Drive 服务器数据的迁移。&lt;/li&gt;
&lt;li&gt;客户端下面 iCloud 的 Container ID 发生变化。之前是 Term ID.xxxx。现在是 iCloud.xxxx。当然已经上架的应用的 Container ID 是还存在的。但是这个变化从来就没有在文档里面提过（可能现在有了，反正当时没有看见过）导致的结果就是如果容器空间没有选择正确。必然读取不到老数据。&lt;/li&gt;
&lt;li&gt;由于 iOS 8 升级需要很大的空间，有部分用户可能是选择重新安装一个新 iOS 8 或者是入了一台新的手机。 但是没有升级 iCloud Drive。这种情况下，会导致 App 无法找到 iCloud 的路径。也是坑的不行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前能回忆起来比较坑的就这两个，这些都是开发者必须处理的情况。如果开发者花费巨大的力气处理好了，用户其实是感受不到的。这是最好的情况。如果技术不过关，处理不好。用户就上门开始骂了。（PS：这是一个悲伤的故事）&lt;/p&gt;
&lt;h2 id=&quot;CloudKit&quot;&gt;&lt;a href=&quot;#CloudKit&quot; class=&quot;headerlink&quot; title=&quot;CloudKit&quot;&gt;&lt;/a&gt;CloudKit&lt;/h2&gt;&lt;p&gt;CloudKit 是今年提出来的新技术。&lt;/p&gt;
&lt;h3 id=&quot;普通用户-1&quot;&gt;&lt;a href=&quot;#普通用户-1&quot; class=&quot;headerlink&quot; title=&quot;普通用户&quot;&gt;&lt;/a&gt;普通用户&lt;/h3&gt;&lt;p&gt;使用这个技术的 App 都是靠谱的&lt;/p&gt;
&lt;h3 id=&quot;开发者-1&quot;&gt;&lt;a href=&quot;#开发者-1&quot; class=&quot;headerlink&quot; title=&quot;开发者&quot;&gt;&lt;/a&gt;开发者&lt;/h3&gt;&lt;p&gt;简单说来就是一个 Apple 版本的 Parse。具体去看文档不展开说明了。&lt;/p&gt;
&lt;h2 id=&quot;一些存储路径的说明&quot;&gt;&lt;a href=&quot;#一些存储路径的说明&quot; class=&quot;headerlink&quot; title=&quot;一些存储路径的说明&quot;&gt;&lt;/a&gt;一些存储路径的说明&lt;/h2&gt;&lt;h3 id=&quot;iOS&quot;&gt;&lt;a href=&quot;#iOS&quot; class=&quot;headerlink&quot; title=&quot;iOS&quot;&gt;&lt;/a&gt;iOS&lt;/h3&gt;&lt;p&gt;iOS 由于沙箱的原因。其实普通用户看不见什么。不过可以肯定的是。在系统路径下面。 iOS 是有 iCloud 数据的缓存目录进行数据缓存的。简单说来就是使用 iCloud 的应用在删除的时候。 iCloud 缓存里面的数据是不会立马删除的。什么时候清空，未知。&lt;/p&gt;
&lt;h3 id=&quot;OS-X&quot;&gt;&lt;a href=&quot;#OS-X&quot; class=&quot;headerlink&quot; title=&quot;OS X&quot;&gt;&lt;/a&gt;OS X&lt;/h3&gt;&lt;p&gt;OS X 可以看见的就比较多了。&lt;/p&gt;
&lt;h4 id=&quot;Finder-里面的-iCloud-Drive&quot;&gt;&lt;a href=&quot;#Finder-里面的-iCloud-Drive&quot; class=&quot;headerlink&quot; title=&quot;Finder 里面的 iCloud Drive&quot;&gt;&lt;/a&gt;Finder 里面的 iCloud Drive&lt;/h4&gt;&lt;p&gt;这里其实由两个部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是 /Library/Mobile Documents/comappleCloudDocs&lt;/li&gt;
&lt;li&gt;是使用 iCloud 技术把一些数据文件存储到了自己 iCloud 容器路径下的 Documents 目录里面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;把 Finder 里面这个 iCloud Drive 当作 Dropbox （网盘）使用。那你丢进去的文件数据都是在&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`/Library/Mobile Documents/comappleCloudDocs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;`这里路径下面。&lt;/p&gt;
&lt;p&gt;而你为什么可以看见一些 App 名字的文件夹呢。就是第二个部分容器自己的 Documents 目录。你可能会问为啥不是全部使用 iCloud 技术的都有这个目录呢？&lt;/p&gt;
&lt;p&gt;我来举例说明把在 Apple 生态里面。商店里面的程序都是沙盒的。相互之间都是独立的。不过有一个地方是可以看到沙盒内部，在开发文档里面也是同样描述那就是 Documents 的路径。举例一个 iOS App 如果你在Documents 下面有文件，那你在 iTunes App 的那页下面是可以看到这些文件。同样的概念延续到了 iCloud 上。当 App 的文件存于他自己 iCloud 路径下的 Documents 文件夹下面的时候。你就可以在 Finder 中 iCloud Drive看到。App iCloud 容器下另外的路径是不会显示到 Finder 下面的时候，所以并不是使用了 iCloud 的应用都在这里有文件夹。这些都取决于开发商对自己 App 的设计和实现。&lt;/p&gt;
&lt;h4 id=&quot;Library-Mobile-Documents&quot;&gt;&lt;a href=&quot;#Library-Mobile-Documents&quot; class=&quot;headerlink&quot; title=&quot;/Library/Mobile Documents&quot;&gt;&lt;/a&gt;/Library/Mobile Documents&lt;/h4&gt;&lt;p&gt;这个路径下就是 iCloud 数据在 OS X 的缓存路径。理论上来说，这个路径下是跟 iCloud Drive 服务器上的数据同步的。（没升级 iCloud Drive 就是跟 iCloud 服务器上的数据同步的）&lt;/p&gt;
&lt;h4 id=&quot;Library-Caches-CloudKit&quot;&gt;&lt;a href=&quot;#Library-Caches-CloudKit&quot; class=&quot;headerlink&quot; title=&quot;/Library/Caches/CloudKit&quot;&gt;&lt;/a&gt;/Library/Caches/CloudKit&lt;/h4&gt;&lt;p&gt;CloudKit 的缓存路径&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;毫不谦虚的说，本文虽然条例不是清晰。但是是目前中文说明里面对这次 iCloud 变更目前位置最详细的解释。（PS：看在写到凌晨n点的情况下。做自己吹一下）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一定要升级 iCloud Drive，这样对大家都好。用户可以得到更好的体验。开发者可以使用新的技术做出更加好玩的东西出来。&lt;/li&gt;
&lt;li&gt;能使用 iCloud 技术的厂家都不容易。请善待他们。&lt;/li&gt;
&lt;li&gt;我是一个 iCloud 黑。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;好久没有写 blog 了。 &lt;/li&gt;
&lt;li&gt;最近发现很多人对 iCloud 和 iCloud Drive 有些误解。而还没有看见中文里面有一个比较正确的说法。&lt;/li&gt;
&lt;li&gt;加上近两年来工作就是在学习 iCloud 如何使用。最近一个月做客服小弟回复了 N 个 iCloud 的问题。所以感觉还是有一些价值的。特意想记录一下。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;是否升级到-iCloud-Drive&quot;&gt;&lt;a href=&quot;#是否升级到-iCloud-Drive&quot; class=&quot;headerlink&quot; title=&quot;是否升级到 iCloud Drive&quot;&gt;&lt;/a&gt;是否升级到 iCloud Drive&lt;/h2&gt;&lt;p&gt;在 iOS 8 刚刚上线的时候，用户更新了以后。第一次会跳出来，说需要重新升级的 iCloud Drive。因为没有更多的信息和提示，我想一个正常的用户应该都会去点击升级。结果就是导致很多使用 iCloud 这个功能的 App 数据出现问题。或者导致了设备之间的不同步。那会有很多文章在建议不要升级 iCloud Drive。所以可能会给后来升级到 iOS 8 的用户造成一定的心里作用说升级 iCloud Drive 是不可靠的。&lt;/p&gt;
&lt;p&gt;其实根据我两年来 iCloud 的经验和测试结果。 iOS 8 的 iCloud Drive 是一个 Apple 云端的一次最重要的里程碑。 是 iCloud 这个技术在 Apple 产品系列上第一次做到了可用的状态。等了三年终于有个云的模样了。&lt;/p&gt;
&lt;p&gt;当时不建议升级 iCloud Drive 的理由其实就两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于开发者来说，由于 Apple 为了保密 iPhone 6 和 iPhone 6 Plus。 其实在9月发布会之前。 iOS 8 的 最后两个 Beta 版本是没有提供给开发者的。在能获得的最后的 Beta 版本上。 开发者使用 iCloud 依然各种莫名其妙的问题。一直到 GM 版本才变得正常。这样导致 GM 到发布正式的版本之间的时间。大部分开发者还无法把更新 iCloud 的技术及时的完善在自己的 App 里面。&lt;/li&gt;
&lt;li&gt;另外一个是在 iOS 8 已经放出来的时候，OS X 10.10 还没有放出来。这样如果你是一个 Apple 一套的普通用户。就会导致你一些全平台使用 iCloud 技术的 App无法相互同步。所以在当时确实这样情况的普通用户应该谨慎更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在11月了这两个问题随着开发者对 App 的完善和 OS X 10.10 释出。其实都不是问题了。大家可以放心大胆的升级了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="just-talk" scheme="http://iiiyu.com/tags/just-talk/"/>
    
  </entry>
  
  <entry>
    <title>怎样使用Sketch 3切图 —— 从想入设计大门的菜逼进化到切图仔（未完成）</title>
    <link href="http://iiiyu.com/2014/04/23/learn-ui-design-two/"/>
    <id>http://iiiyu.com/2014/04/23/learn-ui-design-two/</id>
    <published>2014-04-22T17:00:06.000Z</published>
    <updated>2014-10-19T16:27:51.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文未完成懒得屏蔽了&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;Sketch 3发布了，而且在国内设计圈产生了一阵不小的影响。（好吧，我承认我混的不是这个圈子）作为一个拥有Sketch 2的老用户来说。这颗闪亮的钻石本来只我才知道他的好。就像小时候发现了一个出租激情小电影的小店铺，突然某一天冒出来一堆人也来租。那种小秘密被打破莫名的失落感。&lt;/p&gt;
&lt;p&gt;好吧，其实这个是一个好事情。用的人多了，素材也会多。教程也会多。&lt;/p&gt;
&lt;p&gt;顺便一提Sketch 3的发布之前MengTo大神的&lt;a href=&quot;http://designcode.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Design Code&lt;/a&gt;新书也在不断更新中。严重怀疑是商量好一起来坑钱包的。 配合的这么天衣无缝。在Sketch 3还没有正式发布的时候，MengTo大神更新的视频就是用的Sketch 3 beta版本。弄的我还以为我的Sketch 2是不是打开姿势不正确。&lt;/p&gt;
&lt;p&gt;写这篇的原型是因为看到weibo上有小朋友，居然用我大切图神器Sketch的姿势不对。所以虽然不是什么高级的功能。但是鉴于跟我一样徘徊在设计大门的朋友还是很多，我就记录一下。&lt;/p&gt;
&lt;p&gt;在没有Sketch之前，设计师给过来的素材都是psd的。作为一个有节操的少年，虽然我拥有CS4的教育版本，但是我还是会用Pixelmator去切图。（PS：主要是不会使用PS！）不过由于兼容性的问题Pixelmator切图会丢失psd的一些图层效果。所以后来一直是设计师把图给切好了在给过来。（明明是想办法偷懒！！）&lt;/p&gt;
&lt;p&gt;不过后来，有了Sketch这货，我也就开始自己尝试切图。而且Sketch可以直接切出1x和2x。莫名的快感。（不要说PS有插件能做这个事情。我真不会和买不起PS）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;崭新的Sketch-3新切图功能&quot;&gt;&lt;a href=&quot;#崭新的Sketch-3新切图功能&quot; class=&quot;headerlink&quot; title=&quot;崭新的Sketch 3新切图功能&quot;&gt;&lt;/a&gt;崭新的Sketch 3新切图功能&lt;/h2&gt;&lt;p&gt;虽然Sketch 2中切图可以导出1x和2x。可是很多时候还是感觉切图不方便。主要是因为Slice在更加深的一层。如果画布上的图有更新和变动。Slice需要一起更新的话还要点过去。但是一般情况下，只有需要切图的时候才要点过去。导致每次需要调整Slice的位置和大小很不爽快。而且Slice的命名也需要多余的点击去修改。&lt;/p&gt;
&lt;p&gt;这些问题在Sketch 3里面都得到了改进！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把Slice提到最外面，做为设计的同一个层级。&lt;/li&gt;
&lt;li&gt;Slice虽然现在是一等公民，可是有可以选择显示or不显示。相当方便。&lt;/li&gt;
&lt;li&gt;更加智能的认出要切的部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;切图技能进化&quot;&gt;&lt;a href=&quot;#切图技能进化&quot; class=&quot;headerlink&quot; title=&quot;切图技能进化&quot;&gt;&lt;/a&gt;切图技能进化&lt;/h2&gt;&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文未完成懒得屏蔽了&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;Sketch 3发布了，而且在国内设计圈产生了一阵不小的影响。（好吧，我承认我混的不是这个圈子）作为一个拥有Sketch 2的老用户来说。这颗闪亮的钻石本来只我才知道他的好。就像小时候发现了一个出租激情小电影的小店铺，突然某一天冒出来一堆人也来租。那种小秘密被打破莫名的失落感。&lt;/p&gt;
&lt;p&gt;好吧，其实这个是一个好事情。用的人多了，素材也会多。教程也会多。&lt;/p&gt;
&lt;p&gt;顺便一提Sketch 3的发布之前MengTo大神的&lt;a href=&quot;http://designcode.io&quot;&gt;Design Code&lt;/a&gt;新书也在不断更新中。严重怀疑是商量好一起来坑钱包的。 配合的这么天衣无缝。在Sketch 3还没有正式发布的时候，MengTo大神更新的视频就是用的Sketch 3 beta版本。弄的我还以为我的Sketch 2是不是打开姿势不正确。&lt;/p&gt;
&lt;p&gt;写这篇的原型是因为看到weibo上有小朋友，居然用我大切图神器Sketch的姿势不对。所以虽然不是什么高级的功能。但是鉴于跟我一样徘徊在设计大门的朋友还是很多，我就记录一下。&lt;/p&gt;
&lt;p&gt;在没有Sketch之前，设计师给过来的素材都是psd的。作为一个有节操的少年，虽然我拥有CS4的教育版本，但是我还是会用Pixelmator去切图。（PS：主要是不会使用PS！）不过由于兼容性的问题Pixelmator切图会丢失psd的一些图层效果。所以后来一直是设计师把图给切好了在给过来。（明明是想办法偷懒！！）&lt;/p&gt;
&lt;p&gt;不过后来，有了Sketch这货，我也就开始自己尝试切图。而且Sketch可以直接切出1x和2x。莫名的快感。（不要说PS有插件能做这个事情。我真不会和买不起PS）&lt;/p&gt;
    
    </summary>
    
    
      <category term="Design" scheme="http://iiiyu.com/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>iOS笔记(35) 格志周年系列之夏令时(三) 临时花絮</title>
    <link href="http://iiiyu.com/2014/04/08/learning-ios-notes-thirty-five/"/>
    <id>http://iiiyu.com/2014/04/08/learning-ios-notes-thirty-five/</id>
    <published>2014-04-08T14:49:48.000Z</published>
    <updated>2014-04-08T15:55:53.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;说曹操，曹操到。嘛当，还说总结一下时间的问题。这不blog这个系列没有写完。又爆了出一个时间相关的Bug。我只能说编程路茫茫，吾将上下求索。这次就着热乎着，来说是一个遇到了什么问题。&lt;/p&gt;
&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h2&gt;&lt;p&gt;有日本用户反馈，新版本更新以后，他日历上的时间全部乱了。而且无法写入日记。经过与用户沟通（感谢喵神onevcat的日文人肉翻译）分析得到用户使用和历（日本日历）。然后debug进去果然日期全部乱了。跟进去debug了一番，发现是之前解决夏令时的函数只考虑了公历！！！而iOS系统默认有三种日历。公历、和历、佛历。又一次无情的证明了我是一个天朝土包子。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;iOS-amp-amp-OS-X-支持的日历&quot;&gt;&lt;a href=&quot;#iOS-amp-amp-OS-X-支持的日历&quot; class=&quot;headerlink&quot; title=&quot;iOS &amp;amp;&amp;amp; OS X 支持的日历&quot;&gt;&lt;/a&gt;iOS &amp;amp;&amp;amp; OS X 支持的日历&lt;/h2&gt;&lt;p&gt;这个问题的出现提醒了我，地球上不同的人们其实是使用着不同的日历。（在这之前学习到的是地球上的人们过着不同的时区，有夏令时和没夏令时的时间）。&lt;/p&gt;
&lt;p&gt;iOS从Settings-&amp;gt;General-&amp;gt;International-&amp;gt;Calendar。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/a6d3226bgw1ef8l1icf7pj20hs0vkdgp.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到是默认只是支持公历、和历、佛历。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/a6d3226bgw1ef8lfdww4aj20il0cewfz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;OS X 要多一些…（好吧，大部分我都不认识）&lt;/p&gt;
&lt;p&gt;那到底iOS &amp;amp;&amp;amp; OS X支持哪些日历呢。&lt;/p&gt;
&lt;p&gt;看这里内建的有这些&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSLocale_Class/Reference/Reference.html#jumpTo_50&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSLocale Calendar Keys&lt;/a&gt; (PS: 经过测试农历那个之前处于半残疾状态)&lt;/p&gt;
&lt;h2 id=&quot;用代码测试一下&quot;&gt;&lt;a href=&quot;#用代码测试一下&quot; class=&quot;headerlink&quot; title=&quot;用代码测试一下&quot;&gt;&lt;/a&gt;用代码测试一下&lt;/h2&gt;&lt;p&gt;我遇到的问题是我获得00:00:00的方法是直接用string然后反向设置小时、分钟、秒数得来的。所以，当日历不同的时候date-&amp;gt;string就不一样了！！！这样我只判断了公历的时候，和历和佛历就错了。&lt;/p&gt;
&lt;p&gt;详细代码可以查考这个&lt;a href=&quot;https://github.com/iiiyu/TestNSDateFormatterOnMac&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TestNSDateFormatterOnMac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我fork了一个霓虹大神改动的。 添加了佛历的对比。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/a6d3226bgw1ef8m65ylz2j20lq0gtgo8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;做好一个App其实挺难的，做好一款全球化的App更是难上加难。特别是我这种天朝土鳖，写程序的时候脑子里面就没全球化的意识。&lt;/p&gt;
&lt;p&gt;附上一个今天在推上看到的心酸笑话：&lt;/p&gt;
&lt;p&gt;编历法的玛雅码农想「我做个日历做上一千年应该就够用了吧」；编UNIX的码农想「我写个OS能用到2038年应该就够用了吧」；编RFC791的码农想「我整个IP能给42.9亿人用应该就够用了吧」——都给全世界添了乱子。我们做码农的一定要引以为戒 #读日语推有感#&lt;/p&gt;
&lt;h2 id=&quot;一些参考&quot;&gt;&lt;a href=&quot;#一些参考&quot; class=&quot;headerlink&quot; title=&quot;一些参考&quot;&gt;&lt;/a&gt;一些参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/wiki/農曆&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;农历 wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/wiki/希伯來曆&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;希伯來历 wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/wiki/ISO_8601&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ISO 8601 wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UNICODE LOCALE DATA MARKUP LANGUAGE (LDML)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://balunsoftware.jp/info/2013/06/nsdateformatter-japanese/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSDateFormatter で、和暦の変換に固定する&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://kevin-wu.net/ios-locale-and-calendar-tips/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在开发iOS程序时对日期处理的总结&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;说曹操，曹操到。嘛当，还说总结一下时间的问题。这不blog这个系列没有写完。又爆了出一个时间相关的Bug。我只能说编程路茫茫，吾将上下求索。这次就着热乎着，来说是一个遇到了什么问题。&lt;/p&gt;
&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h2&gt;&lt;p&gt;有日本用户反馈，新版本更新以后，他日历上的时间全部乱了。而且无法写入日记。经过与用户沟通（感谢喵神onevcat的日文人肉翻译）分析得到用户使用和历（日本日历）。然后debug进去果然日期全部乱了。跟进去debug了一番，发现是之前解决夏令时的函数只考虑了公历！！！而iOS系统默认有三种日历。公历、和历、佛历。又一次无情的证明了我是一个天朝土包子。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>学习UI设计笔记(一)</title>
    <link href="http://iiiyu.com/2014/03/25/learn-ui-design-one/"/>
    <id>http://iiiyu.com/2014/03/25/learn-ui-design-one/</id>
    <published>2014-03-25T15:12:21.000Z</published>
    <updated>2014-03-25T15:53:16.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;那啥， 我知道NSDate的坑没有搞定。缓缓，缓缓。我在开个新坑来着。恩恩这个坑就是记录一下怎么学习Sketch 这个软件的。&lt;/p&gt;
&lt;p&gt;首先，我买了本&lt;a href=&quot;http://www.amazon.cn/更优秀的APP-31个APP用户界面设计经典案例-白润华/dp/B00ELMXLOK/ref=sr_1_1?ie=UTF8&amp;amp;qid=1395760594&amp;amp;sr=8-1&amp;amp;keywords=31app&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更优秀的APP-31个APP用户界面设计经典案例&lt;/a&gt;。 高手勿喷，这种图文并茂，手把手的交比较适合我这种菜鸟。&lt;/p&gt;
&lt;p&gt;这本书的唯一好处是他的例子是Ai的。而Sketch也是矢量图。所以我以为会有些类似的操作。（其实根本是两个软件啊！！！！）&lt;/p&gt;
&lt;p&gt;然后我准备把他说的31个例子都用Sketch来模仿一边。恩，先把Sketch的大部分功能运用熟练再说（就是花了小几百不想让他吃灰而已）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Sketch资料&quot;&gt;&lt;a href=&quot;#Sketch资料&quot; class=&quot;headerlink&quot; title=&quot;Sketch资料&quot;&gt;&lt;/a&gt;Sketch资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.bohemiancoding.com/sketch/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sketch的资料其实并不是很多，原因之一是能熟练使用Adobe一套的大家（除了我）都能很快的入手。所以像我这样完全没有用过Photoshop的人在贵圈是一种奇葩。&lt;/p&gt;
&lt;p&gt;所以中文资料就特别特别不多，不多的意思是图灵社区的某个大神把操作手册翻译了一下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ituring.com.cn/book/1305?q=Sketch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sketch中文手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在没有发布的时候我就知道了，我满怀憧憬的等待这本书的上线。结果，嗯嗯很不错的一本使用手册。&lt;/p&gt;
&lt;p&gt;洋文资料最多的就是MengTo大神的&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.mengto.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大神blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而且大神最近在预发售一本&lt;a href=&quot;http://designcode.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;design+code&lt;/a&gt;。现在购买打5折哦。(免费为大神打个广告)&lt;/p&gt;
&lt;p&gt;官方视频都在Vimeo上自带神器&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/57072774&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS Design using Sketch. Part one: iOS Navigation Bar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/57590796&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS Design using Sketch. Part two: iOS Toolbar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对了，据可靠小道消息，这货的3.0要发布了。又是一次交钱的时刻。穷死了。&lt;/p&gt;
&lt;h2 id=&quot;Github地址&quot;&gt;&lt;a href=&quot;#Github地址&quot; class=&quot;headerlink&quot; title=&quot;Github地址&quot;&gt;&lt;/a&gt;Github地址&lt;/h2&gt;&lt;p&gt;咱程序员就要有程序员的范，每次的Sketch我都会丢到这个地址上，如果需要下源文件研究一下的同学知道去哪里找了把。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iiiyu/learn-ui-design&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;learn-ui-design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;鉴于最近的网络情况，自带神器。&lt;/p&gt;
&lt;h2 id=&quot;大幅大幅的贴图&quot;&gt;&lt;a href=&quot;#大幅大幅的贴图&quot; class=&quot;headerlink&quot; title=&quot;大幅大幅的贴图&quot;&gt;&lt;/a&gt;大幅大幅的贴图&lt;/h2&gt;&lt;h3 id=&quot;0&quot;&gt;&lt;a href=&quot;#0&quot; class=&quot;headerlink&quot; title=&quot;0&quot;&gt;&lt;/a&gt;0&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eesf0yhz53j20zg0lmaew.jpg&quot; alt=&quot;0&quot;&gt;&lt;/p&gt;
&lt;p&gt;恩，按照教程，我手绘了一张图片，然后用手机拍照了放到Sketch里面。&lt;/p&gt;
&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eesf3zl60jj20zg0lmn1i.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;拖了一个椭圆，然后选中铅笔工具，描绘了一下那个小尾巴。&lt;/p&gt;
&lt;h3 id=&quot;2&quot;&gt;&lt;a href=&quot;#2&quot; class=&quot;headerlink&quot; title=&quot;2&quot;&gt;&lt;/a&gt;2&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/a6d3226bgw1eesf54xa8kj20zg0lmaf1.jpg&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;选中他们两个，进行Union操作。&lt;/p&gt;
&lt;h3 id=&quot;3&quot;&gt;&lt;a href=&quot;#3&quot; class=&quot;headerlink&quot; title=&quot;3&quot;&gt;&lt;/a&gt;3&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/a6d3226bgw1eesf5vjl8kj20zg0lmdkp.jpg&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;拖一个正方形出来&lt;/p&gt;
&lt;h3 id=&quot;4&quot;&gt;&lt;a href=&quot;#4&quot; class=&quot;headerlink&quot; title=&quot;4&quot;&gt;&lt;/a&gt;4&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eesf6sqy2sj20zg0lmwjs.jpg&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;正方形旋转45度&lt;/p&gt;
&lt;h3 id=&quot;5&quot;&gt;&lt;a href=&quot;#5&quot; class=&quot;headerlink&quot; title=&quot;5&quot;&gt;&lt;/a&gt;5&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eesf7fq37ij20zg0lm0xy.jpg&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;在正方形上双击会出现可以编辑的关键点&lt;/p&gt;
&lt;h3 id=&quot;6&quot;&gt;&lt;a href=&quot;#6&quot; class=&quot;headerlink&quot; title=&quot;6&quot;&gt;&lt;/a&gt;6&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eesf7ukiefj20zg0lm0xz.jpg&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;p&gt;删除掉最右边的关键点，变成一个三角形&lt;/p&gt;
&lt;h3 id=&quot;7&quot;&gt;&lt;a href=&quot;#7&quot; class=&quot;headerlink&quot; title=&quot;7&quot;&gt;&lt;/a&gt;7&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1eesf979g3dj20zg0lmtd3.jpg&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;p&gt;把气泡弄出来看一下整体效果&lt;/p&gt;
&lt;h3 id=&quot;8&quot;&gt;&lt;a href=&quot;#8&quot; class=&quot;headerlink&quot; title=&quot;8&quot;&gt;&lt;/a&gt;8&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/a6d3226bgw1eesf9x1vynj20zg0lmdkr.jpg&quot; alt=&quot;8&quot;&gt;&lt;/p&gt;
&lt;p&gt;随便上个颜色试试&lt;/p&gt;
&lt;h3 id=&quot;9&quot;&gt;&lt;a href=&quot;#9&quot; class=&quot;headerlink&quot; title=&quot;9&quot;&gt;&lt;/a&gt;9&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/a6d3226bgw1eesfacyshyj20zg0lm0vn.jpg&quot; alt=&quot;9&quot;&gt;&lt;/p&gt;
&lt;p&gt;最终版本，我尽力了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;恩，2014年的一个要努力的目标就是把自己的品味搞上去。恩呢，加油。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;那啥， 我知道NSDate的坑没有搞定。缓缓，缓缓。我在开个新坑来着。恩恩这个坑就是记录一下怎么学习Sketch 这个软件的。&lt;/p&gt;
&lt;p&gt;首先，我买了本&lt;a href=&quot;http://www.amazon.cn/更优秀的APP-31个APP用户界面设计经典案例-白润华/dp/B00ELMXLOK/ref=sr_1_1?ie=UTF8&amp;amp;qid=1395760594&amp;amp;sr=8-1&amp;amp;keywords=31app&quot;&gt;更优秀的APP-31个APP用户界面设计经典案例&lt;/a&gt;。 高手勿喷，这种图文并茂，手把手的交比较适合我这种菜鸟。&lt;/p&gt;
&lt;p&gt;这本书的唯一好处是他的例子是Ai的。而Sketch也是矢量图。所以我以为会有些类似的操作。（其实根本是两个软件啊！！！！）&lt;/p&gt;
&lt;p&gt;然后我准备把他说的31个例子都用Sketch来模仿一边。恩，先把Sketch的大部分功能运用熟练再说（就是花了小几百不想让他吃灰而已）&lt;/p&gt;
    
    </summary>
    
    
      <category term="Design" scheme="http://iiiyu.com/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>iOS笔记(34) 格志周年系列之夏令时(二)</title>
    <link href="http://iiiyu.com/2014/03/19/learning-ios-notes-thirty-four/"/>
    <id>http://iiiyu.com/2014/03/19/learning-ios-notes-thirty-four/</id>
    <published>2014-03-19T12:37:48.000Z</published>
    <updated>2014-03-20T15:28:55.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;恩，两月没更新blog，hexo都出来新主题来着。其实昨天为了找个背景图找了一小时我会随便乱说。就是为了找一个配合网站标题的背景图。其实hexo默认的就蛮好了，但是为了显示那么一点点与众不同还是替换了一下。&lt;/p&gt;
&lt;p&gt;扯淡结束，接上一篇&lt;a href=&quot;http://iiiyu.com/2014/03/18/learning-ios-notes-thirty-three/&quot;&gt;格志周年系列之夏令时(一)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第一阶段Bug&quot;&gt;&lt;a href=&quot;#第一阶段Bug&quot; class=&quot;headerlink&quot; title=&quot;第一阶段Bug&quot;&gt;&lt;/a&gt;第一阶段Bug&lt;/h2&gt;&lt;p&gt;上次说过一个中国高富帅用户发Email来说，他去泰国旅游的时候，日记都不见了。&lt;/p&gt;
&lt;p&gt;其实不是日记不见了，日记都好好的躺在sqlite文件里面。而是查询不出来了。日记的保存是用了一个函数去获得了每天的00:00:00. 然后作为唯一标识来区别和查询。  &lt;/p&gt;
&lt;p&gt;那日期出了啥问题？&lt;/p&gt;
&lt;p&gt;我们来快速的分析一下&lt;/p&gt;
&lt;p&gt;调用的是&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (NSDate *) dateAtStartOfDay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NSDateComponents *&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt; = [CURRENT_CALENDAR &lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;:DATE_COMPONENTS fromDate:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.hour = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.minute = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;second&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; [CURRENT_CALENDAR dateFromComponents:&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;里面有两个宏&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; DATE_COMPONENTS (NSYearCalendarUnit| NSMonthCalendarUnit | NSDayCalendarUnit | NSWeekCalendarUnit |  NSHourCalendarUnit | NSMinuteCalendarUnit | NSSecondCalendarUnit | NSWeekdayCalendarUnit | NSWeekdayOrdinalCalendarUnit)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; CURRENT_CALENDAR [NSCalendar currentCalendar]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假设你使用过Cocoa时间这些类的话能很容易的看出。dateAtStartOfDay函数就是把你持有的date以当前日历为基础，其他不改，小时，分钟，秒钟设置都为0。这样就能得到一个基于当前日历下的date这一天的00:00:00。&lt;/p&gt;
&lt;p&gt;简单看上去没有什么问题，回到高富帅的问题。他出国玩一圈咋时间就变了呢？答案是[NSCalendar currentCalendar]改变了。NSCalendar的改变使得dateAtStartOfDay返回的时间也变了。debug到这一步才发觉靠当初为什么没有想到有时区的这个问题。&lt;/p&gt;
&lt;p&gt;自己给自己找一个理由就是到目前为止，我只用过大天朝的+8时间。潜意识里面根本没有说换一个时区这样的概念。(后来某一天我翻了本C语言的书第一章就说了国际化时间的问题，再后来weibo上大家都纷纷表示时间是编程里面一个基础点而且做好不容易，只能说我还是太菜太年轻了。这些是后话了)&lt;/p&gt;
&lt;p&gt;说道这里那就开始科普一下地球上时间的问题&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;世界时间&quot;&gt;&lt;a href=&quot;#世界时间&quot; class=&quot;headerlink&quot; title=&quot;世界时间&quot;&gt;&lt;/a&gt;世界时间&lt;/h2&gt;&lt;p&gt;由于人类历史的缘由，地球上以大概的地理位置画分时区。&lt;a href=&quot;http://en.wikipedia.org/wiki/Time_zone&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Time Zone Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我认为时间是大爆炸以后产生的扩张现象，在可预见的人类的历史上肯定是不可逆转的。所以每一个时刻对于人类来说应该是唯一的。但是，在这同一个时刻里面，在地球的不同地方使用着不同的时间格式来表现着。我认为这是相当不科学的一个事情。随着人类文明的进步，我觉得最后应该会全世界时间大统一的。&lt;/p&gt;
&lt;p&gt;回到现实中还是要解决现在因为时区而产生的问题。&lt;/p&gt;
&lt;h2 id=&quot;iOS中的时间&quot;&gt;&lt;a href=&quot;#iOS中的时间&quot; class=&quot;headerlink&quot; title=&quot;iOS中的时间&quot;&gt;&lt;/a&gt;iOS中的时间&lt;/h2&gt;&lt;p&gt;在Cocoa里面，获取一个当前时间是&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Now:%@&quot;&lt;/span&gt;, [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; date]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Log出来应该是一个 xxxx-xx-xx xx:xx:xx +0000。但是聪明的你，人如果处在大天朝内马上发现这个时间比你电脑上的时间少了8小时。&lt;/p&gt;
&lt;p&gt;恩,因为NSDate记录的是一个绝对的值。这个值代表的意思是UTC时区的绝对时间。我们就把它看作为我们写Cocoa程序的一个绝对时间，千万要记住这一点。因为接下来的一堆概念会把人弄晕的。（我就晕了好久#_#）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/wiki/協調世界時&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UTC Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;与UTC有点关系的GMT时间，稍作了解避免搞混了。（实在分不清，你就记住UTC是一个更加精准的标准时间）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/zh-cn/格林尼治平时&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GMT Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那NSDate存储了一个什么值来代表时间呢？可以简单的认为他是记录了一个浮点数。这个浮点数代表什么呢？我们注意到头文件里面有个这样的方法timeIntervalSince1970。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// seconds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;seconds %lf&quot;&lt;/span&gt;, [[&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; date] timeIntervalSince1970]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在写文章的此时此刻打印出来是“1395324408.535384”。简单运算一下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1395324408.535384 / 60 / 60 / 24 / 365 ≈ 44.245446745

2014.x - 44.x ≈ 1970
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看到这里，就可以很明确的认为用NSDate来存储的时间是从1970-01-01 00:00:00 到那个时刻所经历的秒数。&lt;/p&gt;
&lt;p&gt;为什么是1970？如果你接触过一些计算机的知识或者其他编程语言或者数据库等。你都可能在时间相关的地方会发现1970很眼熟的样子。&lt;a href=&quot;https://duckduckgo.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;放鸭&lt;/a&gt;搜索了一下。找到一些比较权威的说法。&lt;/p&gt;
&lt;p&gt;首先能找到权威解释是&lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unix time&lt;/a&gt;。简单粗暴的来说就是我们现在用的 &lt;em&gt;nix 以及基于 &lt;/em&gt;nix的一堆东西（包括了现在使用的绝大部分东西）都是1970年极其以后出现的。那时候大家觉得就从1970-01-01 00:00:00开始算时间是个不错的主意。就这么一直延续下来了。（PS：忽略了一堆32bit or 64bit的点。需要详细解释的看url）&lt;/p&gt;
&lt;p&gt;看NSDate头文件还&lt;/p&gt;
&lt;p&gt;发现一个有意思的宏&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; NSTimeIntervalSince1970  978307200.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;稍微做了一下运算。可以知道这是从1970-01-01 00:00:00 到2001-01-01 00:00:00经过的秒数。稍微思考一下应该是用来进行了优化运算的。&lt;/p&gt;
&lt;p&gt;待续。。。&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;p&gt;这么一点字又写了两天，还是要每天坚持啊。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;恩，两月没更新blog，hexo都出来新主题来着。其实昨天为了找个背景图找了一小时我会随便乱说。就是为了找一个配合网站标题的背景图。其实hexo默认的就蛮好了，但是为了显示那么一点点与众不同还是替换了一下。&lt;/p&gt;
&lt;p&gt;扯淡结束，接上一篇&lt;a href=&quot;http://iiiyu.com/2014/03/18/learning-ios-notes-thirty-three/&quot;&gt;格志周年系列之夏令时(一)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第一阶段Bug&quot;&gt;&lt;a href=&quot;#第一阶段Bug&quot; class=&quot;headerlink&quot; title=&quot;第一阶段Bug&quot;&gt;&lt;/a&gt;第一阶段Bug&lt;/h2&gt;&lt;p&gt;上次说过一个中国高富帅用户发Email来说，他去泰国旅游的时候，日记都不见了。&lt;/p&gt;
&lt;p&gt;其实不是日记不见了，日记都好好的躺在sqlite文件里面。而是查询不出来了。日记的保存是用了一个函数去获得了每天的00:00:00. 然后作为唯一标识来区别和查询。  &lt;/p&gt;
&lt;p&gt;那日期出了啥问题？&lt;/p&gt;
&lt;p&gt;我们来快速的分析一下&lt;/p&gt;
&lt;p&gt;调用的是&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (NSDate *) dateAtStartOfDay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NSDateComponents *&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt; = [CURRENT_CALENDAR &lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;:DATE_COMPONENTS fromDate:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.hour = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.minute = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;second&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; [CURRENT_CALENDAR dateFromComponents:&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;里面有两个宏&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; DATE_COMPONENTS (NSYearCalendarUnit| NSMonthCalendarUnit | NSDayCalendarUnit | NSWeekCalendarUnit |  NSHourCalendarUnit | NSMinuteCalendarUnit | NSSecondCalendarUnit | NSWeekdayCalendarUnit | NSWeekdayOrdinalCalendarUnit)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; CURRENT_CALENDAR [NSCalendar currentCalendar]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假设你使用过Cocoa时间这些类的话能很容易的看出。dateAtStartOfDay函数就是把你持有的date以当前日历为基础，其他不改，小时，分钟，秒钟设置都为0。这样就能得到一个基于当前日历下的date这一天的00:00:00。&lt;/p&gt;
&lt;p&gt;简单看上去没有什么问题，回到高富帅的问题。他出国玩一圈咋时间就变了呢？答案是[NSCalendar currentCalendar]改变了。NSCalendar的改变使得dateAtStartOfDay返回的时间也变了。debug到这一步才发觉靠当初为什么没有想到有时区的这个问题。&lt;/p&gt;
&lt;p&gt;自己给自己找一个理由就是到目前为止，我只用过大天朝的+8时间。潜意识里面根本没有说换一个时区这样的概念。(后来某一天我翻了本C语言的书第一章就说了国际化时间的问题，再后来weibo上大家都纷纷表示时间是编程里面一个基础点而且做好不容易，只能说我还是太菜太年轻了。这些是后话了)&lt;/p&gt;
&lt;p&gt;说道这里那就开始科普一下地球上时间的问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS笔记(33) 格志周年系列之夏令时(一)</title>
    <link href="http://iiiyu.com/2014/03/18/learning-ios-notes-thirty-three/"/>
    <id>http://iiiyu.com/2014/03/18/learning-ios-notes-thirty-three/</id>
    <published>2014-03-18T13:23:35.000Z</published>
    <updated>2014-03-19T13:08:28.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;两月没写blog，没羞没皮了。以后作息规律一些，blog更新还是频繁一些。格志在2014年2月11日就整整上线一周年了。2013一年做格志，由于自己的技术实在比较菜。导致从上线的第一天起，整个团队跟着一直打补丁。小的坑就不说了，大的坑有两，一个iCloud + Core Data世界性难题。一个是全球时间问题。这篇blog就用来专门记下时间的坑。中间还有个插曲——格志在三月上线了2.0的全新专门为iOS 7设计的版本。时间问题在去年10月份改完以为对了就没有改过。结果3月9号是3月的第二个周日，美国地区进入夏令时。格志中又再次发生了时间问题，导致日记显示不全。之前开会说过放错不可怕，可怕的是放同样的错误。再次放错以后我都呆住了。那可是我写过测试用例的啊。结果当时一run测试就挂掉了。瞬间脑子蒙掉。然后上周通宵了一天，基本每天到3点把世界时间问题给彻底搞定。（希望是彻底）所以趁着我现在还有印象，记录一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;国际化&quot;&gt;&lt;a href=&quot;#国际化&quot; class=&quot;headerlink&quot; title=&quot;国际化&quot;&gt;&lt;/a&gt;国际化&lt;/h2&gt;&lt;p&gt;我们所以会遇到世界时间的问题主要有几个原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;格志的定位是一个全球市场的产品&lt;/li&gt;
&lt;li&gt;我们团队(真实情况是我是一个土鳖)并没有很国际化的背景&lt;/li&gt;
&lt;li&gt;格志是一个颗粒度为天的日记应用（Day One等另外几个比较出名的App其实是一个moment为颗粒度）&lt;/li&gt;
&lt;li&gt;格志在设计数据存储的时候用了时间作为日记的唯一标识符号&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，最初的版本。我是用了一天的00:00:00分来作为日记的时间。&lt;/p&gt;
&lt;p&gt;用了这个库&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//github.com/erica/NSDate-Extensions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// pod &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;NSDate-Extensions&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 0.0.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;里面的这个方法(先贴出来)&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (NSDate *) dateAtStartOfDay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NSDateComponents *&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt; = [CURRENT_CALENDAR &lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;:DATE_COMPONENTS fromDate:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.hour = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.minute = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;second&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; [CURRENT_CALENDAR dateFromComponents:&lt;span class=&quot;built_in&quot;&gt;components&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来获取每天开始的时间。&lt;/p&gt;
&lt;p&gt;然后第一个版本我们就这样欢乐开心的上线了。然后iCloud爆大坑。开始填了2个月的iCloud坑和数据修复。在某个时间，一个中国高富帅用户发Email来说，他去泰国旅游的时候，日记都不见了。我才隐约发觉日记的时间有问题！！&lt;/p&gt;
&lt;p&gt;日期出了啥问题？&lt;/p&gt;
&lt;p&gt;待续&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;p&gt;上周作息实在不规律，现在需要调整一下。本来应该一次性写完发的，但是怕自己懒惰（比如上次的开了头就没有继续，所以我决定每天都写一点就算少一点还是把他发掉）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;两月没写blog，没羞没皮了。以后作息规律一些，blog更新还是频繁一些。格志在2014年2月11日就整整上线一周年了。2013一年做格志，由于自己的技术实在比较菜。导致从上线的第一天起，整个团队跟着一直打补丁。小的坑就不说了，大的坑有两，一个iCloud + Core Data世界性难题。一个是全球时间问题。这篇blog就用来专门记下时间的坑。中间还有个插曲——格志在三月上线了2.0的全新专门为iOS 7设计的版本。时间问题在去年10月份改完以为对了就没有改过。结果3月9号是3月的第二个周日，美国地区进入夏令时。格志中又再次发生了时间问题，导致日记显示不全。之前开会说过放错不可怕，可怕的是放同样的错误。再次放错以后我都呆住了。那可是我写过测试用例的啊。结果当时一run测试就挂掉了。瞬间脑子蒙掉。然后上周通宵了一天，基本每天到3点把世界时间问题给彻底搞定。（希望是彻底）所以趁着我现在还有印象，记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>读 Jony Ive The Genius Behind Apple&#39;s Greatest Products 笔记</title>
    <link href="http://iiiyu.com/2014/01/08/read-jony-ive/"/>
    <id>http://iiiyu.com/2014/01/08/read-jony-ive/</id>
    <published>2014-01-08T12:51:37.000Z</published>
    <updated>2014-10-19T16:16:32.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;发现之前的读书笔记写的好少啊。 都是每年的一月份写一次，然后一整年都没有写。其实并不是没有看书而已，只是看了没写而已。2013除了专业的书籍还是看了一些乱七八糟的书籍。比如开始看王小波，看冯唐。对了&lt;a href=&quot;http://weibo.com/ooyor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ooyor&lt;/a&gt;大神同学去台湾做出国毕业旅行游的时候还给我带来了一本冯唐实体的小黄书《不二》。还有就是2013年初看完柴静的《看见》和李承鹏《全世界人民都知道》,而且还去不在书店签了4本。亲笔签名哦！其他的看了也就没有印象了。&lt;/p&gt;
&lt;p&gt;其实读大学以来，每年的书籍开销都是一笔不小的数目。这就造成了一个严重的问题！每次不管是短途迁移还是长途迁移都搬书搬的欲仙欲死。所以，2013我都是可以买电子书坚决不买实体书。如果没有电子书，我就等电子书出来。如果没有电子书，不是很想看的就不买了。电子书多好迁移啊，一个iPad就带走千万本。不过也有些郁闷，我KK的全套在字节社里面结果现在字节社快挂的样子，多看上买了目前最多的书，但是被小米收掉以后不喜欢它的作风。现在我已经全面的转向了豆瓣读书。图灵社区也买了些然后丢多看里面看。（多看在我这里已经沦为Good Reader的替代品）。&lt;/p&gt;
&lt;p&gt;恩，2014希望我想看的书都出电子版吧！让电子化来的更加猛烈一些。&lt;/p&gt;
&lt;h2 id=&quot;Jony-Ive&quot;&gt;&lt;a href=&quot;#Jony-Ive&quot; class=&quot;headerlink&quot; title=&quot;Jony Ive&quot;&gt;&lt;/a&gt;Jony Ive&lt;/h2&gt;&lt;p&gt;这次的书总有种是为了敛财而来，作为一个Apple的脑残粉。其实Apple这40年来的各种事件和经历。已经在无数的书籍、文章、电影里面一次一次的重复了很多很多次。每看一次就对Apple的印象丰满一些。到现在Apple在我心中已经是一种具体的形状。这次的Jony Ive传记对我来说，也只是对于Apple印象的一个补充而已。&lt;/p&gt;
&lt;h3 id=&quot;年少成名&quot;&gt;&lt;a href=&quot;#年少成名&quot; class=&quot;headerlink&quot; title=&quot;年少成名&quot;&gt;&lt;/a&gt;年少成名&lt;/h3&gt;&lt;p&gt;大英帝国的子民，而大英帝国好歹是工业革命的发起地。虽然美帝现在势不可挡。但是200年来的现代化进程底蕴是天朝这种年轻的2b国度无法比拟的。而且Jony Ive人家老爸&lt;br&gt;人家16-7岁的时候就已经各种拿奖了。&lt;/p&gt;
&lt;h1 id=&quot;PS&quot;&gt;&lt;a href=&quot;#PS&quot; class=&quot;headerlink&quot; title=&quot;PS&quot;&gt;&lt;/a&gt;PS&lt;/h1&gt;&lt;p&gt;这篇blog的创建时间是1月8号。现在时刻是3月18号。所以我还是把他发掉把。只开了头而已。现在记不住了。&lt;/p&gt;
&lt;p&gt;一月到三月瞟过的书有：&lt;/p&gt;
&lt;p&gt;「从你的全世界路过」 （看错作者买错书了）&lt;/p&gt;
&lt;p&gt;三本Objective C的&lt;/p&gt;
&lt;p&gt;GEB瞟了几页。&lt;/p&gt;
&lt;p&gt;豆瓣上冲了150.忘记买了些啥了记得有几本挺贵。反正是不在多看上买书了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留
    
    </summary>
    
    
      <category term="read book notes" scheme="http://iiiyu.com/tags/read-book-notes/"/>
    
  </entry>
  
  <entry>
    <title>2013年度总结</title>
    <link href="http://iiiyu.com/2013/12/31/2013-annual-summary/"/>
    <id>http://iiiyu.com/2013/12/31/2013-annual-summary/</id>
    <published>2013-12-31T13:57:54.000Z</published>
    <updated>2014-02-17T04:21:47.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;生活&quot;&gt;&lt;a href=&quot;#生活&quot; class=&quot;headerlink&quot; title=&quot;生活&quot;&gt;&lt;/a&gt;生活&lt;/h2&gt;&lt;h3 id=&quot;注定的漂泊&quot;&gt;&lt;a href=&quot;#注定的漂泊&quot; class=&quot;headerlink&quot; title=&quot;注定的漂泊&quot;&gt;&lt;/a&gt;注定的漂泊&lt;/h3&gt;&lt;p&gt;在16岁的时候，我就会隐约觉得我会一生注定漂泊。这种感觉以我的文字水平很难用完整表达出来。不过18岁以后的每一年换一个住的地方。直接用事实验证了这个16岁的直觉。本来以为我会在厦大住够2年的，命中注定，天煞孤星。房子要拆迁只有另外找地方了。继续这一年一个地方的节奏。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;极品房东&quot;&gt;&lt;a href=&quot;#极品房东&quot; class=&quot;headerlink&quot; title=&quot;极品房东&quot;&gt;&lt;/a&gt;极品房东&lt;/h3&gt;&lt;p&gt;我想如果不是今天发生的事情我是不会写入的。说真的我一直觉得国足，城管，整个教育，盗版，没节操，所有的敏感词。其实都是表面，去深究根本原因的人们都消失不见了。所以在这种无力的大环境前提下。面对这些事情我常常手足无措，不知道应该用什么样的态度去面对这些事情。我只能告诉自己，这是一个又一个生动又真实的移民广告。来生不做中国人。拉回来说，现在应该称为前房东。来厦门几次找房子都很仓促。都没有留下足够的时间来好好的找房子。第一次是来面试结束以后，一直住酒店。厦门的酒店价格大家懂的。然后也是找了中介就草草决定。电梯海景房，一套隔断成6套。我的是其中之一。旁边有个貌似厦大的女生。经常去夜店，凌晨2-3点回来。这个没啥，关键带一群女生回来。喝了些多不多的酒。然后开始评论男人，给男人打电话扯淡。嘛当，几个月搞的神经衰弱啊。 直接说了没有用。几次想怕起来搞个小电影开最大声音。但是觉得我都出声提醒警告无效的情况下。貌似也没用。然后就是住了半年房东要涨200，当时怕过不了试用，就直接滚蛋没干签一年。然后最后几天天天中介带人过来看，态度很嚣张。最后退房的时候，我在帝都找妹子去了。委托了蒋韩同学过去退押金。一个很能扯淡的河南汉子硬是被两中年妇女说的毫无招架之力。唉。反正被扣了钱。不过也难为他了。找啊找，然后我们投资人说有个朋友的朋友有住房子。当时遇到国庆要去帝都找妹子。找房子带搬家就一周时间。然后想着恩好像有点熟人类似的关系应该没啥问题就定下来了，没有签合同（这个为现在埋下了巨大的隐患）。厦大里面最古老的房子没有之一，每层有共用厕所（没有独立卫生间）。唯一两个电器空调和热水器。我进去的时候起码画了2000添置洗衣机，电磁炉等物品才能住的。第二次交租突然告诉我有个物业管理费，嘛当，当初就写了个收据，没啥合同。一定说是跟我说过的。恶心坏了。没窗帘，我自己挂。空调坏了，我自己修。电灯坏了我自己换。嘛当，想着也没有啥大事情就自己弄好了。不要这么娘炮。天天找房东。结果呢一年到期人家2话不说，呵呵因为物价上涨，所以房租也要涨。我从来没有拖欠过每次交租。而且他是教职工租房房子，很是便宜，然后一年到期的头7天突然跟我说下一年的房租要涨200.之前跟我没有任何联系。因为没有合同人家就是要涨就涨。但是他的房子几乎没啥成本，是厦大租给教职工做福利的。然后我想找房子，但是那个月突然有工作要忙。最后没能找到满意的。我只能说是要继续住。然后叫他过来当面说了1小时。晓之以情，动之以理。最后喉咙都感觉出血的情况下。在他带来各种不平等条约的合同上只涨100.签了1年。这不，住了没2月就要拆。收到消息到搬走也之有10天左右的时间。就在2013.12.30日我打电话跟房东说我2013.12.31日要搬走。然后晚上过来交接一下房租的事情。（这个时候我有一个月的押金，和交了3个月只住了两个月的房租）他满口答应没有问题。 2013.12.31日晚我回到老房子跟他打电话问他什么时候过来交接。第一，他矢口否认我交过一个月的押金。并且否认之后签的合同上同样写着交了押金的条目。第二，以其他理由推脱不能来交接。真的，当时我整就无语在空中。然后我叫他当面过来对质。我还有他写的收据。然后我拍照发过去给他。他又说2014年1月1日。转帐给我。基于很多很多小的细节。我在离开房子的时候拍了些照片。以防止要出什么妖蛾子。&lt;/p&gt;
&lt;p&gt;在这个劣币驱逐良币。权利利益群体更加压迫普通群体的地方。我唯一找到的解决方案就是移民。&lt;/p&gt;
&lt;p&gt;这段写的异常愤怒。下面写点轻松的。&lt;/p&gt;
&lt;h3 id=&quot;完全正版化&quot;&gt;&lt;a href=&quot;#完全正版化&quot; class=&quot;headerlink&quot; title=&quot;完全正版化&quot;&gt;&lt;/a&gt;完全正版化&lt;/h3&gt;&lt;p&gt;其实，全面转到Linux的时候，已经很少用盗版了，除了虚拟机里面的Windows是盗版。然后全面用Mac以后，几乎没有啥盗版。只是一开始的时候也没入啥App。但是2013年，我买正版没有三千也有两千了把。第一次买超过100rmb App的时候还是很纠结。但是买过了以后就没啥感觉了。然后买了几次以后。感觉300左右的App还是能在接受的范围内。所以，看到心仪的App一般就入了。6rmb这种几乎都是顺点的。所以，2013年对我来说是完全正版化的一年。对了，我没有虚拟机，所以我也没有用Windwos。所以，现在我可以自豪的说，我现在Mac上面全部App是正版。当然今年的正版化，我还尝试过音乐。不过iTunes里面中国区买不到。天朝的几家付费的我都冲过一两个月尝试了一下。但是都没有心仪的。不过后来Xiami For Mac。确实做的好，本来我对虾米的印象是很糟糕的。但是Xiami For Mac居然能改变我对虾米的看法。真的做的好。然后今年去电影院的次数也满多，iMax也看了不少场。对了，如果你一定要揪出来说，我只能说我承认我看的爱情动作片还是盗版。不过我也会尝试着弄成正版。&lt;/p&gt;
&lt;h2 id=&quot;工作&quot;&gt;&lt;a href=&quot;#工作&quot; class=&quot;headerlink&quot; title=&quot;工作&quot;&gt;&lt;/a&gt;工作&lt;/h2&gt;&lt;h3 id=&quot;Sumi&quot;&gt;&lt;a href=&quot;#Sumi&quot; class=&quot;headerlink&quot; title=&quot;Sumi&quot;&gt;&lt;/a&gt;Sumi&lt;/h3&gt;&lt;p&gt;来厦门也快两年，其实长开智以后，只要某一刻突然停下来回头瞅瞅，都会发出时间过的好快的感觉。文人骚客说就是“人生天地之间，若白驹过隙，忽然而已”。 &lt;/p&gt;
&lt;p&gt;2013过年一来，大概迷茫过3-4个月的样子。迷茫的原因是我周围都是一堆“一条龙”能搞定的人儿。我所谓的”一条龙”就是现在流行的”full stack developer”。&lt;/p&gt;
&lt;p&gt;我boss Kevin Cao。 泪流满面，工作室来过好多波人参观。如果是熟悉的人都会说一句“Kevin是我见过从设计到技术都能达到国际水准的一个人”。如果不熟悉的人听到啥“Grid Diary是你设计的？还是你写的？我这么多年来第一次见过又能设计又能写代码的”。可想我一个hello world级别的小菜程序员压力有多大了么。&lt;/p&gt;
&lt;p&gt;90后”一条龙”王放放同学，泪流满面，从后端，前端，设计，iOS，Android, MacOSX App.一条龙了。居然tm的还是文科生跨界友情客串。你叫一个读了破壁坑爹4年的软件工程专业的88年大龄hello world级别程序员情何以堪。&lt;/p&gt;
&lt;p&gt;90后“一条龙”廖逸聪小朋友， 泪流满面，又是一个从后端，前端，设计，iOS，Android, MacOSX App.一条龙了。而且华丽丽的看清楚了破壁坑爹的软件学院本质。大二休学闯荡江湖。然后见到我的时候大部分时间拉着我聊南怀瑾。然后时不时的送自己烤的小饼干给我吃。嘛当，不仅可以写的一手好代码，还能做的好一手小饼干。恩我去面壁思过去了。&lt;/p&gt;
&lt;p&gt;当看到我司RoR高富帅写起iOS也绝不含糊。旁边的100平土豪灰用起Photoshop也是一溜一溜的时候。我就纠结了，嘛当，写个程序写hello world级别。连个PS都不会用。太丢人了。&lt;/p&gt;
&lt;p&gt;在这样一群优秀的人儿当中，那时候我想，嘛当我也可以画图的嘛。好歹小学时候画小金鱼拿过小红花的。这样我跟小聪妹子骗来了一本「像艺术家一样思考」。然后郑重其事的去厦大小超市里面买了铅笔和纸准备学习画画。初级目标是理解美。中级目标是也能自己熟练的捣鼓点UI。终极目标是向Boss那样一条龙下来。而且是高水准的一条龙。&lt;/p&gt;
&lt;p&gt;可是事实就是任何东西没有经过一万小时的锤炼是无法成为专家的。只有幼儿园水平却想着要弄出专家级别的东西。而弄不出来的时候我心情就会变的很压抑、烦躁。白天工作的时候思绪就会不集中，素描也没有能坚持下去。就画了大概2周左右的时间。&lt;/p&gt;
&lt;p&gt;在学习素描的过程中，我不仅仅想学画画这样一个技能。我就是想一口吃成一个胖子。我还同时看着后端而且后端我还在Golang Ruby NodeJS中徘徊。今天这个配置环境Go写个hello world折腾一下。明天弄个Vim环境试试Ruby的写法。 大后天弄个Textmate的bundle写一下NodeJS。每个东西都浅尝辄止的学习。却想做出一个庞大的系统出来。&lt;/p&gt;
&lt;p&gt;最后，我居然还在开始看着OSX编程。也不知道脑子咋想的。觉得自己在iOS端输出不够，就逃避的想说恩。我去先学一学OSX。到时候项目快速推进到OSX上。来弥补我在iOS端的薄弱输出。事实是OSX上面的坑更多。各种API一点都没有iOS上的好用。而且桌面端的思路跟移动端的思路完全是两个概念。双修其实是有难度有门槛的事情。&lt;/p&gt;
&lt;p&gt;各种折腾2-3个月，我还是那个我。无法画出漂亮的UI，写不出比hello world更加复杂的后端，写不了OSX的程序，本来应该写好的iOS代码的质量也没有得到提高。时间成本在折腾中流失。&lt;/p&gt;
&lt;p&gt;在我的各种愤怒中。萌小萌同学和Boss让我意识到。如果单项技能没有一万小时的修炼是无法达到我想要的高度的。而我不能三心二意的做事情。这样反而影响到了工作质量。&lt;/p&gt;
&lt;p&gt;我用了一段时间艰难的让自己承认自己只是一个天资普通的人。我只有踏踏实实的一个小时一个小时单线程的努力。累计到了一万小时才是最终的王道。&lt;/p&gt;
&lt;h3 id=&quot;代码-amp-amp-技术&quot;&gt;&lt;a href=&quot;#代码-amp-amp-技术&quot; class=&quot;headerlink&quot; title=&quot;代码 &amp;amp;&amp;amp; 技术&quot;&gt;&lt;/a&gt;代码 &amp;amp;&amp;amp; 技术&lt;/h3&gt;&lt;p&gt;今年早些时候，Allen Xu（又是一个全端工程师，你们够了！！！天天刺激我）的引荐。我有幸被唐巧加入他的群里。诚惶诚恐，巧哥的群有点像传说中大佬caoz的群的方式。进群的唯一标准是巧哥觉得你ok。虽然不可能像caoz的群里那种随便一个都是大佬。但是目测巧哥的群里大部分伙伴们的实力（其实就是除了我）应该能代表目前中国iOS&amp;amp;&amp;amp;Cocoa的顶级实力。肯定有一些潜伏的大神还没有露面出现。不过现在群列表里都是开发这百万用户，千万用户，亿级用户产品的大大们。平时有个啥问题丢进群里。几乎是立马可以得到解决方案。群里也经常分享整个业界的最新资讯。2013年能进巧哥的群，是一个非常大的惊喜。从里面收获颇多。&lt;/p&gt;
&lt;p&gt;2013年的代码质量从被review的情况上来看，可读性依然一塌糊涂。最更本的原因是我只会一个一个的单词（还经常打错）。而无法连成一句完整的话。其实我有很努力的去改进这个问题。都变成每次写代码，起函数名字是整个写代码过程中花费时间最长的部分。但是效果不明显。&lt;/p&gt;
&lt;p&gt;今年技术关注的重点依然集中于iCloud。由于过年前的匆忙修改，并且没有覆盖测试，导致iCloud出错。最终导致Grid Diary没能一炮而红。其实主要责任是我的。为了解决第一次发布版本的错误。我们用了整整2个月，不停的推出版本来修复错误。而因为没有写测试用例覆盖测试。往往我们修复了一个问题，结果就引出了其他问题。关于Gird Diary这一年遇到的坑。我觉得可以重新写一篇blog了。&lt;/p&gt;
&lt;p&gt;然后为了解决iCloud + Core Data同步的问题。又去尝试设计过iCloud + Document的方法去同步。然后在建立索引。但是由于demo完成度太低。和老用户升级带来的麻烦。此方案最终抛弃。所以现在依然是iCloud + Core Data的同步方式。&lt;/p&gt;
&lt;p&gt;今年另外一个重点关注的东西是ReactiveCocoa。虽然我还是hello world级别。不过在github上watch一个这样活跃的项目收获还是巨大的。可以看到什么是开发的热情和执行的高效。看到他们为了一个名字而讨论怎么样才合适。所以ReactiveCocoa对我来说不仅仅带来了一种新的设计思想和代码编写方式。它还为我展示了一个国际化开源项目的活力。&lt;/p&gt;
&lt;h2 id=&quot;感情&quot;&gt;&lt;a href=&quot;#感情&quot; class=&quot;headerlink&quot; title=&quot;感情&quot;&gt;&lt;/a&gt;感情&lt;/h2&gt;&lt;h3 id=&quot;父母&quot;&gt;&lt;a href=&quot;#父母&quot; class=&quot;headerlink&quot; title=&quot;父母&quot;&gt;&lt;/a&gt;父母&lt;/h3&gt;&lt;p&gt;其实在16-7岁的时候跟父母的关系其实蛮紧张的。因为年少吧，现在能多为其他人考虑问题以后。那就多体谅父母。只是亲尚在，不远游。自己在外面漂泊着如果父母有个什么事情也帮助不了的时候觉得自己挺自私的。不过爸妈还是很尊重我的意思，我也很感谢他们并没有强迫我去做我不喜欢做的事情。&lt;/p&gt;
&lt;h3 id=&quot;萌小萌&quot;&gt;&lt;a href=&quot;#萌小萌&quot; class=&quot;headerlink&quot; title=&quot;萌小萌&quot;&gt;&lt;/a&gt;萌小萌&lt;/h3&gt;&lt;p&gt;和萌小萌有时候也会斗斗小脾气，拌拌小嘴。经过无数次的商量。异地恋的弊端应该都全部解决了。然后今年准备去给未来丈母娘看看，希望能是一个好的结果。&lt;/p&gt;
&lt;h3 id=&quot;兄弟&quot;&gt;&lt;a href=&quot;#兄弟&quot; class=&quot;headerlink&quot; title=&quot;兄弟&quot;&gt;&lt;/a&gt;兄弟&lt;/h3&gt;&lt;p&gt;今年好兄弟应该说还是比较圆满了。老闷和飞哥多年后的今天终于找到了各自的真爱，可喜可贺。wwl荣升当爹不说，多年的盘终于出去取得突破性进展。回去抱大腿的日子指日可待。六的结婚日程应该已经提上日程，大豪宅已经住上，差不多也是当爹的节奏了。鑫哥？鑫哥号称只剩下钱了。随时可以回去抱大腿了。&lt;/p&gt;
&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;p&gt;说好听点我并不是一个循规蹈矩的人。说实际情况就是自制力极其差，拖延症状严重。每次制定的新年计划都是像是个安慰剂。安慰一下拖沓了一年的自己。给自己心里暗示说恩下一年会做的好一点。其实25年来每次都这样的说法，而每次只有等到12月31日的时候来悔恨自己。&lt;/p&gt;
&lt;p&gt;所以此时此刻我很矛盾。 不知道是否应该把2014年的计划下来。&lt;/p&gt;
&lt;p&gt;2014年，我希望我能好好的学习一下洋文。&lt;/p&gt;
&lt;p&gt;2014年，我希望萌小萌能快乐过每一天。&lt;/p&gt;
&lt;p&gt;2014年，我希望长辈身体健康。&lt;/p&gt;
&lt;p&gt;2014年，我希望我能和Sumi继续走在改变世界的路上。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;最后，这就是我2013年的一些碎碎念。从2013一直写到了2014. 就给我的伙伴们当个乐呵乐呵的东西看看呗。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;h2 id=&quot;生活&quot;&gt;&lt;a href=&quot;#生活&quot; class=&quot;headerlink&quot; title=&quot;生活&quot;&gt;&lt;/a&gt;生活&lt;/h2&gt;&lt;h3 id=&quot;注定的漂泊&quot;&gt;&lt;a href=&quot;#注定的漂泊&quot; class=&quot;headerlink&quot; title=&quot;注定的漂泊&quot;&gt;&lt;/a&gt;注定的漂泊&lt;/h3&gt;&lt;p&gt;在16岁的时候，我就会隐约觉得我会一生注定漂泊。这种感觉以我的文字水平很难用完整表达出来。不过18岁以后的每一年换一个住的地方。直接用事实验证了这个16岁的直觉。本来以为我会在厦大住够2年的，命中注定，天煞孤星。房子要拆迁只有另外找地方了。继续这一年一个地方的节奏。&lt;/p&gt;
    
    </summary>
    
    
      <category term="just-talk" scheme="http://iiiyu.com/tags/just-talk/"/>
    
  </entry>
  
  <entry>
    <title>iOS笔记(32) UbiquityStoreManager 学习笔记1</title>
    <link href="http://iiiyu.com/2013/12/25/learning-ios-notes-thirty-two/"/>
    <id>http://iiiyu.com/2013/12/25/learning-ios-notes-thirty-two/</id>
    <published>2013-12-25T15:22:33.000Z</published>
    <updated>2014-04-01T04:25:19.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;现在都是进入互联网时代，一个互联网的App数据肯定是存在互联网上的。到处都是云，到处都是服务器。如果数据是存储在云端or服务器端。每次数据的读取和修改直接作用于服务器。这样不管你用多少设备，多少平台。数据都能保证是唯一的。但是还有些App需要一些更好的性能和效果的时候往往等不起网络的数据传来传去。这时候需要一些折中的办法来解决这些问题。iCloud就是Apple给出的解决方案。就普通用户来看，iCloud应该是在Apple系中的最优选择。但是从开发者的角度来看iCloud就是个无穷无尽的深渊。&lt;/p&gt;
&lt;p&gt;全球有很多开发者致力开发第三方库以便让iCloud能被使用。 &lt;/p&gt;
&lt;p&gt;UbiquityStoreManager就是其中之一。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;UbiquityStoreManager&quot;&gt;&lt;a href=&quot;#UbiquityStoreManager&quot; class=&quot;headerlink&quot; title=&quot;UbiquityStoreManager&quot;&gt;&lt;/a&gt;UbiquityStoreManager&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lhunath/UbiquityStoreManager&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UbiquityStoreManager&lt;/a&gt;是一个core data持久化层的控制器.&lt;/p&gt;
&lt;p&gt;UbiquityStoreManager在iOS 6时代是使用GPLv3协议。所以好像使用者不是很多。iOS 7 Core Data 关于iCloud引入了新的机制和新API以后UbiquityStoreManager迅速跟进。并且更换了协议使用了Apache v2。所以如果你有iOS 7的App想使用iCloud + Core Data这种hard模式。UbiquityStoreManager是第一个应该推荐的库.&lt;/p&gt;
&lt;p&gt;UbiquityStoreManager不同于其他解决方案。大部分都是在iCloud上面继续构建一层来保证数据同步的完整一致性。UbiquityStoreManager仅仅是解决了就只单纯使用iCloud就会遇到的问题。比如数据出错了怎么办。从本地数据迁移到iCloud数据。从修改日记来重建数据库等。&lt;/p&gt;
&lt;h2 id=&quot;UbiquityStoreManager解决的问题&quot;&gt;&lt;a href=&quot;#UbiquityStoreManager解决的问题&quot; class=&quot;headerlink&quot; title=&quot;UbiquityStoreManager解决的问题&quot;&gt;&lt;/a&gt;UbiquityStoreManager解决的问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;提供在iCloud和本地Store直接切换&lt;/li&gt;
&lt;li&gt;在用户没有iCloud store 的时候自动的把local data 合并到iCloud(使用本地数据重建iCloud)&lt;/li&gt;
&lt;li&gt;所有与iCloud有联系的事件处理 iCloud帐号删除、iCloud数据删除、本地数据导入、其他设备变换ubiquitous、恢复有错误的transaction logs&lt;/li&gt;
&lt;li&gt;其他的一些实用功能：从transaction logs重建cloud store、 从cloud store 重建transaction logs、 删除cloud store、 Ability to nuke the entire cloud container、 把一个store里面全部的entities合并到另外一个store&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在iCloud + CoreData的官方解决方案中，对于开发者来说完全的黑箱子操作。难于开发和调试bug。而且经验不足完全会被很多坑拉进泥潭里面。使得开发更本无法进行下去。所以仔细研究UbiquityStoreManager。是我建议踏入iCloud + Core Data开发的必修课。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;只是我学习中的一点笔记和注释翻译而已。留给自己看看。如果有不对的地方，欢迎指出。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人学习记录使用,也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助,您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站,这样您将能在第一时间获取本站信息.&lt;/p&gt;
&lt;h2 id=&quot;开篇扯淡&quot;&gt;&lt;a href=&quot;#开篇扯淡&quot; class=&quot;headerlink&quot; title=&quot;开篇扯淡&quot;&gt;&lt;/a&gt;开篇扯淡&lt;/h2&gt;&lt;p&gt;现在都是进入互联网时代，一个互联网的App数据肯定是存在互联网上的。到处都是云，到处都是服务器。如果数据是存储在云端or服务器端。每次数据的读取和修改直接作用于服务器。这样不管你用多少设备，多少平台。数据都能保证是唯一的。但是还有些App需要一些更好的性能和效果的时候往往等不起网络的数据传来传去。这时候需要一些折中的办法来解决这些问题。iCloud就是Apple给出的解决方案。就普通用户来看，iCloud应该是在Apple系中的最优选择。但是从开发者的角度来看iCloud就是个无穷无尽的深渊。&lt;/p&gt;
&lt;p&gt;全球有很多开发者致力开发第三方库以便让iCloud能被使用。 &lt;/p&gt;
&lt;p&gt;UbiquityStoreManager就是其中之一。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>简单测评Bong(深度吐槽,胆小、承受能力差和心脏病人需要陪同观看。谢谢合作)</title>
    <link href="http://iiiyu.com/2013/12/21/evaluation-bong/"/>
    <id>http://iiiyu.com/2013/12/21/evaluation-bong/</id>
    <published>2013-12-21T11:47:02.000Z</published>
    <updated>2014-02-17T04:21:39.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;p&gt;##开篇扯淡&lt;/p&gt;
&lt;p&gt;今天为了测试Bong支持游泳的说法，我差点挂在厦大的游泳馆里面。这天太冷了，而我自己又对自己的身体素质预估不住，跑去露天的游泳池。偌大一个标准池就我一个人，随意做了几下准备运动抵不住冷风吹，深吸一口气眼睛一闭跳进去。XXX，我能说脏话么。蛋都要冻掉的节奏啊，心中顿时把年少时候在电视上看到冬天跳入结冰河水游泳的新闻编者草泥马过了千万遍。顿时想转身起来，但是一想到下去还钥匙时候丢人死了。就奋力的向前游。接下来，我体验到了在水里皮肤会有痛的经历。记忆力从来没有过的。由于水温比身体温度低很多全身的皮肤感到刺痛，寒冷刺皮肤啊。扛着想今天至少要游1km吧。游了200m的时候开始全身麻木or适应了刺痛感，好过一点。咬牙游到600m的时候还觉得可以到1000m的结果650m米的时候开始感到不适。以自己科学常识隐约觉得是体温下降太多导致。所以就在700m的时候翻身上岸。经过长途跋涉回到宿舍里面赶紧冲了一个热水澡。然后躲到被窝里面小睡了1个小时才感觉命回来了。&lt;/p&gt;
&lt;p&gt;我并没有才入手就吐槽，而是使用了5天。打了两次羽毛球，游了一次泳。才开始吐槽的哦。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;##缘由&lt;/p&gt;
&lt;p&gt;2013这一年没入啥大件，但是小东西弄了一堆。也蛮浪费钱的唉。智能穿戴设备去年年末火的时候就一直寻思着入一个看看，不过一直狠不下心来。而今年入夏以后主要运动几经波折固定在了游泳上，深度观察以后觉得靠谱的两家&lt;a href=&quot;http://www.fitbit.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fitbit&lt;/a&gt;和&lt;a href=&quot;https://jawbone.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jawbone&lt;/a&gt;的手环都不能支持游泳。所以一直在等待一个支持游泳的手环出来。&lt;/p&gt;
&lt;p&gt;然后在11月的某天，看weibo的时候看到kenwone上在卖一个国产手环，听说过的另外一个国产手环(咕咚)节操早就掉没了。这个好像还不错的样子。点过去一看。靠可以检测游泳，最重要的是一个VIP特权。号称这一批用户可以永久享受每一代设备更新。我靠爱占小便宜技能开启。然后怂恿着大厨先弄了一个。然后自己也就付款了一个。小算盘打着，这么高调。至少能撑过2代吧。那就至少有两个。有两个的话，就差不多保本有赚了。啊哈哈。&lt;/p&gt;
&lt;p&gt;所以我入Bong有三个理由&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我想试试智能手环之类&lt;/li&gt;
&lt;li&gt;支持游泳&lt;/li&gt;
&lt;li&gt;性价比&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;##Bong的整个运营&lt;/p&gt;
&lt;p&gt;买了bong，然后关注了多关注了bong。weibo时不时瞅两眼。&lt;/p&gt;
&lt;p&gt;说微信公共帐号。这次发现公共帐号还是蛮有必要的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保存了每天更新&lt;/li&gt;
&lt;li&gt;虽然在我看来每天的内容做的一般。但是起码有人味。不那么机械冷冰冰。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过weixin好感度提高蛮多的。&lt;/p&gt;
&lt;p&gt;然后说第一次跳票，其实都很能理解。所以第一次听说也才10几个的退款率。整个前期运营功不可没。&lt;/p&gt;
&lt;p&gt;不过后来的整个运营就只能用惨不忍睹来形容了。&lt;/p&gt;
&lt;p&gt;跳票以后的进度不清楚。然后承诺的15号发货。15号虽然发了大部分(猜测)。但是被发货的用户们(我)对整个顺丰订单毫无信息。已经习惯了taobao系流程的我来说很不习惯。没有安全感。就算整个订单系统来不及做。丢一个excel表格起码也能丢上去把。起码能有个地方能查到啊。很遗憾什么都没有。&lt;/p&gt;
&lt;p&gt;我知道bong现在才8个人。按照官方说法是有1400个要发。算发一个需要5分钟。简单算术8个人需要做15个小时才能发完。按照官方说法感觉肯定发一个的时间超过5分钟。所以觉得他们在一天之类肯定发不完。&lt;/p&gt;
&lt;p&gt;我想说的是，说是跳票到15号。不是就算到15号才拿到货开始发把。既然跳票了，应该把这个发货时间也算进去。比如说15号发，应该是13号左右开始包装填写。然后15号叫来顺丰就妥妥的一次性发出去。坐等用户反馈。都使用跳票技能，就多跳两天准备充分肯定更好。&lt;/p&gt;
&lt;p&gt;##开启吐槽模式&lt;/p&gt;
&lt;p&gt;###到手&lt;/p&gt;
&lt;p&gt;恩，怀着激动的心情。我在17号拿到了bong。&lt;/p&gt;
&lt;p&gt;下面是多图杀流量时间&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1ebrmul7yq1j20hs0nutcs.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;盒子怎么说呢。之前在weixin上运营的时候玩了一手，说是第一批盒子质量不好，换了一批，当时似曾相识的感觉。不过我以为是为了追求品质。不过打开顺丰袋子的一个感觉是。艹，这个不会是第一批盒子吧。浓浓的山寨感觉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1ebrn32vsfkj20hs0nujuy.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;恩knewone还多送了点东西，不过自己这张贴纸感觉不喜欢。本来想贴到电脑上的。但是上手感觉质量跟github的贴纸有一定差距加上这个小怪物不是我的菜。就没有贴了。然后是钥匙收纳盒。没想到用到哪里。自己住的地方被告知20天内搬离。又是一把辛酸泪。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/a6d3226bgw1ebrn7laek8j20hs0nuwhv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;恩 bong的包装盒就不多说了，几张卡片。一张有团队成员签名。一张是类似说明书。两张强调VIP的尊贵身份。&lt;/p&gt;
&lt;p&gt;###吐槽手环本身&lt;/p&gt;
&lt;p&gt;首先是外形&lt;/p&gt;
&lt;p&gt;官网上是这样&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/a6d3226bgw1ebrnhjrlbuj20z10k9769.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;实际上是这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/a6d3226bgw1ebrnospqpyj20jm0qadj0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先，两头是细的这种设计。啥时候变成了水桶腰设计。&lt;/p&gt;
&lt;p&gt;第二，我买的是黑色的把。为啥看着跟银色一个样子。这是cosplay iPhone5s的太空灰么。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1ebrnxonhknj20hs0nuwi1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;我不知道这张能不能清楚的看到。灯的地方被胶糊住了。这个感觉太恶心了。是拿到手以后最恶心的地方。也可能是期望抱太高了，导致的心里落差。前期的运营以为bong是注重细节的团队。但是嘴上说说和实际做到是有差距的。这里我看见了bong的差距。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/a6d3226bgw1ebro51k5cqj20hs0nuwi1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;转过来，我第一次看见bong是怎么充电的。一直说的都是点触式充电。才知道 原来后面有两个孔啊。保密性做的很好啊。然后图上在两个充电孔下面也能清楚的看到，明显的由于某次没有对准而导致使劲压下去造成的刮痕。再次觉得嘴上说说和实际做到是有差距的。&lt;/p&gt;
&lt;p&gt;手环的两侧接缝触有一层摸上去明显不平整。&lt;/p&gt;
&lt;p&gt;正面上有一条淡淡的线。觉得应该是材质本身的线。但是出现在正面稍微仔细就能看见。&lt;/p&gt;
&lt;p&gt;嗯，基本上硬件部分就这么多了。&lt;/p&gt;
&lt;p&gt;###吐槽说明书以及整个引导流程&lt;/p&gt;
&lt;p&gt;说明书叫那个简单啊，一个卡片几句话搞定。还以为是已经设计到返璞归真的地步了手上即用。但是还是看了一遍。(此时此刻卡片没在，而且是5天前发生的事情了，凭借印象说了)&lt;/p&gt;
&lt;p&gt;首先出现的是一句最好使用PC链接。环顾四周，方圆10米内没有发现一台PC。那OSX可以不可以，我也不知道。唉，先插上试试呗。&lt;/p&gt;
&lt;p&gt;接下来一句话引起了我的注意。说的是插上大概五分钟就可以拿下来使用了。！！！！！&lt;/p&gt;
&lt;p&gt;插上大概五分钟？是多于五分钟 还是小于5分钟？如果不插会发生什么呢？插到5分钟的时候会发生什么呢？ 插久了又会发生什么呢？有没有提示啊。靠。那5分钟我需要怎么计算呢。打开手机的秒表功能么。我很难想象一个让我都手足无措的东西。去介绍给媳妇儿用。或者带给爸妈用。&lt;/p&gt;
&lt;p&gt;然后我以为App里面应该会有详细说明的！！！！结果没有！！！连接前和连接后都没有。&lt;/p&gt;
&lt;p&gt;###吐槽App&lt;/p&gt;
&lt;p&gt;自己做iOS的，难免吐狠了点。bong团队看到了不要介意。又或者你们都拿到投资了要不把App外包给我们国际大厂Sumi来做把。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一次发短信的时候注册不上&lt;/li&gt;
&lt;li&gt;远看想扁平化设计 近看背景还有材质&lt;/li&gt;
&lt;li&gt;这是Moves的白天版本么&lt;/li&gt;
&lt;li&gt;每次打开都要Loading。为啥不先打开再载入数据啊&lt;/li&gt;
&lt;li&gt;我在第三天的时候app叫重新登录一次。然后第一天的数据没了。&lt;/li&gt;
&lt;li&gt;为啥tableview上的排列时间是00:00在最上面。不应该是当前时间在第一个位置么&lt;/li&gt;
&lt;li&gt;除了跑步以外，其他的都归类到运动里面去了么。分类太少了&lt;/li&gt;
&lt;li&gt;各种统计图表有待改进&lt;/li&gt;
&lt;li&gt;电量检测不准确 第一次使用了一小时看掉了10%多的电量。现在用了5天了。掉了7%的电量。而且最近两天都没有电量变化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;##吐槽使用中的情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;早上唤醒的时候只有一次。现在是冬天啊，不能多摇几次么&lt;/li&gt;
&lt;li&gt;一开始我带左手，后来打羽毛球的时候想想带在了右手。导致刷牙的时候会震动一下进入类似散步模式。&lt;/li&gt;
&lt;li&gt;不能识别多种运动&lt;/li&gt;
&lt;li&gt;记得说过可以记步的。但是实际没有。觉得有记步的数据会更好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;##总结&lt;/p&gt;
&lt;p&gt;好累啊 写一晚上了就这么多把&lt;/p&gt;
&lt;p&gt;###优点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动识别睡眠&lt;/li&gt;
&lt;li&gt;防水 可游泳， 虽然我也游了200m的自由泳但是没有识别&lt;/li&gt;
&lt;li&gt;如果发第二代的话性价比高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###缺点&lt;br&gt;今天blog内容。&lt;/p&gt;
&lt;p&gt;##One more thing&lt;/p&gt;
&lt;p&gt;如果给我来运营，我会把这次bong的人数控制在200人左右。尽量做好第一批口碑。然后把第一批变成死忠粉。根据反馈来不断迭代很进化。然后在把已经行之有效的小米打法拿来打一次。&lt;/p&gt;
&lt;p&gt;其实跳票的时候 只退了10几个人我觉得已经几乎要做到了。但是如果说能收到以后在退款。我想这个数量应该是惊人的。而且把之前前期做的所有努力付之一炬。&lt;/p&gt;
&lt;p&gt;然后App的话我会提供很多种运动种类给用户选择。然后数据上传做数据分析和机器学习。这样以后就能识别更多的运动类型了。&lt;/p&gt;
&lt;p&gt;恩 福利就说这么多。多的留着啊哈哈。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;p&gt;##开篇扯淡&lt;/p&gt;
&lt;p&gt;今天为了测试Bong支持游泳的说法，我差点挂在厦大的游泳馆里面。这天太冷了，而我自己又对自己的身体素质预估不住，跑去露天的游泳池。偌大一个标准池就我一个人，随意做了几下准备运动抵不住冷风吹，深吸一口气眼睛一闭跳进去。XXX，我能说脏话么。蛋都要冻掉的节奏啊，心中顿时把年少时候在电视上看到冬天跳入结冰河水游泳的新闻编者草泥马过了千万遍。顿时想转身起来，但是一想到下去还钥匙时候丢人死了。就奋力的向前游。接下来，我体验到了在水里皮肤会有痛的经历。记忆力从来没有过的。由于水温比身体温度低很多全身的皮肤感到刺痛，寒冷刺皮肤啊。扛着想今天至少要游1km吧。游了200m的时候开始全身麻木or适应了刺痛感，好过一点。咬牙游到600m的时候还觉得可以到1000m的结果650m米的时候开始感到不适。以自己科学常识隐约觉得是体温下降太多导致。所以就在700m的时候翻身上岸。经过长途跋涉回到宿舍里面赶紧冲了一个热水澡。然后躲到被窝里面小睡了1个小时才感觉命回来了。&lt;/p&gt;
&lt;p&gt;我并没有才入手就吐槽，而是使用了5天。打了两次羽毛球，游了一次泳。才开始吐槽的哦。&lt;/p&gt;
    
    </summary>
    
    
      <category term="just-talk" scheme="http://iiiyu.com/tags/just-talk/"/>
    
  </entry>
  
  <entry>
    <title>iOS笔记(31) CocoaPods 手把手五分钟教你制作自己的podspec文件</title>
    <link href="http://iiiyu.com/2013/12/19/learning-ios-notes-thirty-one/"/>
    <id>http://iiiyu.com/2013/12/19/learning-ios-notes-thirty-one/</id>
    <published>2013-12-19T12:11:16.000Z</published>
    <updated>2014-02-17T04:20:45.000Z</updated>
    
    <content type="html">&lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;p&gt;##开篇扯淡&lt;br&gt;圣诞渐进，各种App都在黑五一波冰点。可以遇见的是12月25号前也会有一大波来临。但是！！！今年买软件貌似已经花了很多钱了。而且，也没有几个想入的了。所以就忍忍吧。&lt;/p&gt;
&lt;p&gt;然后，做个宣传啊。我们国际化大厂Sumi的App Grid Diary在紧锣密鼓的开发2.0. 完全iOS7设计。各种给力。到时候希望能给大家带来一个好的App吧。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;##CocoaPods&lt;/p&gt;
&lt;p&gt;CocoaPods 不必在介绍了吧。如果你是一个iOS or OSX的开发者。然后你跟我说你还没有用过CocoaPods。我肯定会觉得你不够潮(low爆了)。&lt;/p&gt;
&lt;p&gt;其实我之前又写过两篇介绍CocoaPods的&lt;/p&gt;
&lt;p&gt;只不过时间有点久远了。而且CocoaPods更新很快。有了很多新的特性和功能。 截至我写这篇blog。我的pod version是0.28.0。&lt;/p&gt;
&lt;p&gt;不过还是具有参考价值&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://iiiyu.com/2012/10/26/learning-ios-notes-fourteen/&quot;&gt;使用CocoaPods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://iiiyu.com/2013/03/01/learning-ios-notes-sixteen/&quot;&gt;配置自己的CocoaPods库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##五分钟手把手&lt;/p&gt;
&lt;p&gt;在上面的&lt;a href=&quot;http://iiiyu.com/2013/03/01/learning-ios-notes-sixteen/&quot;&gt;配置自己的CocoaPods库&lt;/a&gt;里面。当时只是初步的使用pods。在学习的过程中。很多理解都很浅显。现在终于用了一年多CocoaPods。有点小心得就来记录一下。&lt;/p&gt;
&lt;p&gt;github现在每天必看网站。一个是工作需要，另外一个是上面神奇的东西太多太多了。学无止境啊。&lt;/p&gt;
&lt;p&gt;使用CocoaPods管理第三方库有时候就会遇到这样的尴尬。好不容易找到了一个心仪的库,却发现CocoaPods里面搜索不到。&lt;/p&gt;
&lt;p&gt;怎么办 怎么办&lt;/p&gt;
&lt;p&gt;来乖。手把手交你来写hello world。&lt;/p&gt;
&lt;p&gt;栗子：  &lt;a href=&quot;https://github.com/premosystems/XCAsyncTestCase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XCAsyncTestCase&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先，去把它fork到自己的项目里面去。(什么不会fork？去面壁去)&lt;/p&gt;
&lt;p&gt;然后，把fork到自己帐号下的项目clone出来 cd进去&lt;/p&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod spec &lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; https:&lt;span class=&quot;comment&quot;&gt;//github.com/iiiyu/XCAsyncTestCase&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着你会看到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/686e6613gw1ebpcdvd99xj20lc09f0ui.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个很正常，很多项目都没有tag。反正在自己的下面。可以瞎搞。给项目加入一个tag。以便pod能自动识别。&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;tag&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;Tag release 0.0.1”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push —&lt;span class=&quot;keyword&quot;&gt;tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf XCAsyncTestCase.podspec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod spec create http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/iiiyu/XCAsyncTestCase&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着你会看到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/686e6613gw1ebpcfwf0wsj20i6023mxh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;OK。 然后用你自己喜欢的编辑器打开。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mate&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;XCAsyncTestCase&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.podspec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着其实不用怎么改里面的内容 &lt;/p&gt;
&lt;p&gt;我把注释删掉 作者改成原来的作者。然后需要的源码位置改成正确的&lt;/p&gt;
&lt;p&gt;大概就是这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/686e6613gw1ebpcik0lh1j20ry0db0v9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当然 最重要的是s.source_files这个。你要把你要包含的文件路径找对了。 然后用通配符匹配好了。就OK了。&lt;/p&gt;
&lt;p&gt;当然其他项，你看看注释啥的 选择性的填一些。在这里是一个五分钟的hello world。不深入讨论&lt;/p&gt;
&lt;p&gt;接着 把修改好的文件push到github上去&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt; XCAsyncTestCase.podspec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -&lt;span class=&quot;keyword&quot;&gt;am&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;add XCAsyncTestCase.podspec file”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后，在你项目的Podfile里面加入这个第三方库的地址。&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;XCAsyncTestCase&#39;&lt;/span&gt;, :git =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;https://github.com/iiiyu/XCAsyncTestCase.git&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以畅快的使用pod install了&lt;/p&gt;
&lt;p&gt;五分钟打完收工有木有。很简单直白有木有。&lt;/p&gt;
&lt;p&gt;当然这里只是一个hello world。 如果库中有一些高端设置比如要包含资源文件啊。 加入库依赖啊。 配置一些xcconfig。更多内容 请查看&lt;a href=&quot;http://cocoapods.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;越来越好看的官方网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##CocoaPods福利时间&lt;/p&gt;
&lt;p&gt;以下是我平时使用经常用到的Podfile会用到的一些写法。&lt;/p&gt;
&lt;h3 id=&quot;福利一&quot;&gt;&lt;a href=&quot;#福利一&quot; class=&quot;headerlink&quot; title=&quot;福利一&quot;&gt;&lt;/a&gt;福利一&lt;/h3&gt;&lt;p&gt;首先是有一些库编译时候会有警告。但是作为一个有洁癖的人呢不想看见这些&lt;/p&gt;
&lt;p&gt;可以在platform :ios,  ‘x.0’的后面加入这句&lt;/p&gt;
&lt;figure class=&quot;highlight erlang-repl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;inhibit_all_warnings!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样编译这些第三方库的时候就没有那些烦人的小警告了。&lt;/p&gt;
&lt;h3 id=&quot;福利二&quot;&gt;&lt;a href=&quot;#福利二&quot; class=&quot;headerlink&quot; title=&quot;福利二&quot;&gt;&lt;/a&gt;福利二&lt;/h3&gt;&lt;p&gt;使用福利一是不是很爽呢。但是有一个神库ReactiveCocoa。当你关闭所有警告的时候。它就编译不过了。可急坏了。其实很简单对他单独设置打开编译警告就好了&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;ReactiveCocoa&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 2.1.8&#39;&lt;/span&gt;, :inhibit_warnings =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;福利三&quot;&gt;&lt;a href=&quot;#福利三&quot; class=&quot;headerlink&quot; title=&quot;福利三&quot;&gt;&lt;/a&gt;福利三&lt;/h3&gt;&lt;p&gt;如果你有多个Targets需要pod的库怎么办&lt;br&gt;也很简单。Podfile的头部加入&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;link_with&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;AAAAA&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;BBBBB&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;AAAAA和BBBBB都是你target的名字，这样不同的target都会有pod库了。我主要是用来解决Unit Test需要pod install一些库的问题。当初也是找了老半天才找到。&lt;/p&gt;
&lt;p&gt;##总结&lt;br&gt;CocoaPods很好用。而且一直在进化。我发现我怎么写介绍都只停留在很浅显的基础上。更多更深入的内容需要自己使用了。然后慢慢积累的。总之。不用CocoaPods的Cocoa开发太不潮了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅作为个人记录使用，也欢迎在&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/deed.zh&quot;&gt;许可协议&lt;/a&gt;范围内转载或使用，请尊重版权并且保留原文链接，谢谢您的理解合作。如果您觉得本站对您能有帮助，您可以使用&lt;a href=&quot;http://iiiyu.com/atom.xml&quot;&gt;RSS&lt;/a&gt;方式订阅本站，这样您将能在第一时间获取本站信息。&lt;/p&gt;
&lt;p&gt;##开篇扯淡&lt;br&gt;圣诞渐进，各种App都在黑五一波冰点。可以遇见的是12月25号前也会有一大波来临。但是！！！今年买软件貌似已经花了很多钱了。而且，也没有几个想入的了。所以就忍忍吧。&lt;/p&gt;
&lt;p&gt;然后，做个宣传啊。我们国际化大厂Sumi的App Grid Diary在紧锣密鼓的开发2.0. 完全iOS7设计。各种给力。到时候希望能给大家带来一个好的App吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://iiiyu.com/tags/iOS/"/>
    
  </entry>
  
</feed>
